{"version":3,"sources":["./src/app/product-module/services/product-resolve.service.ts","./src/app/product-module/services/product.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAyC;;;AASlC,MAAM,qBAAqB;IAGhC,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAChD,IAAI,CAAC,UAAU,GAAC,CAAC,CAAC;IACpB,CAAC;IAED,OAAO;QACL,OAAO,CACL,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CACpD,CAAC;IACJ,CAAC;;0FAXU,qBAAqB;wGAArB,qBAAqB,WAArB,qBAAqB,mBAFpB,MAAM;6FAEP,qBAAqB;cAHjC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAyC;AACoB;;;AAStD,MAAM,cAAc;IACzB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAC1C,CAAC;IAEM,cAAc,CAAC,IAAY;QAChC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAe,sCAAsC,IAAI,EAAE,CAAC,CAAC,CAAC;IAC3F,CAAC;IAEM,wBAAwB,CAAC,IAAY,EAAE,QAAgB;QAC5D,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAe,iCAAiC,QAAQ,UAAU,IAAI,EAAE,CAAC,CAAC,CAAC;IACxG,CAAC;IACM,oBAAoB,CAAC,IAAY,EAAE,IAAY;QACpD,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAe,sCAAsC,IAAI,UAAU,IAAI,EAAE,CAAC,CAAC,CAAC;IACzG,CAAC;IAIM,IAAI,CAAC,QAAkB;QAC5B,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC1C,IAAI,QAAQ,GAAG,SAAS,GAAG,KAAK,CAAC;QACjC,MAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC;QACjE,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAW,+BAA+B,EAAE,QAAQ,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC,CAAC;IAChG,CAAC;IAEM,MAAM,CAAC,QAAkB,EAAE,EAAU;QAC1C,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC1C,IAAI,QAAQ,GAAG,SAAS,GAAG,KAAK,CAAC;QACjC,MAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,eAAe,EAAE,QAAQ,CAAE,CAAC;QAClE,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAW,iCAAiC,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC,CAAC;IACrG,CAAC;IAEM,aAAa,CAAC,EAAU;QAC7B,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC1C,IAAI,QAAQ,GAAG,SAAS,GAAG,KAAK,CAAC;QACjC,MAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC;QACjE,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,iCAAiC,EAAE,EAAE,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IAC/F,CAAC;;4EApCU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB","file":"common.js","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {Resolve} from \"@angular/router\";\r\nimport {Observable} from \"rxjs\";\r\nimport {ProductService} from \"./product.service\";\r\nimport {IProductPage} from \"../models/productPageModel\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductResolveService implements Resolve<IProductPage> {\r\n  public pageNumber:number;\r\n\r\n  constructor(private productService: ProductService) {\r\n    this.pageNumber=0;\r\n  }\r\n\r\n  resolve(): Observable<IProductPage> {\r\n    return (\r\n      this.productService.getAllProducts(this.pageNumber)\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {IProductPage} from \"../models/productPageModel\";\r\nimport {IProduct} from \"../models/productModel\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n\r\n  public getAllProducts(page: number): Observable<IProductPage> {\r\n    return (this.httpClient.get<IProductPage>(`http://localhost:8080/product?page=${page}`));\r\n  }\r\n\r\n  public getAllProductsByCategory(page: number, category: string): Observable<IProductPage> {\r\n    return (this.httpClient.get<IProductPage>(`http://localhost:8080/product/${category}/?page=${page}`));\r\n  }\r\n  public getAllProductsByName(page: number, name: string): Observable<IProductPage> {\r\n    return (this.httpClient.get<IProductPage>(`http://localhost:8080/product/name/${name}/?page=${page}`));\r\n  }\r\n\r\n\r\n\r\n  public save(formData: FormData): Observable<FormData> {\r\n    let token = localStorage.getItem(\"token\");\r\n    let tokenSTR = 'Bearer ' + token;\r\n    const headers = new HttpHeaders().set(\"Authorization\", tokenSTR);\r\n    return (this.httpClient.post<FormData>('http://localhost:8080/product', formData, {headers}));\r\n  }\r\n\r\n  public update(formData: FormData, id: number): Observable<IProduct> {\r\n    let token = localStorage.getItem(\"token\");\r\n    let tokenSTR = 'Bearer ' + token;\r\n    const headers = new HttpHeaders().set(\"Authorization\", tokenSTR,);\r\n    return (this.httpClient.put<IProduct>(`http://localhost:8080/product/${id}`, formData, {headers}));\r\n  }\r\n\r\n  public deleteProduct(id: number) {\r\n    let token = localStorage.getItem(\"token\");\r\n    let tokenSTR = 'Bearer ' + token;\r\n    const headers = new HttpHeaders().set(\"Authorization\", tokenSTR);\r\n    return (this.httpClient.delete(`http://localhost:8080/product/${id}`, {headers}).subscribe())\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}