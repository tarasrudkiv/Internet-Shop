{"version":3,"sources":["./src/app/product-module/services/product-resolve.service.ts","./src/app/product-module/services/product.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAyC;;;AASlC,MAAM,qBAAqB;IAGhC,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAChD,IAAI,CAAC,UAAU,GAAC,CAAC,CAAC;IACpB,CAAC;IAED,OAAO;QACL,OAAO,CACL,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CACpD,CAAC;IACJ,CAAC;;0FAXU,qBAAqB;wGAArB,qBAAqB,WAArB,qBAAqB,mBAFpB,MAAM;6FAEP,qBAAqB;cAHjC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAyC;;;AAUlC,MAAM,cAAc;IACzB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAC1C,CAAC;IACM,cAAc,CAAC,IAAW;QAC/B,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAe,sCAAsC,IAAI,EAAE,CAAC,CAAC,CAAC;IAC3F,CAAC;IACM,aAAa,CAAC,EAAU;QAC7B,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAW,iCAAiC,EAAE,EAAE,CAAC,CAAC,CAAC;IAChF,CAAC;IACM,IAAI,CAAC,OAAiB;QAC3B,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAW,+BAA+B,EAAC,OAAO,CAAC,CAAC,CAAC;IACnF,CAAC;IAEM,MAAM,CAAC,OAAiB,EAAE,EAAS;QACxC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAW,iCAAiC,EAAE,EAAE,EAAC,OAAO,CAAC,CAAC,CAAC;IACxF,CAAC;IACM,aAAa,CAAC,EAAU;QAC7B,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,iCAAiC,EAAE,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IACpF,CAAC;;4EAlBU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB","file":"common.js","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {Resolve} from \"@angular/router\";\r\nimport {Observable} from \"rxjs\";\r\nimport {ProductService} from \"./product.service\";\r\nimport {IProductPage} from \"../models/productPageModel\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductResolveService implements Resolve<IProductPage> {\r\n  public pageNumber:number;\r\n\r\n  constructor(private productService: ProductService) {\r\n    this.pageNumber=0;\r\n  }\r\n\r\n  resolve(): Observable<IProductPage> {\r\n    return (\r\n      this.productService.getAllProducts(this.pageNumber)\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {IProductPage} from \"../models/productPageModel\";\r\nimport {IProduct} from \"../models/productModel\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n  public getAllProducts(page:number): Observable<IProductPage> {\r\n    return (this.httpClient.get<IProductPage>(`http://localhost:8080/product?page=${page}`));\r\n  }\r\n  public getOneProduct(id: number): Observable<IProduct> {\r\n    return (this.httpClient.get<IProduct>(`http://localhost:8080/product/${id}`));\r\n  }\r\n  public save(product: IProduct): Observable<IProduct> {\r\n    return (this.httpClient.post<IProduct>('http://localhost:8080/product',product));\r\n  }\r\n\r\n  public update(product: IProduct ,id:number): Observable<IProduct> {\r\n    return (this.httpClient.put<IProduct>(`http://localhost:8080/product/${id}`,product));\r\n  }\r\n  public deleteProduct(id: number){\r\n    return (this.httpClient.delete(`http://localhost:8080/product/${id}`).subscribe())\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}