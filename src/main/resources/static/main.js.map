{"version":3,"sources":["./src/app/services/resolve/product-resolve.service.ts","./src/environments/environment.ts","./src/app/services/product/product.service.ts","./src/app/components/admin-page/admin-page.component.ts","./src/app/components/admin-page/admin-page.component.html","./src/app/components/app/app.component.ts","./src/app/components/app/app.component.html","./src/app/components/update-computer/update-computer.component.ts","./src/app/components/update-computer/update-computer.component.html","./src/app/app.module.ts","./src/app/components/product-details/product-details.component.ts","./src/app/components/product-details/product-details.component.html","./src/app/components/home-page/home-page.component.ts","./src/app/components/home-page/home-page.component.html","./src/app/components/product-page/product-page.component.ts","./src/app/components/product-page/product-page.component.html","./src/app/components/add-product-page/add-product-page.component.ts","./src/app/components/add-product-page/add-product-page.component.html","./src/app/components/product-with-settings/product-with-settings.component.ts","./src/app/components/product-with-settings/product-with-settings.component.html","./src/app/components/all-products/all-products.component.ts","./src/app/components/all-products/all-products.component.html","./src/app/components/product-card/product-card.component.ts","./src/app/components/product-card/product-card.component.html","./src/app/app-routing.module.ts","./src/app/components/add-computer/add-computer.component.ts","./src/app/components/add-computer/add-computer.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {Resolve} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\nimport {ProductService} from \"../product/product.service\";\nimport {IProductPage} from \"../../models/productPageModel\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductResolveService implements Resolve<IProductPage> {\n  public pageNumber:number;\n\n  constructor(private productService: ProductService) {\n    this.pageNumber=0;\n  }\n\n  resolve(): Observable<IProductPage> {\n    return (\n      this.productService.getAllProducts(this.pageNumber)\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, Subscription} from 'rxjs';\nimport {IProduct} from '../../models/productModel';\nimport {IProductPage} from \"../../models/productPageModel\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  constructor(private httpClient: HttpClient) {\n  }\n  public getAllProducts(page:number): Observable<IProductPage> {\n    return (this.httpClient.get<IProductPage>(`http://localhost:8080/product?page=${page}`));\n  }\n  public getOneProduct(id: number): Observable<IProduct> {\n    return (this.httpClient.get<IProduct>(`http://localhost:8080/product/${id}`));\n  }\n  public save(product: IProduct): Observable<IProduct> {\n    return (this.httpClient.post<IProduct>('http://localhost:8080/product',product));\n  }\n\n  public update(product: IProduct ,id:number): Observable<IProduct> {\n    return (this.httpClient.put<IProduct>(`http://localhost:8080/product/${id}`,product));\n  }\n  public deleteProduct(id: number){\n    return (this.httpClient.delete(`http://localhost:8080/product/${id}`).subscribe())\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-page',\n  templateUrl: './admin-page.component.html',\n  styleUrls: ['./admin-page.component.css']\n})\nexport class AdminPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ul>\n  <a routerLink=\"/admin/addProduct\">\n    <li>add product</li>\n  </a>\n  <a routerLink=\"/admin/productDetails\">\n    <li>Product details</li>\n  </a>\n</ul>\n<router-outlet></router-outlet>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<app-home-page></app-home-page>\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport {ProductService} from \"../../services/product/product.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {IProduct} from \"../../models/productModel\";\n\n@Component({\n  selector: 'app-update-computer',\n  templateUrl: './update-computer.component.html',\n  styleUrls: ['./update-computer.component.css']\n})\nexport class UpdateComputerComponent implements OnInit {\n  productForUpdate: IProduct;\n  constructor(private productService: ProductService,)\n  {\n    this.productForUpdate = history.state.product;\n  }\n  public print(){\n    console.log(this.productForUpdate)\n  }\n  public updateComputer(){\n    this.productService.update(this.productForUpdate,this.productForUpdate.id).subscribe()\n  }\n  ngOnInit(): void {\n  }\n}\n","<div *ngIf=\"productForUpdate\">\n  <form #updateComputerForm=\"ngForm\">\n\n    <p>Product name</p>\n    <input type=\"text\" name=\"computerName\" [(ngModel)]=\"productForUpdate.name\">\n\n    <p>Product description</p>\n    <textarea type=\"text\" name=\"computerDescription\" [(ngModel)]=\"productForUpdate.description\"></textarea>\n\n    <p>Product price</p>\n    <input type=\"number\" name=\"computerPrice\" [(ngModel)]=\"productForUpdate.price\">\n\n    <p>Product status</p>\n    <select name=\"computerStatus\" [(ngModel)]=\"productForUpdate.status\">\n      <option>In stock</option>\n      <option>is over</option>\n    </select>\n\n    <p>processor name</p>\n    <input type=\"text\" name=\"cpuName\" [(ngModel)]=\"productForUpdate.components[0].componentName\">\n\n    <p>Processor clock speed</p>\n    <input type=\"number\" name=\"cpuClockSpeed\"\n           [(ngModel)]=\"productForUpdate.components[0].componentValues[0].propertyValue\">\n\n    <p>Processor number of cores</p>\n    <input type=\"number\" name=\"cpuNumberOfCores\"\n           [(ngModel)]=\"productForUpdate.components[0].componentValues[1].propertyValue\">\n\n    <p>Graphics card name </p>\n    <input type=\"text\" name=\"graphicsCardName\"\n           [(ngModel)]=\"productForUpdate.components[1].componentName\">\n\n    <p>Graphics card amount of video memory</p>\n    <input type=\"number\" name=\"graphicsCardAmountOfVideoMemory\"\n           [(ngModel)]=\"productForUpdate.components[1].componentValues[0].propertyValue\">\n\n    <p>RAM name</p>\n    <input type=\"text\" name=\"ramName\" [(ngModel)]=\"productForUpdate.components[2].componentName\">\n\n    <p>Amount of RAM memory</p>\n    <input type=\"number\" name=\"mountOfRamMemory\"\n           [(ngModel)]=\"productForUpdate.components[2].componentValues[0].propertyValue\">\n\n  </form>\n  <button (click)=\"updateComputer()\">update</button>\n  <button (click)=\"print()\">print</button>\n</div>\n\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './components/app/app.component';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ProductPageComponent} from \"./components/product-page/product-page.component\";\nimport {AddComputerComponent} from \"./components/add-computer/add-computer.component\";\nimport {ProductCardComponent} from './components/product-card/product-card.component';\nimport {AllProductsComponent} from \"./components/all-products/all-products.component\";\nimport {HomePageComponent} from './components/home-page/home-page.component';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {AdminPageComponent} from './components/admin-page/admin-page.component';\nimport {AddProductPageComponent} from './components/add-product-page/add-product-page.component';\nimport { ProductDetailsComponent } from './components/product-details/product-details.component';\nimport { ProductWithSettingsComponent } from './components/product-with-settings/product-with-settings.component';\nimport {ProductResolveService} from \"./services/resolve/product-resolve.service\";\nimport { UpdateComputerComponent } from './components/update-computer/update-computer.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nconst routes: Routes = [\n  {path: 'home', component: HomePageComponent},\n  {path: 'allProducts', component: AllProductsComponent, resolve:{allProducts: ProductResolveService}},\n  {path: 'AddComputer', component: AddComputerComponent},\n  {path: 'product/:id', component: ProductPageComponent},\n    {path: 'update/computer/:id',component: UpdateComputerComponent },\n  {\n    path: 'admin', component: AdminPageComponent, children: [\n      {path:'productDetails',component: ProductDetailsComponent, resolve:{allProducts: ProductResolveService}},\n      {path:'addProduct', component: AddProductPageComponent,children:[\n          {path:'addComputer',component: AddComputerComponent}\n        ]}\n]\n},\n\n]\n;\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductPageComponent,\n    AddComputerComponent,\n    ProductCardComponent,\n    AllProductsComponent,\n    HomePageComponent,\n    AdminPageComponent,\n    AddProductPageComponent,\n    ProductDetailsComponent,\n    ProductWithSettingsComponent,\n    UpdateComputerComponent,\n    UpdateComputerComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot(routes),\n    NgbModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ProductService} from \"../../services/product/product.service\";\nimport {IProduct} from \"../../models/productModel\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {IProductPage} from \"../../models/productPageModel\";\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.css']\n})\nexport class ProductDetailsComponent implements OnInit {\n  products: IProduct[];\n  data: IProductPage;\n  totalElements: number;\n\n  constructor(private activatedRoute: ActivatedRoute, private  router: Router, private productService: ProductService) {\n    this.activatedRoute.data.subscribe(value => this.data = value.allProducts);\n    this.products = this.data.productList;\n    this.totalElements = this.data.totalElements;\n  }\n\n  deleteComponent(id: number) {\n    this.productService.deleteProduct(id);\n    const findId = (element) => element.id === id;\n    let deleteIndex = this.products.findIndex(findId);\n    this.products.splice(deleteIndex, 1);\n    this.activatedRoute.data.subscribe(value => this.data = value.allProducts);\n    this.totalElements=this.data.totalElements\n  }\n\n  onPageChange(pageNumber: number) {\n    this.productService.getAllProducts(pageNumber - 1).subscribe(value =>\n      this.products = value.productList);\n  }\n\n  toProductDetails(product: IProduct) {\n    this.router.navigate(['update', product.category, product.id], {state: {product}});\n  }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<div>\r\n<app-product-with-settings\r\n  *ngFor=\"let product of products\" [product]=\"product\"\r\n  (productSelected)=\"toProductDetails(product)\"\r\n  (productDeleted)=\"deleteComponent(product.id)\"\r\n></app-product-with-settings>\r\n  <ngb-pagination class=\"d-flex justify-content-center\" [collectionSize]=\"totalElements\" maxSize=\"10\"\r\n                  (pageChange)=\"onPageChange($event)\"  [boundaryLinks]=\"true\"></ngb-pagination>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ul>\n  <li><a routerLink=\"allProducts\">All products</a></li>\n  <li><a routerLink=\"admin\">Admin</a></li>\n</ul>\n","import {Component, OnInit} from '@angular/core';\nimport {ProductService} from '../../services/product/product.service';\nimport {IProduct} from \"../../models/productModel\";\nimport {ActivatedRoute} from \"@angular/router\";\n\n@Component({\n  selector: 'app-product-page',\n  templateUrl: './product-page.component.html',\n  styleUrls: ['./product-page.component.css']\n})\nexport class ProductPageComponent implements OnInit {\n  singleProduct: IProduct;\n  constructor() {\n    this.singleProduct = history.state.product\n  }\n  ngOnInit(): void {\n\n  }\n\n}\n","<div *ngIf=\"singleProduct\">\r\n    <p>{{singleProduct.name}}</p>\r\n    <p>{{singleProduct.price}}</p>\r\n    <p>{{singleProduct.description}}</p>\r\n    <p>{{singleProduct.status}}</p>\r\n    <div>\r\n      <h2> Processor</h2>\r\n      <p>{{singleProduct.components[0].componentName}}</p>\r\n      <p>{{singleProduct.components[0].componentValues[0].propertyName}}</p>\r\n      <p>{{singleProduct.components[0].componentValues[0].propertyValue}}</p>\r\n      <p>{{singleProduct.components[0].componentValues[1].propertyName}}</p>\r\n      <p>{{singleProduct.components[0].componentValues[1].propertyValue}}</p>\r\n    </div>\r\n    <div>\r\n      <h2>Video card</h2>\r\n      <p>{{singleProduct.components[1].componentName}}</p>\r\n      <p>{{singleProduct.components[1].componentValues[0].propertyName}}</p>\r\n      <p>{{singleProduct.components[1].componentValues[0].propertyValue}}</p>\r\n    </div>\r\n    <div>\r\n      <h2>RAM</h2>\r\n      <p>{{singleProduct.components[2].componentName}}</p>\r\n      <p>{{singleProduct.components[2].componentValues[0].propertyName}}</p>\r\n      <p>{{singleProduct.components[2].componentValues[0].propertyValue}}</p>\r\n    </div>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-add-product-page',\n  templateUrl: './add-product-page.component.html',\n  styleUrls: ['./add-product-page.component.css']\n})\nexport class AddProductPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ul>\n  <a routerLink=\"/admin/addProduct/addComputer\">\n    <li>add computer</li>\n  </a>\n</ul>\n<router-outlet></router-outlet>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {IProduct} from \"../../models/productModel\";\nimport {ProductService} from \"../../services/product/product.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-product-with-settings',\n  templateUrl: './product-with-settings.component.html',\n  styleUrls: ['./product-with-settings.component.css']\n})\nexport class ProductWithSettingsComponent implements OnInit {\n  @Input() product: IProduct;\n  @Output() productSelected: EventEmitter<IProduct> = new EventEmitter;\n  @Output() productDeleted: EventEmitter<IProduct> = new EventEmitter;\n\n\n\n  constructor() {\n  }\n  public deleteProduct(id: number): void {\n    this.productDeleted.emit()\n  }\n\n  public openUpdatePage() {\n    this.productSelected.emit()\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\r\n    <table [ngClass]=\"{table:true}\">\r\n      <tr>\r\n        <td [ngClass]=\"{id:true}\">{{product.id}}</td>\r\n        <td [ngClass]=\"{name:true}\" >{{product.name}}</td>\r\n        <td [ngClass]=\"{category:true}\">{{product.category}}</td>\r\n        <td [ngClass]=\"{status:true}\"> {{product.status}}</td>\r\n        <td><button (click)=\"deleteProduct(product.id)\">delete</button></td>\r\n        <td><button (click)=\"openUpdatePage()\">update</button></td>\r\n      </tr>\r\n    </table>\r\n</div>\r\n\r\n","import {Component, OnInit} from '@angular/core';\nimport {IProduct} from '../../models/productModel';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {IProductPage} from \"../../models/productPageModel\";\nimport {ProductService} from \"../../services/product/product.service\";\n\n@Component({\n  selector: 'app-all-products',\n  templateUrl: './all-products.component.html',\n  styleUrls: ['./all-products.component.css']\n})\nexport class AllProductsComponent implements OnInit {\n  data: IProductPage;\n  products: IProduct[];\n  totalElements: number;\n\n  constructor(private activatedRoute: ActivatedRoute, private  router: Router, private productService: ProductService) {\n    this.activatedRoute.data.subscribe(value => this.data = value.allProducts);\n    this.products = this.data.productList;\n    this.totalElements = this.data.totalElements;\n  }\n\n  onPageChange(pageNumber: number) {\n    this.productService.getAllProducts(pageNumber - 1).subscribe(value =>\n      this.products = value.productList);\n  }\n\n  toProductDetails(product: IProduct) {\n    this.router.navigate(['product', product.id], {state: {product}})\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"products\">\n  <app-product-card\n    *ngFor=\"let product of products\" [product]=\"product\"\n    (productSelected)=\"toProductDetails(product)\"\n  ></app-product-card>\n  <ngb-pagination class=\"d-flex justify-content-center\" [collectionSize]=\"totalElements\" maxSize=\"10\"\n                  (pageChange)=\"onPageChange($event)\"  [boundaryLinks]=\"true\"></ngb-pagination>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {IProduct} from \"../../models/productModel\";\n\n\n@Component({\n  selector: 'app-product-card',\n  templateUrl: './product-card.component.html',\n  styleUrls: ['./product-card.component.css']\n})\nexport class ProductCardComponent implements OnInit {\n  @Input() product: IProduct;\n  @Output() productSelected: EventEmitter<IProduct> = new EventEmitter;\n\n  public showDetails() {\n    this.productSelected.emit();\n  }\n\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<div (click)=\"showDetails()\"\r\n     [ngClass]=\"{main:true}\">\r\n  <div [ngClass]=\"{picture:true}\"></div>\r\n  <div>{{product.id}}</div>\r\n  <div>{{product.name}}</div>\r\n  <div>{{product.category}}</div>\r\n  <div>{{product.price}}</div>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {IProduct} from '../../models/productModel';\nimport {ProductService} from \"../../services/product/product.service\";\n\n@Component({\n  selector: 'app-add-computer',\n  templateUrl: './add-computer.component.html',\n  styleUrls: ['./add-computer.component.css']\n})\nexport class AddComputerComponent implements OnInit {\n  computer: IProduct =\n    {\n      name: '',\n      description: '',\n      price: 0,\n      status: '',\n      category: 'computer',\n      components: [\n        {\n          componentName: '',\n          component_id: 'cpu',\n          componentValues: [\n            {\n              propertyName: 'cpu clock speed',\n              propertyValue: 0,\n            },\n            {\n              propertyName: 'cpu number Of cores',\n              propertyValue: 0,\n            }\n          ]\n        },\n        {\n          componentName: '',\n          component_id: 'graphics card',\n          componentValues: [\n            {\n              propertyName: 'graphics card amount Of video memory',\n              propertyValue: 0\n            }\n          ]\n        },\n        {\n          componentName: '',  // ram  name\n          component_id: 'ram',\n          componentValues: [\n            {\n              propertyName: 'amount Of RAM memory',\n              propertyValue: 0\n            }\n          ]\n        }\n      ],\n    };\n\n  constructor(private productService: ProductService) {\n  }\n\n  save(): void {\n    this.productService.save(this.computer).subscribe();\n  }\n\n  print(): void {\n    console.log(this.computer)\n  }\n\n  ngOnInit(): void {\n  }\n}\n","<form #computerForm=\"ngForm\"  >\r\n  <p>Product name</p>\r\n  <input type=\"text\" name=\"computerName\" [(ngModel)]=\"computer.name\">\r\n  <p>Product description</p>\r\n  <textarea type=\"text\" name=\"computerDescription\" [(ngModel)]=\"computer.description\"></textarea>\r\n  <p>Product price</p>\r\n  <input type=\"number\" name=\"computerPrice\" [(ngModel)]=\"computer.price\">\r\n  <p>Product status</p>\r\n  <select name=\"computerStatus\" [(ngModel)]=\"computer.status\">\r\n    <option>In stock</option>\r\n    <option>is over</option>\r\n  </select>\r\n  <p>processor name</p>\r\n  <input type=\"text\" name=\"cpuName\" [(ngModel)]=\"computer.components[0].componentName\">\r\n  <p>Processor clock speed</p>\r\n  <input type=\"number\" name=\"cpuClockSpeed\" [(ngModel)]=\"computer.components[0].componentValues[0].propertyValue\">\r\n  <p>Processor number of cores</p>\r\n  <input type=\"number\" name=\"cpuNumberOfCores\" [(ngModel)]=\"computer.components[0].componentValues[1].propertyValue\">\r\n  <p>Graphics card name </p>\r\n  <input type=\" text\" name=\"graphicsCardName\" [(ngModel)]=\"computer.components[1].componentName\">\r\n  <p>Graphics card amount of video memory</p>\r\n  <input type=\"number\" name=\"graphicsCardAmountOfVideoMemory\" [(ngModel)]=\"computer.components[1].componentValues[0].propertyValue\">\r\n  <p>RAM name</p>\r\n  <input type=\"text\" name=\"ramName\" [(ngModel)]=\"computer.components[2].componentName\">\r\n  <p>Amount of RAM memory</p>\r\n  <input type=\"number\" name=\"mountOfRamMemory\" [(ngModel)]=\"computer.components[2].componentValues[0].propertyValue\">\r\n</form>\r\n<button (click)=\"save()\">save</button>\r\n<button (click)=\"print()\">print</button>\r\n\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}