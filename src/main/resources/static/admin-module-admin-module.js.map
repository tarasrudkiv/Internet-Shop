{"version":3,"sources":["./src/app/admin-module/components/update-products/update-console/update-console.component.ts","./src/app/admin-module/components/update-products/update-console/update-console.component.html","./src/app/admin-module/components/add-products/add-tv/add-tv.component.ts","./src/app/admin-module/components/add-products/add-tv/add-tv.component.html","./src/app/admin-module/components/product-details/product-details.component.ts","./src/app/admin-module/components/product-details/product-details.component.html","./src/app/admin-module/components/add-products/add-console/add-console.component.ts","./src/app/admin-module/components/add-products/add-console/add-console.component.html","./src/app/admin-module/components/add-products/add-smartphone/add-smartphone.component.ts","./src/app/admin-module/components/add-products/add-smartphone/add-smartphone.component.html","./src/app/admin-module/components/update-products/update-laptop/update-laptop.component.ts","./src/app/admin-module/components/update-products/update-laptop/update-laptop.component.html","./src/app/admin-module/components/update-products/update-computer/update-computer.component.ts","./src/app/admin-module/components/update-products/update-computer/update-computer.component.html","./src/app/admin-module/admin.module.ts","./src/app/admin-module/components/product-with-settings/product-with-settings.component.ts","./src/app/admin-module/components/product-with-settings/product-with-settings.component.html","./src/app/admin-module/components/update-products/update-tv/update-tv.component.ts","./src/app/admin-module/components/update-products/update-tv/update-tv.component.html","./src/app/admin-module/components/update-products/update-smart-watch/update-smart-watch.component.ts","./src/app/admin-module/components/update-products/update-smart-watch/update-smart-watch.component.html","./src/app/admin-module/components/update-products/update-smartphone/update-smartphone.component.ts","./src/app/admin-module/components/update-products/update-smartphone/update-smartphone.component.html","./src/app/admin-module/components/add-products/add-monitor/add-monitor.component.ts","./src/app/admin-module/components/add-products/add-monitor/add-monitor.component.html","./src/app/admin-module/components/add-products/add-laptop/add-laptop.component.ts","./src/app/admin-module/components/add-products/add-laptop/add-laptop.component.html","./src/app/admin-module/components/update-products/update-monitor/update-monitor.component.ts","./src/app/admin-module/components/update-products/update-monitor/update-monitor.component.html","./src/app/admin-module/components/add-product-page/add-product-page.component.ts","./src/app/admin-module/components/add-product-page/add-product-page.component.html","./src/app/admin-module/components/add-products/add-computer/add-computer.component.ts","./src/app/admin-module/components/add-products/add-computer/add-computer.component.html","./src/app/admin-module/components/add-products/add-smart-watch/add-smart-watch.component.ts","./src/app/admin-module/components/add-products/add-smart-watch/add-smart-watch.component.html"],"names":[],"mappings":"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","file":"admin-module-admin-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {IProduct} from \"../../../../product-module/models/productModel\";\nimport {ProductService} from \"../../../../product-module/services/product.service\";\n\n@Component({\n  selector: 'app-update-console',\n  templateUrl: './update-console.component.html',\n  styleUrls: ['./update-console.component.css']\n})\nexport class UpdateConsoleComponent implements OnInit {\n  productForUpdate: IProduct;\n  image: File;\n  imgURL: any;\n  message: string;\n  public host: string = \"http://localhost:8080\";\n\n  constructor(private productService: ProductService,) {\n    this.productForUpdate = history.state.product;\n  }\n\n  onSelectFile(event) {\n    if (event.target.files.length > 0) {\n      let fileType = event.target.files[0].type;\n      if (fileType.match(\"image\") == null) {\n        this.imgURL = null;\n        this.message = \"only images are supported\";\n        return\n      } else {\n        this.message = \"\";\n        const file = event.target.files[0];\n        this.image = file;\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (event) => {\n          this.imgURL = reader.result\n        }\n      }\n    }\n  }\n\n  public print() {\n    console.log(this.productForUpdate)\n  }\n  public updateProduct() {\n    const formData: FormData = new FormData();\n    formData.append(\"file\", this.image);\n    formData.append(\"product\", JSON.stringify(this.productForUpdate));\n    this.productService.update(formData, this.productForUpdate.id).subscribe();\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<div  *ngIf=\"productForUpdate\">\n<form #updateConsoleForm=\"ngForm\"  >\n  <img src=\"{{host+'/product/image/'+productForUpdate.id}}\" alt=\"\" [ngClass]=\"{picture:true}\">\n  <p>Product name</p>\n  <input type=\"text\" name=\"consoleName\" [(ngModel)]=\"productForUpdate.name\">\n  <p>Product description</p>\n  <textarea type=\"text\" name=\"consoleDescription\" [(ngModel)]=\"productForUpdate.description\"></textarea>\n  <p>Product price</p>\n  <input type=\"number\" name=\"consolePrice\" [(ngModel)]=\"productForUpdate.price\">\n  <p>Product status</p>\n  <select name=\"consoleStatus\" [(ngModel)]=\"productForUpdate.status\">\n    <option>In stock</option>\n    <option>is over</option>\n  </select>\n  <p>processor name</p>\n  <input type=\"text\" name=\"cpuName\" [(ngModel)]=\"productForUpdate.components[0].componentName\">\n  <p>Processor clock speed</p>\n  <input type=\"number\" name=\"cpuClockSpeed\" [(ngModel)]=\"productForUpdate.components[0].componentValues[0].propertyValue\">\n  <p>Processor number of cores</p>\n  <input type=\"number\" name=\"cpuNumberOfCores\" [(ngModel)]=\"productForUpdate.components[0].componentValues[1].propertyValue\">\n  <p>Graphics card name </p>\n  <input type=\"text\" name=\"graphicsCardName\" [(ngModel)]=\"productForUpdate.components[1].componentName\">\n  <p>Graphics card amount of video memory</p>\n  <input type=\"number\" name=\"graphicsCardAmountOfVideoMemory\" [(ngModel)]=\"productForUpdate.components[1].componentValues[0].propertyValue\">\n  <p>RAM name</p>\n  <input type=\"text\" name=\"ramName\" [(ngModel)]=\"productForUpdate.components[2].componentName\">\n  <p>Amount of RAM memory</p>\n  <input type=\"number\" name=\"amountOfRamMemory\" [(ngModel)]=\"productForUpdate.components[2].componentValues[0].propertyValue\">\n  <p>Image</p>\n  <input type=\"file\" name=\"productImage\"  (change)=\"onSelectFile($event)\">\n  <p>{{message}}</p>\n</form>\n  <div>\n    <img [src]=\"imgURL\" height=\"200\"  *ngIf=\"imgURL\">\n  </div>\n  <button (click)=\"updateProduct()\">update</button>\n  <button (click)=\"print()\">print</button>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {IProduct} from \"../../../../product-module/models/productModel\";\nimport {ProductService} from \"../../../../product-module/services/product.service\";\n\n@Component({\n  selector: 'app-add-tv',\n  templateUrl: './add-tv.component.html',\n  styleUrls: ['./add-tv.component.css']\n})\nexport class AddTVComponent implements OnInit {\n  TV: IProduct =\n    {\n      name: '',\n      description: '',\n      price: 0,\n      status: '',\n      category: 'TV',\n      components: [\n        {\n          componentName: '',  // monitor  type\n          component_id: 'monitor',\n          componentValues: [\n            {\n              propertyName: 'screen diagonal',\n              propertyValue: ''\n            },\n            {\n              propertyName: 'screen extension',\n              propertyValue: ''\n            }\n            ,\n          ]\n        },\n        {\n          componentName: '',  //  operating system name type\n          component_id: ' operatingSystem',\n          componentValues: [\n            {\n              propertyName: 'operating system version',\n              propertyValue: ''\n            },\n\n          ]\n        }\n      ],\n    };\n  id: number;\n  image: File;\n  message: string;\n  imgURL: any;\n\n  constructor(private productService: ProductService) {\n  }\n\n  onSelectFile(event) {\n    if (event.target.files.length > 0) {\n      let fileType = event.target.files[0].type;\n      if (fileType.match(\"image\") == null) {\n        this.imgURL = null;\n        this.message = \"only images are supported\";\n        return\n      } else {\n        this.message=\"\";\n        const file = event.target.files[0];\n        this.image = file;\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (event) => {\n          this.imgURL = reader.result\n        }\n      }\n    }\n  }\n\n  save():void{\n    const formData: FormData = new FormData();\n    formData.append(\"file\",this.image);\n    formData.append(\"product\",JSON.stringify(this.TV));\n    this.productService.save(formData).subscribe()\n  }\n\n\n  print(): void {\n    console.log(this.TV)\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<form #TVForm=\"ngForm\">\n  <p>Product name</p>\n  <input type=\"text\" name=\"TVName\" [(ngModel)]=\"TV.name\">\n  <p>Product description</p>\n  <textarea type=\"text\" name=\"TVDescription\" [(ngModel)]=\"TV.description\"></textarea>\n  <p>Product price</p>\n  <input type=\"number\" name=\"TVPrice\" [(ngModel)]=\"TV.price\">\n  <p>Product status</p>\n  <select name=\"TVStatus\" [(ngModel)]=\"TV.status\">\n    <option>In stock</option>\n    <option>is over</option>\n  </select>\n  <p>Monitor type</p>\n  <input type=\"text\" name=\"monitorType\" [(ngModel)]=\"TV.components[0].componentName\">\n  <p>screen diagonal</p>\n  <input type=\"number\" name=\"screenDiagonal\" [(ngModel)]=\"TV.components[0].componentValues[0].propertyValue\">\n  <p>screen extension</p>\n  <input type=\"text\" name=\"screenExtension\" [(ngModel)]=\"TV.components[0].componentValues[1].propertyValue\">\n\n  <p>Operating system type</p>\n  <input type=\"text\" name=\"operatingSystemType\" [(ngModel)]=\"TV.components[1].componentName\">\n  <p>Operating system version</p>\n  <input type=\"number\" name=\"operatingSystemVersion\" [(ngModel)]=\"TV.components[1].componentValues[0].propertyValue\">\n\n  <p>Image</p>\n  <input type=\"file\" name=\"productImage\" (change)=\"onSelectFile($event)\">\n  <p>{{message}}</p>\n</form>\n<button (click)=\"print()\">print</button>\n<button (click)=\"save()\">save</button>\n<div>\n  <img [src]=\"imgURL\" height=\"200\" *ngIf=\"imgURL\">\n</div>\n\n","import {Component, OnInit} from '@angular/core';\r\n\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {IProduct} from \"../../../product-module/models/productModel\";\r\nimport {IProductPage} from \"../../../product-module/models/productPageModel\";\r\nimport {ProductService} from \"../../../product-module/services/product.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-product-details',\r\n  templateUrl: './product-details.component.html',\r\n  styleUrls: ['./product-details.component.css']\r\n})\r\nexport class ProductDetailsComponent implements OnInit {\r\n  products: IProduct[];\r\n  data: IProductPage;\r\n  totalElements: number;\r\n\r\n  constructor(private activatedRoute: ActivatedRoute, private  router: Router, private productService: ProductService) {\r\n    this.activatedRoute.data.subscribe(value => this.data = value.allProducts);\r\n    this.products = this.data.productList;\r\n    this.totalElements = this.data.totalElements;\r\n  }\r\n\r\n  deleteComponent(id: number) {\r\n    this.productService.deleteProduct(id);\r\n    const findId = (element) => element.id === id;\r\n    let deleteIndex = this.products.findIndex(findId);\r\n    this.products.splice(deleteIndex, 1);\r\n  }\r\n  onPageChange(pageNumber: number) {\r\n    this.productService.getAllProducts(pageNumber - 1).subscribe(value =>\r\n      this.products = value.productList);\r\n  }\r\n  toProductDetails(product: IProduct) {\r\n    this.router.navigate(['admin/update', product.category, product.id], {state: {product}});\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","<div>\r\n<app-product-with-settings\r\n  *ngFor=\"let product of products\" [product]=\"product\"\r\n  (productSelected)=\"toProductDetails(product)\"\r\n  (productDeleted)=\"deleteComponent(product.id)\"\r\n></app-product-with-settings>\r\n  <ngb-pagination class=\"d-flex justify-content-center\" [collectionSize]=\"totalElements\" maxSize=\"10\"\r\n                  (pageChange)=\"onPageChange($event)\"  [boundaryLinks]=\"true\"></ngb-pagination>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport {IProduct} from \"../../../../product-module/models/productModel\";\nimport {ProductService} from \"../../../../product-module/services/product.service\";\n\n@Component({\n  selector: 'app-add-console',\n  templateUrl: './add-console.component.html',\n  styleUrls: ['./add-console.component.css']\n})\nexport class AddConsoleComponent implements OnInit {\n  console: IProduct =\n    {\n      name: '',\n      description: '',\n      price: 0,\n      status: '',\n      category: 'console',\n      components: [\n        {\n          componentName: '',\n          component_id: 'cpu',\n          componentValues: [\n            {\n              propertyName: 'cpu clock speed',\n              propertyValue: '',\n            },\n            {\n              propertyName: 'cpu number Of cores',\n              propertyValue: '',\n            }\n          ]\n        },\n        {\n          componentName: '',\n          component_id: 'graphics card',\n          componentValues: [\n            {\n              propertyName: 'graphics card amount Of video memory',\n              propertyValue: ''\n            }\n          ]\n        },\n        {\n          componentName: '',  // ram  name\n          component_id: 'ram',\n          componentValues: [\n            {\n              propertyName: 'amount Of RAM memory',\n              propertyValue: ''\n            }\n          ]\n        }\n      ],\n    };\n  id: number;\n  image: File;\n  message: string;\n  imgURL: any;\n\n  constructor(private productService: ProductService) {\n  }\n\n  onSelectFile(event) {\n    if (event.target.files.length > 0) {\n      let fileType = event.target.files[0].type;\n      if (fileType.match(\"image\") == null) {\n        this.imgURL = null;\n        this.message = \"only images are supported\";\n        return\n      } else {\n        this.message=\"\";\n        const file = event.target.files[0];\n        this.image = file;\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (event) => {\n          this.imgURL = reader.result\n        }\n      }\n    }\n  }\n\n  save():void{\n    const formData: FormData = new FormData();\n    formData.append(\"file\",this.image);\n    formData.append(\"product\",JSON.stringify(this.console));\n    this.productService.save(formData).subscribe()\n  }\n\n\n  print(): void {\n    console.log(this.console)\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<form #consoleForm=\"ngForm\"  >\n  <p>Product name</p>\n  <input type=\"text\" name=\"consoleName\" [(ngModel)]=\"console.name\">\n  <p>Product description</p>\n  <textarea type=\"text\" name=\"consoleDescription\" [(ngModel)]=\"console.description\"></textarea>\n  <p>Product price</p>\n  <input type=\"number\" name=\"consolePrice\" [(ngModel)]=\"console.price\">\n  <p>Product status</p>\n  <select name=\"consoleStatus\" [(ngModel)]=\"console.status\">\n    <option>In stock</option>\n    <option>is over</option>\n  </select>\n  <p>processor name</p>\n  <input type=\"text\" name=\"cpuName\" [(ngModel)]=\"console.components[0].componentName\">\n  <p>Processor clock speed</p>\n  <input type=\"number\" name=\"cpuClockSpeed\" [(ngModel)]=\"console.components[0].componentValues[0].propertyValue\">\n  <p>Processor number of cores</p>\n  <input type=\"number\" name=\"cpuNumberOfCores\" [(ngModel)]=\"console.components[0].componentValues[1].propertyValue\">\n  <p>Graphics card name </p>\n  <input type=\"text\" name=\"graphicsCardName\" [(ngModel)]=\"console.components[1].componentName\">\n  <p>Graphics card amount of video memory</p>\n  <input type=\"number\" name=\"graphicsCardAmountOfVideoMemory\" [(ngModel)]=\"console.components[1].componentValues[0].propertyValue\">\n  <p>RAM name</p>\n  <input type=\"text\" name=\"ramName\" [(ngModel)]=\"console.components[2].componentName\">\n  <p>Amount of RAM memory</p>\n  <input type=\"number\" name=\"amountOfRamMemory\" [(ngModel)]=\"console.components[2].componentValues[0].propertyValue\">\n  <p>Image</p>\n  <input type=\"file\" name=\"productImage\"  (change)=\"onSelectFile($event)\">\n  <p>{{message}}</p>\n</form>\n<button (click)=\"print()\">print</button>\n<button (click)=\"save()\">save</button>\n<div>\n  <img [src]=\"imgURL\" height=\"200\"  *ngIf=\"imgURL\">\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport {IProduct} from \"../../../../product-module/models/productModel\";\nimport {ProductService} from \"../../../../product-module/services/product.service\";\n\n@Component({\n  selector: 'app-add-smartphone',\n  templateUrl: './add-smartphone.component.html',\n  styleUrls: ['./add-smartphone.component.css']\n})\nexport class AddSmartphoneComponent implements OnInit {\n  smartphone: IProduct =\n    {\n      name: '',\n      description: '',\n      price: 0,\n      status: '',\n      category: 'smartphone',\n      components: [\n        {\n          componentName: '',//0\n          component_id: 'cpu',\n          componentValues: [\n            {\n              propertyName: 'cpu clock speed',\n              propertyValue: ''\n            },\n            {\n              propertyName: 'cpu number Of cores',\n              propertyValue: ''\n            }\n          ]\n        },\n        {\n          componentName: '',//1\n          component_id: 'camera',\n          componentValues: [\n            {\n              propertyName: 'number of cameras',\n              propertyValue: ''\n            },\n            {\n              propertyName: 'number of megapixels of the front camera',\n              propertyValue: ''\n            }\n          ]\n        },\n        {\n          componentName: 'memory',//2\n          component_id: 'memory',\n          componentValues: [\n            {\n              propertyName: 'amount memory',\n              propertyValue: ''\n            },\n            {\n              propertyName: 'amount Of RAM memory',\n              propertyValue: ''\n            }\n          ]\n        },\n        {\n          componentName: '',  // 3\n          component_id: 'display',\n          componentValues: [\n            {\n              propertyName: 'screen diagonal',\n              propertyValue: ''\n            },\n            {\n              propertyName: 'screen extension',\n              propertyValue: ''\n            }\n            ,\n            {\n              propertyName: 'frame rate',\n              propertyValue: ''\n            }\n          ]\n        },\n        {\n          componentName: '',  // 4\n          component_id: 'battery',\n          componentValues: [\n            {\n              propertyName: 'battery capacity',\n              propertyValue: ''\n            },\n\n          ]\n        },\n        {\n          componentName: '',  //  5\n          component_id: ' operatingSystem',\n          componentValues: [\n            {\n              propertyName: 'operating system version',\n              propertyValue: ''\n            },\n\n          ]\n        }\n      ],\n    };\n  id: number;\n  image: File;\n  message: string;\n  imgURL: any;\n\n  constructor(private productService: ProductService) {\n  }\n\n  onSelectFile(event) {\n    if (event.target.files.length > 0) {\n      let fileType = event.target.files[0].type;\n      if (fileType.match(\"image\") == null) {\n        this.imgURL = null;\n        this.message = \"only images are supported\";\n        return\n      } else {\n        this.message=\"\";\n        const file = event.target.files[0];\n        this.image = file;\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (event) => {\n          this.imgURL = reader.result\n        }\n      }\n    }\n  }\n\n  save():void{\n    const formData: FormData = new FormData();\n    formData.append(\"file\",this.image);\n    formData.append(\"product\",JSON.stringify(this.smartphone));\n    this.productService.save(formData).subscribe()\n  }\n\n\n  print(): void {\n    console.log(this.smartphone)\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<form #smartphoneForm=\"ngForm\">\n  <p>Product name</p>\n  <input type=\"text\" name=\"smartphoneName\" [(ngModel)]=\"smartphone.name\">\n  <p>Product description</p>\n  <textarea type=\"text\" name=\"smartphoneDescription\" [(ngModel)]=\"smartphone.description\"></textarea>\n  <p>Product price</p>\n  <input type=\"number\" name=\"smartphonePrice\" [(ngModel)]=\"smartphone.price\">\n  <p>Product status</p>\n  <select name=\"smartphoneStatus\" [(ngModel)]=\"smartphone.status\">\n    <option>In stock</option>\n    <option>is over</option>\n  </select>\n  <p>processor name</p>\n  <input type=\"text\" name=\"cpuName\" [(ngModel)]=\"smartphone.components[0].componentName\">\n  <p>Processor clock speed</p>\n  <input type=\"number\" name=\"cpuClockSpeed\" [(ngModel)]=\"smartphone.components[0].componentValues[0].propertyValue\">\n  <p>Processor number of cores</p>\n  <input type=\"number\" name=\"cpuNumberOfCores\" [(ngModel)]=\"smartphone.components[0].componentValues[1].propertyValue\">\n\n  <p>Camera name </p>\n  <input type=\"text\" name=\"cameraName\" [(ngModel)]=\"smartphone.components[1].componentName\">\n  <p>Number of cameras</p>\n  <input type=\"number\" name=\"numberOfCameras\"\n         [(ngModel)]=\"smartphone.components[1].componentValues[0].propertyValue\">\n  <p>number of megapixels of the front camera</p>\n  <input type=\"number\" name=\"numberOFMegapixelsFrontCamera\"\n         [(ngModel)]=\"smartphone.components[1].componentValues[1].propertyValue\">\n  <p>Amount of memory</p>\n  <input type=\"number\" name=\"amountOfMemory\" [(ngModel)]=\"smartphone.components[2].componentValues[0].propertyValue\">\n  <p>Amount of RAM memory</p>\n  <input type=\"number\" name=\"amountOfRamMemory\" [(ngModel)]=\"smartphone.components[2].componentValues[1].propertyValue\">\n\n  <p>Display type</p>\n  <input type=\"text\" name=\"monitorType\" [(ngModel)]=\"smartphone.components[3].componentName\">\n  <p>screen diagonal</p>\n  <input type=\"number\" name=\"screenDiagonal\" [(ngModel)]=\"smartphone.components[3].componentValues[0].propertyValue\">\n  <p>screen extension</p>\n  <input type=\"text\" name=\"screenExtension\" [(ngModel)]=\"smartphone.components[3].componentValues[1].propertyValue\">\n  <p>frame rate</p>\n  <input type=\"number\" name=\"frameRate\" [(ngModel)]=\"smartphone.components[3].componentValues[2].propertyValue\">\n\n  <p>Battery type</p>\n  <input type=\"text\" name=\"batteryType\" [(ngModel)]=\"smartphone.components[4].componentName\">\n  <p>Battery capacity</p>\n  <input type=\"number\" name=\"batteryCapacity\" [(ngModel)]=\"smartphone.components[4].componentValues[0].propertyValue\">\n  <p>Operating system type</p>\n  <input type=\"text\" name=\"operatingSystemType\" [(ngModel)]=\"smartphone.components[5].componentName\">\n  <p>Operating system version</p>\n  <input type=\"number\" name=\"operatingSystemVersion\" [(ngModel)]=\"smartphone.components[5].componentValues[0].propertyValue\">\n\n  <p>Image</p>\n  <input type=\"file\" name=\"productImage\" (change)=\"onSelectFile($event)\">\n  <p>{{message}}</p>\n</form>\n<button (click)=\"print()\">print</button>\n<button (click)=\"save()\">save</button>\n<div>\n  <img [src]=\"imgURL\" height=\"200\" *ngIf=\"imgURL\">\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport {IProduct} from \"../../../../product-module/models/productModel\";\nimport {ProductService} from \"../../../../product-module/services/product.service\";\n\n@Component({\n  selector: 'app-update-laptop',\n  templateUrl: './update-laptop.component.html',\n  styleUrls: ['./update-laptop.component.css']\n})\nexport class UpdateLaptopComponent implements OnInit {\n  productForUpdate: IProduct;\n  image: File;\n  imgURL: any;\n  message: string;\n  public host: string = \"http://localhost:8080\";\n\n  constructor(private productService: ProductService,) {\n    this.productForUpdate = history.state.product;\n  }\n\n  onSelectFile(event) {\n    if (event.target.files.length > 0) {\n      let fileType = event.target.files[0].type;\n      if (fileType.match(\"image\") == null) {\n        this.imgURL = null;\n        this.message = \"only images are supported\";\n        return\n      } else {\n        this.message = \"\";\n        const file = event.target.files[0];\n        this.image = file;\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (event) => {\n          this.imgURL = reader.result\n        }\n      }\n    }\n  }\n\n  public print() {\n    console.log(this.productForUpdate)\n  }\n  public updateProduct() {\n    const formData: FormData = new FormData();\n    formData.append(\"file\", this.image);\n    formData.append(\"product\", JSON.stringify(this.productForUpdate));\n    this.productService.update(formData, this.productForUpdate.id).subscribe();\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"productForUpdate\">\n  <img src=\"{{host+'/product/image/'+productForUpdate.id}}\" alt=\"\" [ngClass]=\"{picture:true}\">\n  <form #updateLaptopForm=\"ngForm\">\n    <p>Product name</p>\n    <input type=\"text\" name=\"laptopName\" [(ngModel)]=\"productForUpdate.name\">\n    <p>Product description</p>\n    <textarea type=\"text\" name=\"laptopDescription\" [(ngModel)]=\"productForUpdate.description\"></textarea>\n    <p>Product price</p>\n    <input type=\"number\" name=\"laptopPrice\" [(ngModel)]=\"productForUpdate.price\">\n    <p>Product status</p>\n    <select name=\"laptopStatus\" [(ngModel)]=\"productForUpdate.status\">\n      <option>In stock</option>\n      <option>is over</option>\n    </select>\n    <p>processor name</p>\n    <input type=\"text\" name=\"cpuName\" [(ngModel)]=\"productForUpdate.components[0].componentName\">\n    <p>Processor clock speed</p>\n    <input type=\"number\" name=\"cpuClockSpeed\" [(ngModel)]=\"productForUpdate.components[0].componentValues[0].propertyValue\">\n    <p>Processor number of cores</p>\n    <input type=\"number\" name=\"cpuNumberOfCores\" [(ngModel)]=\"productForUpdate.components[0].componentValues[1].propertyValue\">\n    <p>Graphics card name </p>\n    <input type=\"text\" name=\"graphicsCardName\" [(ngModel)]=\"productForUpdate.components[1].componentName\">\n    <p>Graphics card amount of video memory</p>\n    <input type=\"number\" name=\"graphicsCardAmountOfVideoMemory\"\n           [(ngModel)]=\"productForUpdate.components[1].componentValues[0].propertyValue\">\n    <p>RAM name</p>\n    <input type=\"text\" name=\"ramName\" [(ngModel)]=\"productForUpdate.components[2].componentName\">\n    <p>Amount of RAM memory</p>\n    <input type=\"number\" name=\"amountOfRamMemory\" [(ngModel)]=\"productForUpdate.components[2].componentValues[0].propertyValue\">\n    <p>Monitor type</p>\n    <input type=\"text\" name=\"monitorType\" [(ngModel)]=\"productForUpdate.components[3].componentName\">\n    <p>screen diagonal</p>\n    <input type=\"number\" name=\"screenDiagonal\" [(ngModel)]=\"productForUpdate.components[3].componentValues[0].propertyValue\">\n    <p>screen extension</p>\n    <input type=\"text\" name=\"screenExtension\" [(ngModel)]=\"productForUpdate.components[3].componentValues[1].propertyValue\">\n    <p>frame rate</p>\n    <input type=\"number\" name=\"frameRate\" [(ngModel)]=\"productForUpdate.components[3].componentValues[2].propertyValue\">\n    <p>Battery type</p>\n    <input type=\"text\" name=\"batteryType\" [(ngModel)]=\"productForUpdate.components[4].componentName\">\n    <p>Battery capacity</p>\n    <input type=\"number\" name=\"batteryCapacity\" [(ngModel)]=\"productForUpdate.components[4].componentValues[0].propertyValue\">\n    <p>Image</p>\n    <input type=\"file\" name=\"productImage\" (change)=\"onSelectFile($event)\">\n    <p>{{message}}</p>\n  </form>\n  <div>\n    <img [src]=\"imgURL\" height=\"200\"  *ngIf=\"imgURL\">\n  </div>\n  <button (click)=\"updateProduct()\">update</button>\n  <button (click)=\"print()\">print</button>\n</div>\n\n","import {Component, OnInit} from '@angular/core';\r\nimport {IProduct} from \"../../../../product-module/models/productModel\";\r\nimport {ProductService} from \"../../../../product-module/services/product.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-update-computer',\r\n  templateUrl: './update-computer.component.html',\r\n  styleUrls: ['./update-computer.component.css']\r\n})\r\nexport class UpdateComputerComponent implements OnInit {\r\n  productForUpdate: IProduct;\r\n  image: File;\r\n  imgURL: any;\r\n  message: string;\r\n  public host: string = \"http://localhost:8080\";\r\n\r\n  constructor(private productService: ProductService,) {\r\n    this.productForUpdate = history.state.product;\r\n  }\r\n\r\n  onSelectFile(event) {\r\n    if (event.target.files.length > 0) {\r\n      let fileType = event.target.files[0].type;\r\n      if (fileType.match(\"image\") == null) {\r\n        this.imgURL = null;\r\n        this.message = \"only images are supported\";\r\n        return\r\n      } else {\r\n        this.message = \"\";\r\n        const file = event.target.files[0];\r\n        this.image = file;\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = (event) => {\r\n          this.imgURL = reader.result\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public print() {\r\n    console.log(this.productForUpdate)\r\n  }\r\n  public updateProduct() {\r\n    const formData: FormData = new FormData();\r\n    formData.append(\"file\", this.image);\r\n    formData.append(\"product\", JSON.stringify(this.productForUpdate));\r\n    this.productService.update(formData, this.productForUpdate.id).subscribe();\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<div *ngIf=\"productForUpdate\">\r\n  <img src=\"{{host+'/product/image/'+productForUpdate.id}}\" alt=\"\" [ngClass]=\"{picture:true}\">\r\n  <form #updateComputerForm=\"ngForm\">\r\n    <p>Product name</p>\r\n    <input type=\"text\" name=\"computerName\" [(ngModel)]=\"productForUpdate.name\">\r\n\r\n    <p>Product description</p>\r\n    <textarea type=\"text\" name=\"computerDescription\" [(ngModel)]=\"productForUpdate.description\"></textarea>\r\n\r\n    <p>Product price</p>\r\n    <input type=\"number\" name=\"computerPrice\" [(ngModel)]=\"productForUpdate.price\">\r\n\r\n    <p>Product status</p>\r\n    <select name=\"computerStatus\" [(ngModel)]=\"productForUpdate.status\">\r\n      <option>In stock</option>\r\n      <option>is over</option>\r\n    </select>\r\n\r\n    <p>processor name</p>\r\n    <input type=\"text\" name=\"cpuName\" [(ngModel)]=\"productForUpdate.components[0].componentName\">\r\n\r\n    <p>Processor clock speed</p>\r\n    <input type=\"number\" name=\"cpuClockSpeed\"\r\n           [(ngModel)]=\"productForUpdate.components[0].componentValues[0].propertyValue\">\r\n\r\n    <p>Processor number of cores</p>\r\n    <input type=\"number\" name=\"cpuNumberOfCores\"\r\n           [(ngModel)]=\"productForUpdate.components[0].componentValues[1].propertyValue\">\r\n\r\n    <p>Graphics card name </p>\r\n    <input type=\"text\" name=\"graphicsCardName\"\r\n           [(ngModel)]=\"productForUpdate.components[1].componentName\">\r\n\r\n    <p>Graphics card amount of video memory</p>\r\n    <input type=\"number\" name=\"graphicsCardAmountOfVideoMemory\"\r\n           [(ngModel)]=\"productForUpdate.components[1].componentValues[0].propertyValue\">\r\n\r\n    <p>RAM name</p>\r\n    <input type=\"text\" name=\"ramName\" [(ngModel)]=\"productForUpdate.components[2].componentName\">\r\n\r\n    <p>Amount of RAM memory</p>\r\n    <input type=\"number\" name=\"mountOfRamMemory\"\r\n           [(ngModel)]=\"productForUpdate.components[2].componentValues[0].propertyValue\">\r\n    <p>Image</p>\r\n    <input type=\"file\" name=\"productImage\"  (change)=\"onSelectFile($event)\">\r\n    <p>{{message}}</p>\r\n  </form>\r\n  <div>\r\n    <img [src]=\"imgURL\" height=\"200\"  *ngIf=\"imgURL\">\r\n  </div>\r\n  <button (click)=\"updateProduct()\">update</button>\r\n  <button (click)=\"print()\">print</button>\r\n</div>\r\n\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AddComputerComponent} from \"./components/add-products/add-computer/add-computer.component\";\nimport {AddProductPageComponent} from \"./components/add-product-page/add-product-page.component\";\nimport {AdminPageComponent} from \"./components/admin-page/admin-page.component\";\nimport {ProductDetailsComponent} from \"./components/product-details/product-details.component\";\nimport {ProductWithSettingsComponent} from \"./components/product-with-settings/product-with-settings.component\";\nimport {UpdateComputerComponent} from \"./components/update-products/update-computer/update-computer.component\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {FormsModule} from \"@angular/forms\";\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {ProductResolveService} from \"../product-module/services/product-resolve.service\";\nimport {AddLaptopComponent} from './components/add-products/add-laptop/add-laptop.component';\nimport {AddSmartphoneComponent} from './components/add-products/add-smartphone/add-smartphone.component';\nimport {AddTVComponent} from './components/add-products/add-tv/add-tv.component';\nimport {AddMonitorComponent} from './components/add-products/add-monitor/add-monitor.component';\nimport {AddConsoleComponent} from './components/add-products/add-console/add-console.component';\nimport {AddSmartWatchComponent} from './components/add-products/add-smart-watch/add-smart-watch.component';\nimport {UpdateConsoleComponent} from './components/update-products/update-console/update-console.component';\nimport {UpdateLaptopComponent} from './components/update-products/update-laptop/update-laptop.component';\nimport {UpdateSmartphoneComponent} from './components/update-products/update-smartphone/update-smartphone.component';\nimport {UpdateMonitorComponent} from './components/update-products/update-monitor/update-monitor.component';\nimport {UpdateTvComponent} from './components/update-products/update-tv/update-tv.component';\nimport {UpdateSmartWatchComponent} from './components/update-products/update-smart-watch/update-smart-watch.component';\n\n\nconst routes: Routes = [\n\n  {\n    path: '', component: AdminPageComponent, children: [\n      {path: 'productDetails', component: ProductDetailsComponent, resolve: {allProducts: ProductResolveService}},\n      {path: 'allUsers', loadChildren: () => import('../user-module/user.module').then(m => m.UserModule)},\n      {path: 'update/computer/:id', component: UpdateComputerComponent},\n      {path: 'update/laptop/:id', component: UpdateLaptopComponent},\n      {path: 'update/console/:id', component: UpdateConsoleComponent},\n      {path: 'update/smartphone/:id', component: UpdateSmartphoneComponent},\n      {path: 'update/TV/:id', component: UpdateTvComponent},\n      {path: 'update/monitor/:id', component: UpdateMonitorComponent},\n      {path: 'update/smartWatch/:id', component: UpdateSmartWatchComponent},\n      {\n        path: 'addProduct', component: AddProductPageComponent, children: [\n          {path: 'addComputer', component: AddComputerComponent},\n          {path: 'addLaptop', component: AddLaptopComponent},\n          {path: 'addConsole', component: AddConsoleComponent},\n          {path: 'addSmartphone', component: AddSmartphoneComponent},\n          {path: 'addSmartWatch', component: AddSmartWatchComponent},\n          {path: 'addTV', component: AddTVComponent},\n          {path: 'addMonitor', component: AddMonitorComponent},\n        ]\n      }\n    ]\n  },\n];\n\n@NgModule({\n  declarations: [\n    AddComputerComponent,\n    AddProductPageComponent,\n    AdminPageComponent,\n    ProductDetailsComponent,\n    ProductWithSettingsComponent,\n    UpdateComputerComponent,\n    AddLaptopComponent,\n    AddSmartphoneComponent,\n    AddTVComponent,\n    AddMonitorComponent,\n    AddConsoleComponent,\n    AddSmartWatchComponent,\n    UpdateConsoleComponent,\n    UpdateLaptopComponent,\n    UpdateSmartphoneComponent,\n    UpdateMonitorComponent,\n    UpdateTvComponent,\n    UpdateSmartWatchComponent,\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    RouterModule.forChild(routes),\n    FormsModule,\n    NgbModule\n  ]\n})\nexport class AdminModule {\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {IProduct} from \"../../../product-module/models/productModel\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-product-with-settings',\r\n  templateUrl: './product-with-settings.component.html',\r\n  styleUrls: ['./product-with-settings.component.css']\r\n})\r\nexport class ProductWithSettingsComponent implements OnInit {\r\n  @Input() product: IProduct;\r\n  @Output() productSelected: EventEmitter<IProduct> = new EventEmitter;\r\n  @Output() productDeleted: EventEmitter<IProduct> = new EventEmitter;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  public deleteProduct(id: number): void {\r\n    this.productDeleted.emit()\r\n  }\r\n\r\n  public openUpdatePage() {\r\n    this.productSelected.emit()\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<div>\r\n    <table>\r\n<!--    <table [ngClass]=\"{table:true}\">-->\r\n      <tr>\r\n        <td [ngClass]=\"{id:true}\">{{product.id}}</td>\r\n        <td [ngClass]=\"{name:true}\" >{{product.name}}</td>\r\n        <td [ngClass]=\"{category:true}\">{{product.category}}</td>\r\n        <td [ngClass]=\"{status:true}\"> {{product.status}}</td>\r\n        <td><button (click)=\"deleteProduct(product.id)\">delete</button></td>\r\n        <td><button (click)=\"openUpdatePage()\">update</button></td>\r\n      </tr>\r\n    </table>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport {IProduct} from \"../../../../product-module/models/productModel\";\nimport {ProductService} from \"../../../../product-module/services/product.service\";\n\n@Component({\n  selector: 'app-update-tv',\n  templateUrl: './update-tv.component.html',\n  styleUrls: ['./update-tv.component.css']\n})\nexport class UpdateTvComponent implements OnInit {\n  productForUpdate: IProduct;\n  image: File;\n  imgURL: any;\n  message: string;\n  public host: string = \"http://localhost:8080\";\n\n  constructor(private productService: ProductService,) {\n    this.productForUpdate = history.state.product;\n  }\n\n  onSelectFile(event) {\n    if (event.target.files.length > 0) {\n      let fileType = event.target.files[0].type;\n      if (fileType.match(\"image\") == null) {\n        this.imgURL = null;\n        this.message = \"only images are supported\";\n        return\n      } else {\n        this.message = \"\";\n        const file = event.target.files[0];\n        this.image = file;\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (event) => {\n          this.imgURL = reader.result\n        }\n      }\n    }\n  }\n\n  public print() {\n    console.log(this.productForUpdate)\n  }\n  public updateProduct() {\n    const formData: FormData = new FormData();\n    formData.append(\"file\", this.image);\n    formData.append(\"product\", JSON.stringify(this.productForUpdate));\n    this.productService.update(formData, this.productForUpdate.id).subscribe();\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"productForUpdate\">\n  <img src=\"{{host+'/product/image/'+productForUpdate.id}}\" alt=\"\" [ngClass]=\"{picture:true}\">\n  <form #updateTVForm=\"ngForm\">\n    <p>Product name</p>\n    <input type=\"text\" name=\"TVName\" [(ngModel)]=\"productForUpdate.name\">\n    <p>Product description</p>\n    <textarea type=\"text\" name=\"TVDescription\" [(ngModel)]=\"productForUpdate.description\"></textarea>\n    <p>Product price</p>\n    <input type=\"number\" name=\"TVPrice\" [(ngModel)]=\"productForUpdate.price\">\n    <p>Product status</p>\n    <select name=\"TVStatus\" [(ngModel)]=\"productForUpdate.status\">\n      <option>In stock</option>\n      <option>is over</option>\n    </select>\n    <p>Monitor type</p>\n    <input type=\"text\" name=\"monitorType\" [(ngModel)]=\"productForUpdate.components[0].componentName\">\n    <p>screen diagonal</p>\n    <input type=\"number\" name=\"screenDiagonal\" [(ngModel)]=\"productForUpdate.components[0].componentValues[0].propertyValue\">\n    <p>screen extension</p>\n    <input type=\"text\" name=\"screenExtension\" [(ngModel)]=\"productForUpdate.components[0].componentValues[1].propertyValue\">\n\n    <p>Operating system type</p>\n    <input type=\"text\" name=\"operatingSystemType\" [(ngModel)]=\"productForUpdate.components[1].componentName\">\n    <p>Operating system version</p>\n    <input type=\"number\" name=\"operatingSystemVersion\" [(ngModel)]=\"productForUpdate.components[1].componentValues[0].propertyValue\">\n\n    <p>Image</p>\n    <input type=\"file\" name=\"productImage\" (change)=\"onSelectFile($event)\">\n    <p>{{message}}</p>\n  </form>\n  <div>\n    <img [src]=\"imgURL\" height=\"200\"  *ngIf=\"imgURL\">\n  </div>\n  <button (click)=\"updateProduct()\">update</button>\n  <button (click)=\"print()\">print</button>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport {IProduct} from \"../../../../product-module/models/productModel\";\nimport {ProductService} from \"../../../../product-module/services/product.service\";\n\n@Component({\n  selector: 'app-update-smart-watch',\n  templateUrl: './update-smart-watch.component.html',\n  styleUrls: ['./update-smart-watch.component.css']\n})\nexport class UpdateSmartWatchComponent implements OnInit {\n  productForUpdate: IProduct;\n  image: File;\n  imgURL: any;\n  message: string;\n  public host: string = \"http://localhost:8080\";\n\n  constructor(private productService: ProductService,) {\n    this.productForUpdate = history.state.product;\n  }\n\n  onSelectFile(event) {\n    if (event.target.files.length > 0) {\n      let fileType = event.target.files[0].type;\n      if (fileType.match(\"image\") == null) {\n        this.imgURL = null;\n        this.message = \"only images are supported\";\n        return\n      } else {\n        this.message = \"\";\n        const file = event.target.files[0];\n        this.image = file;\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (event) => {\n          this.imgURL = reader.result\n        }\n      }\n    }\n  }\n\n  public print() {\n    console.log(this.productForUpdate)\n  }\n  public updateProduct() {\n    const formData: FormData = new FormData();\n    formData.append(\"file\", this.image);\n    formData.append(\"product\", JSON.stringify(this.productForUpdate));\n    this.productService.update(formData, this.productForUpdate.id).subscribe();\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"productForUpdate\">\n  <img src=\"{{host+'/product/image/'+productForUpdate.id}}\" alt=\"\" [ngClass]=\"{picture:true}\">\n  <form #updateSmartWatchForm=\"ngForm\">\n    <p>Product name</p>\n    <input type=\"text\" name=\"smartWatchName\" [(ngModel)]=\"productForUpdate.name\">\n    <p>Product description</p>\n    <textarea type=\"text\" name=\"smartWatchDescription\" [(ngModel)]=\"productForUpdate.description\"></textarea>\n    <p>Product price</p>\n    <input type=\"number\" name=\"smartWatchPrice\" [(ngModel)]=\"productForUpdate.price\">\n    <p>Product status</p>\n    <select name=\"smartWatchStatus\" [(ngModel)]=\"productForUpdate.status\">\n      <option>In stock</option>\n      <option>is over</option>\n    </select>\n    <p>processor name</p>\n    <input type=\"text\" name=\"cpuName\" [(ngModel)]=\"productForUpdate.components[0].componentName\">\n    <p>Processor clock speed</p>\n    <input type=\"number\" name=\"cpuClockSpeed\" [(ngModel)]=\"productForUpdate.components[0].componentValues[0].propertyValue\">\n    <p>Processor number of cores</p>\n    <input type=\"number\" name=\"cpuNumberOfCores\" [(ngModel)]=\"productForUpdate.components[0].componentValues[1].propertyValue\">\n\n    <p>Amount of memory</p>\n    <input type=\"number\" name=\"amountOfMemory\" [(ngModel)]=\"productForUpdate.components[1].componentValues[0].propertyValue\">\n    <p>Amount of RAM memory</p>\n    <input type=\"number\" name=\"amountOfRamMemory\" [(ngModel)]=\"productForUpdate.components[1].componentValues[1].propertyValue\">\n\n\n    <p>Display type</p>\n    <input type=\"text\" name=\"monitorType\" [(ngModel)]=\"productForUpdate.components[2].componentName\">\n    <p>screen diagonal</p>\n    <input type=\"number\" name=\"screenDiagonal\" [(ngModel)]=\"productForUpdate.components[2].componentValues[0].propertyValue\">\n    <p>screen extension</p>\n    <input type=\"text\" name=\"screenExtension\" [(ngModel)]=\"productForUpdate.components[2].componentValues[1].propertyValue\">\n    <p>frame rate</p>\n    <input type=\"number\" name=\"frameRate\" [(ngModel)]=\"productForUpdate.components[2].componentValues[2].propertyValue\">\n\n    <p>Battery type</p>\n    <input type=\"text\" name=\"batteryType\" [(ngModel)]=\"productForUpdate.components[3].componentName\">\n    <p>Battery capacity</p>\n    <input type=\"number\" name=\"batteryCapacity\" [(ngModel)]=\"productForUpdate.components[3].componentValues[0].propertyValue\">\n    <p>Operating system type</p>\n    <input type=\"text\" name=\"operatingSystemType\" [(ngModel)]=\"productForUpdate.components[4].componentName\">\n    <p>Operating system version</p>\n    <input type=\"number\" name=\"operatingSystemVersion\" [(ngModel)]=\"productForUpdate.components[4].componentValues[0].propertyValue\">\n\n    <p>Image</p>\n    <input type=\"file\" name=\"productImage\" (change)=\"onSelectFile($event)\">\n    <p>{{message}}</p>\n  </form>\n  <div>\n    <img [src]=\"imgURL\" height=\"200\"  *ngIf=\"imgURL\">\n  </div>\n  <button (click)=\"updateProduct()\">update</button>\n  <button (click)=\"print()\">print</button>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport {IProduct} from \"../../../../product-module/models/productModel\";\nimport {ProductService} from \"../../../../product-module/services/product.service\";\n\n@Component({\n  selector: 'app-update-smartphone',\n  templateUrl: './update-smartphone.component.html',\n  styleUrls: ['./update-smartphone.component.css']\n})\nexport class UpdateSmartphoneComponent implements OnInit {\n  productForUpdate: IProduct;\n  image: File;\n  imgURL: any;\n  message: string;\n  public host: string = \"http://localhost:8080\";\n\n  constructor(private productService: ProductService,) {\n    this.productForUpdate = history.state.product;\n  }\n\n  onSelectFile(event) {\n    if (event.target.files.length > 0) {\n      let fileType = event.target.files[0].type;\n      if (fileType.match(\"image\") == null) {\n        this.imgURL = null;\n        this.message = \"only images are supported\";\n        return\n      } else {\n        this.message = \"\";\n        const file = event.target.files[0];\n        this.image = file;\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (event) => {\n          this.imgURL = reader.result\n        }\n      }\n    }\n  }\n\n  public print() {\n    console.log(this.productForUpdate)\n  }\n  public updateProduct() {\n    const formData: FormData = new FormData();\n    formData.append(\"file\", this.image);\n    formData.append(\"product\", JSON.stringify(this.productForUpdate));\n    this.productService.update(formData, this.productForUpdate.id).subscribe();\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"productForUpdate\">\n  <img src=\"{{host+'/product/image/'+productForUpdate.id}}\" alt=\"\" [ngClass]=\"{picture:true}\">\n  <form #updateSmartphoneForm=\"ngForm\">\n    <p>Product name</p>\n    <input type=\"text\" name=\"smartphoneName\" [(ngModel)]=\"productForUpdate.name\">\n    <p>Product description</p>\n    <textarea type=\"text\" name=\"smartphoneDescription\" [(ngModel)]=\"productForUpdate.description\"></textarea>\n    <p>Product price</p>\n    <input type=\"number\" name=\"smartphonePrice\" [(ngModel)]=\"productForUpdate.price\">\n    <p>Product status</p>\n    <select name=\"smartphoneStatus\" [(ngModel)]=\"productForUpdate.status\">\n      <option>In stock</option>\n      <option>is over</option>\n    </select>\n    <p>processor name</p>\n    <input type=\"text\" name=\"cpuName\" [(ngModel)]=\"productForUpdate.components[0].componentName\">\n    <p>Processor clock speed</p>\n    <input type=\"number\" name=\"cpuClockSpeed\" [(ngModel)]=\"productForUpdate.components[0].componentValues[0].propertyValue\">\n    <p>Processor number of cores</p>\n    <input type=\"number\" name=\"cpuNumberOfCores\" [(ngModel)]=\"productForUpdate.components[0].componentValues[1].propertyValue\">\n\n    <p>Camera name </p>\n    <input type=\"text\" name=\"cameraName\" [(ngModel)]=\"productForUpdate.components[1].componentName\">\n    <p>Number of cameras</p>\n    <input type=\"number\" name=\"numberOfCameras\"\n           [(ngModel)]=\"productForUpdate.components[1].componentValues[0].propertyValue\">\n    <p>number of megapixels of the front camera</p>\n    <input type=\"number\" name=\"numberOFMegapixelsFrontCamera\"\n           [(ngModel)]=\"productForUpdate.components[1].componentValues[1].propertyValue\">\n    <p>Amount of memory</p>\n    <input type=\"number\" name=\"amountOfMemory\" [(ngModel)]=\"productForUpdate.components[2].componentValues[0].propertyValue\">\n    <p>Amount of RAM memory</p>\n    <input type=\"number\" name=\"amountOfRamMemory\" [(ngModel)]=\"productForUpdate.components[2].componentValues[1].propertyValue\">\n\n    <p>Display type</p>\n    <input type=\"text\" name=\"monitorType\" [(ngModel)]=\"productForUpdate.components[3].componentName\">\n    <p>screen diagonal</p>\n    <input type=\"number\" name=\"screenDiagonal\" [(ngModel)]=\"productForUpdate.components[3].componentValues[0].propertyValue\">\n    <p>screen extension</p>\n    <input type=\"text\" name=\"screenExtension\" [(ngModel)]=\"productForUpdate.components[3].componentValues[1].propertyValue\">\n    <p>frame rate</p>\n    <input type=\"number\" name=\"frameRate\" [(ngModel)]=\"productForUpdate.components[3].componentValues[2].propertyValue\">\n\n    <p>Battery type</p>\n    <input type=\"text\" name=\"batteryType\" [(ngModel)]=\"productForUpdate.components[4].componentName\">\n    <p>Battery capacity</p>\n    <input type=\"number\" name=\"batteryCapacity\" [(ngModel)]=\"productForUpdate.components[4].componentValues[0].propertyValue\">\n    <p>Operating system type</p>\n    <input type=\"text\" name=\"operatingSystemType\" [(ngModel)]=\"productForUpdate.components[5].componentName\">\n    <p>Operating system version</p>\n    <input type=\"number\" name=\"operatingSystemVersion\" [(ngModel)]=\"productForUpdate.components[5].componentValues[0].propertyValue\">\n\n    <p>Image</p>\n    <input type=\"file\" name=\"productImage\" (change)=\"onSelectFile($event)\">\n    <p>{{message}}</p>\n  </form>\n  <div>\n    <img [src]=\"imgURL\" height=\"200\"  *ngIf=\"imgURL\">\n  </div>\n  <button (click)=\"updateProduct()\">update</button>\n  <button (click)=\"print()\">print</button>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport {IProduct} from \"../../../../product-module/models/productModel\";\nimport {ProductService} from \"../../../../product-module/services/product.service\";\n\n@Component({\n  selector: 'app-add-monitor',\n  templateUrl: './add-monitor.component.html',\n  styleUrls: ['./add-monitor.component.css']\n})\nexport class AddMonitorComponent implements OnInit {\n\n  monitor: IProduct =\n    {\n      name: '',\n      description: '',\n      price: 0,\n      status: '',\n      category: 'monitor',\n      components: [\n        {\n          componentName: '',  // monitor  type\n          component_id: 'monitor',\n          componentValues: [\n            {\n              propertyName: 'screen diagonal',\n              propertyValue: ''\n            },\n            {\n              propertyName: 'screen extension',\n              propertyValue: ''\n            },\n            {\n              propertyName: 'frame rate',\n              propertyValue: ''\n            },\n            {\n              propertyName:'display brightness',\n              propertyValue: ''\n            },\n            {\n              propertyName: 'display contrast',\n              propertyValue: ''\n            },\n            {\n              propertyName:  'Matrix reaction time',\n              propertyValue: ''\n            },\n          ]\n        }\n      ],\n    };\n  id: number;\n  image: File;\n  message: string;\n  imgURL: any;\n\n  constructor(private productService: ProductService) {\n  }\n\n  onSelectFile(event) {\n    if (event.target.files.length > 0) {\n      let fileType = event.target.files[0].type;\n      if (fileType.match(\"image\") == null) {\n        this.imgURL = null;\n        this.message = \"only images are supported\";\n        return\n      } else {\n        this.message=\"\";\n        const file = event.target.files[0];\n        this.image = file;\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (event) => {\n          this.imgURL = reader.result\n        }\n      }\n    }\n  }\n\n  save():void{\n    const formData: FormData = new FormData();\n    formData.append(\"file\",this.image);\n    formData.append(\"product\",JSON.stringify(this.monitor));\n    this.productService.save(formData).subscribe()\n  }\n\n\n  print(): void {\n    console.log(this.monitor)\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<form #monitorForm=\"ngForm\">\n  <p>Product name</p>\n  <input type=\"text\" name=\"monitorName\" [(ngModel)]=\"monitor.name\">\n  <p>Product description</p>\n  <textarea type=\"text\" name=\"monitorDescription\" [(ngModel)]=\"monitor.description\"></textarea>\n  <p>Product price</p>\n  <input type=\"number\" name=\"monitorPrice\" [(ngModel)]=\"monitor.price\">\n  <p>Product status</p>\n  <select name=\"monitorStatus\" [(ngModel)]=\"monitor.status\">\n    <option>In stock</option>\n    <option>is over</option>\n  </select>\n  <p>Monitor type</p>\n  <input type=\"text\" name=\"monitorType\" [(ngModel)]=\"monitor.components[0].componentName\">\n  <p>Screen diagonal</p>\n  <input type=\"number\" name=\"screenDiagonal\" [(ngModel)]=\"monitor.components[0].componentValues[0].propertyValue\">\n  <p>Screen extension</p>\n  <input type=\"text\" name=\"screenExtension\" [(ngModel)]=\"monitor.components[0].componentValues[1].propertyValue\">\n  <p>Frame rate</p>\n  <input type=\"number\" name=\"frameRate\" [(ngModel)]=\"monitor.components[0].componentValues[2].propertyValue\">\n  <p>Display brightness</p>\n  <input type=\"number\" name=\"displayBrightness\" [(ngModel)]=\"monitor.components[0].componentValues[3].propertyValue\">\n  <p>Display contrast</p>\n  <input type=\"number\" name=\"displayContrast\" [(ngModel)]=\"monitor.components[0].componentValues[4].propertyValue\">\n  <p>Matrix reaction time</p>\n  <input type=\"number\" name=\"matrixReactionTime\" [(ngModel)]=\"monitor.components[0].componentValues[5].propertyValue\">\n  <p>Image</p>\n  <input type=\"file\" name=\"productImage\" (change)=\"onSelectFile($event)\">\n  <p>{{message}}</p>\n</form>\n<button (click)=\"print()\">print</button>\n<button (click)=\"save()\">save</button>\n<div>\n  <img [src]=\"imgURL\" height=\"200\" *ngIf=\"imgURL\">\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport {IProduct} from \"../../../../product-module/models/productModel\";\nimport {ProductService} from \"../../../../product-module/services/product.service\";\n\n@Component({\n  selector: 'app-add-laptop',\n  templateUrl: './add-laptop.component.html',\n  styleUrls: ['./add-laptop.component.css']\n})\nexport class AddLaptopComponent implements OnInit {\n  laptop: IProduct =\n    {\n      name: '',\n      description: '',\n      price: 0,\n      status: '',\n      category: 'laptop',\n      components: [\n        {\n          componentName: '',\n          component_id: 'cpu',\n          componentValues: [\n            {\n              propertyName: 'cpu clock speed',\n              propertyValue: '',\n            },\n            {\n              propertyName: 'cpu number Of cores',\n              propertyValue: '',\n            }\n          ]\n        },\n        {\n          componentName: '',\n          component_id: 'graphics card',\n          componentValues: [\n            {\n              propertyName: 'graphics card amount Of video memory',\n              propertyValue: ''\n            }\n          ]\n        },\n        {\n          componentName: '',  // ram  name\n          component_id: 'ram',\n          componentValues: [\n            {\n              propertyName: 'amount Of RAM memory',\n              propertyValue: ''\n            }\n          ]\n        },\n        {\n          componentName: '',  // monitor  type\n          component_id: 'monitor',\n          componentValues: [\n            {\n              propertyName: 'screen diagonal',\n              propertyValue: ''\n            },\n            {\n              propertyName: 'screen extension',\n              propertyValue: ''\n            }\n            ,\n            {\n              propertyName: 'frame rate',\n              propertyValue: ''\n            }\n          ]\n        },\n        {\n          componentName: '',  // battery type\n          component_id: 'battery',\n          componentValues: [\n            {\n              propertyName: 'battery capacity',\n              propertyValue: ''\n            },\n\n          ]\n        }\n      ],\n    };\n  id: number;\n  image: File;\n  message: string;\n  imgURL: any;\n\n  constructor(private productService: ProductService) {\n  }\n\n  onSelectFile(event) {\n    if (event.target.files.length > 0) {\n      let fileType = event.target.files[0].type;\n      if (fileType.match(\"image\") == null) {\n        this.imgURL = null;\n        this.message = \"only images are supported\";\n        return\n      } else {\n        this.message=\"\";\n        const file = event.target.files[0];\n        this.image = file;\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (event) => {\n          this.imgURL = reader.result\n        }\n      }\n    }\n  }\n\n  save():void{\n    const formData: FormData = new FormData();\n    formData.append(\"file\",this.image);\n    formData.append(\"product\",JSON.stringify(this.laptop));\n    this.productService.save(formData).subscribe()\n  }\n\n\n  print(): void {\n    console.log(this.laptop)\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<form #laptopForm=\"ngForm\">\n  <p>Product name</p>\n  <input type=\"text\" name=\"laptopName\" [(ngModel)]=\"laptop.name\">\n  <p>Product description</p>\n  <textarea type=\"text\" name=\"laptopDescription\" [(ngModel)]=\"laptop.description\"></textarea>\n  <p>Product price</p>\n  <input type=\"number\" name=\"laptopPrice\" [(ngModel)]=\"laptop.price\">\n  <p>Product status</p>\n  <select name=\"laptopStatus\" [(ngModel)]=\"laptop.status\">\n    <option>In stock</option>\n    <option>is over</option>\n  </select>\n  <p>processor name</p>\n  <input type=\"text\" name=\"cpuName\" [(ngModel)]=\"laptop.components[0].componentName\">\n  <p>Processor clock speed</p>\n  <input type=\"number\" name=\"cpuClockSpeed\" [(ngModel)]=\"laptop.components[0].componentValues[0].propertyValue\">\n  <p>Processor number of cores</p>\n  <input type=\"number\" name=\"cpuNumberOfCores\" [(ngModel)]=\"laptop.components[0].componentValues[1].propertyValue\">\n  <p>Graphics card name </p>\n  <input type=\"text\" name=\"graphicsCardName\" [(ngModel)]=\"laptop.components[1].componentName\">\n  <p>Graphics card amount of video memory</p>\n  <input type=\"number\" name=\"graphicsCardAmountOfVideoMemory\"\n         [(ngModel)]=\"laptop.components[1].componentValues[0].propertyValue\">\n  <p>RAM name</p>\n  <input type=\"text\" name=\"ramName\" [(ngModel)]=\"laptop.components[2].componentName\">\n  <p>Amount of RAM memory</p>\n  <input type=\"number\" name=\"amountOfRamMemory\" [(ngModel)]=\"laptop.components[2].componentValues[0].propertyValue\">\n  <p>Monitor type</p>\n  <input type=\"text\" name=\"monitorType\" [(ngModel)]=\"laptop.components[3].componentName\">\n  <p>screen diagonal</p>\n  <input type=\"number\" name=\"screenDiagonal\" [(ngModel)]=\"laptop.components[3].componentValues[0].propertyValue\">\n  <p>screen extension</p>\n  <input type=\"text\" name=\"screenExtension\" [(ngModel)]=\"laptop.components[3].componentValues[1].propertyValue\">\n  <p>frame rate</p>\n  <input type=\"number\" name=\"frameRate\" [(ngModel)]=\"laptop.components[3].componentValues[2].propertyValue\">\n  <p>Battery type</p>\n  <input type=\"text\" name=\"batteryType\" [(ngModel)]=\"laptop.components[4].componentName\">\n  <p>Battery capacity</p>\n  <input type=\"number\" name=\"batteryCapacity\" [(ngModel)]=\"laptop.components[4].componentValues[0].propertyValue\">\n  <p>Image</p>\n  <input type=\"file\" name=\"productImage\" (change)=\"onSelectFile($event)\">\n  <p>{{message}}</p>\n</form>\n<button (click)=\"print()\">print</button>\n<button (click)=\"save()\">save</button>\n<div>\n  <img [src]=\"imgURL\" height=\"200\" *ngIf=\"imgURL\">\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport {IProduct} from \"../../../../product-module/models/productModel\";\nimport {ProductService} from \"../../../../product-module/services/product.service\";\n\n@Component({\n  selector: 'app-update-monitor',\n  templateUrl: './update-monitor.component.html',\n  styleUrls: ['./update-monitor.component.css']\n})\nexport class UpdateMonitorComponent implements OnInit {\n  productForUpdate: IProduct;\n  image: File;\n  imgURL: any;\n  message: string;\n  public host: string = \"http://localhost:8080\";\n\n  constructor(private productService: ProductService,) {\n    this.productForUpdate = history.state.product;\n  }\n\n  onSelectFile(event) {\n    if (event.target.files.length > 0) {\n      let fileType = event.target.files[0].type;\n      if (fileType.match(\"image\") == null) {\n        this.imgURL = null;\n        this.message = \"only images are supported\";\n        return\n      } else {\n        this.message = \"\";\n        const file = event.target.files[0];\n        this.image = file;\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (event) => {\n          this.imgURL = reader.result\n        }\n      }\n    }\n  }\n\n  public print() {\n    console.log(this.productForUpdate)\n  }\n  public updateProduct() {\n    const formData: FormData = new FormData();\n    formData.append(\"file\", this.image);\n    formData.append(\"product\", JSON.stringify(this.productForUpdate));\n    this.productService.update(formData, this.productForUpdate.id).subscribe();\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"productForUpdate\">\n  <img src=\"{{host+'/product/image/'+productForUpdate.id}}\" alt=\"\" [ngClass]=\"{picture:true}\">\n  <form #updateMonitorForm=\"ngForm\">\n    <p>Product name</p>\n    <input type=\"text\" name=\"monitorName\" [(ngModel)]=\"productForUpdate.name\">\n    <p>Product description</p>\n    <textarea type=\"text\" name=\"monitorDescription\" [(ngModel)]=\"productForUpdate.description\"></textarea>\n    <p>Product price</p>\n    <input type=\"number\" name=\"monitorPrice\" [(ngModel)]=\"productForUpdate.price\">\n    <p>Product status</p>\n    <select name=\"monitorStatus\" [(ngModel)]=\"productForUpdate.status\">\n      <option>In stock</option>\n      <option>is over</option>\n    </select>\n    <p>Monitor type</p>\n    <input type=\"text\" name=\"monitorType\" [(ngModel)]=\"productForUpdate.components[0].componentName\">\n    <p>Screen diagonal</p>\n    <input type=\"number\" name=\"screenDiagonal\" [(ngModel)]=\"productForUpdate.components[0].componentValues[0].propertyValue\">\n    <p>Screen extension</p>\n    <input type=\"text\" name=\"screenExtension\" [(ngModel)]=\"productForUpdate.components[0].componentValues[1].propertyValue\">\n    <p>Frame rate</p>\n    <input type=\"number\" name=\"frameRate\" [(ngModel)]=\"productForUpdate.components[0].componentValues[2].propertyValue\">\n    <p>Display brightness</p>\n    <input type=\"number\" name=\"displayBrightness\" [(ngModel)]=\"productForUpdate.components[0].componentValues[3].propertyValue\">\n    <p>Display contrast</p>\n    <input type=\"number\" name=\"displayContrast\" [(ngModel)]=\"productForUpdate.components[0].componentValues[4].propertyValue\">\n    <p>Matrix reaction time</p>\n    <input type=\"number\" name=\"matrixReactionTime\" [(ngModel)]=\"productForUpdate.components[0].componentValues[5].propertyValue\">\n    <p>Image</p>\n    <p>Image</p>\n    <input type=\"file\" name=\"productImage\" (change)=\"onSelectFile($event)\">\n    <p>{{message}}</p>\n  </form>\n  <div>\n    <img [src]=\"imgURL\" height=\"200\"  *ngIf=\"imgURL\">\n  </div>\n  <button (click)=\"updateProduct()\">update</button>\n  <button (click)=\"print()\">print</button>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-add-product-page',\r\n  templateUrl: './add-product-page.component.html',\r\n  styleUrls: ['./add-product-page.component.css']\r\n})\r\nexport class AddProductPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<ul>\r\n  <a routerLink=\"/admin/addProduct/addComputer\">\r\n    <li>add computer</li>\r\n  </a>\r\n  <a routerLink=\"/admin/addProduct/addConsole\">\r\n    <li>add console</li>\r\n  </a>\r\n  <a routerLink=\"/admin/addProduct/addSmartphone\">\r\n    <li>add smartphone</li>\r\n  </a>\r\n  <a routerLink=\"/admin/addProduct/addLaptop\">\r\n    <li>add laptop</li>\r\n  </a>\r\n  <a routerLink=\"/admin/addProduct/addTV\">\r\n    <li>add TV</li>\r\n  </a>\r\n  <a routerLink=\"/admin/addProduct/addSmartWatch\">\r\n    <li>add smart watch</li>\r\n  </a>\r\n  <a routerLink=\"/admin/addProduct/addMonitor\">\r\n    <li>add monitor</li>\r\n  </a>\r\n\r\n</ul>\r\n<router-outlet></router-outlet>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {IProduct} from \"../../../../product-module/models/productModel\";\r\nimport {ProductService} from \"../../../../product-module/services/product.service\";\r\n\r\n@Component({\r\n  selector: 'app-add-computer',\r\n  templateUrl: './add-computer.component.html',\r\n  styleUrls: ['./add-computer.component.css']\r\n})\r\nexport class AddComputerComponent implements OnInit {\r\n  computer: IProduct =\r\n    {\r\n      name: '',\r\n      description: '',\r\n      price: 0,\r\n      status: '',\r\n      category: 'computer',\r\n      components: [\r\n        {\r\n          componentName: '',\r\n          component_id: 'cpu',\r\n          componentValues: [\r\n            {\r\n              propertyName: 'cpu clock speed',\r\n              propertyValue: '',\r\n            },\r\n            {\r\n              propertyName: 'cpu number Of cores',\r\n              propertyValue: '',\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          componentName: '',\r\n          component_id: 'graphics card',\r\n          componentValues: [\r\n            {\r\n              propertyName: 'graphics card amount Of video memory',\r\n              propertyValue: ''\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          componentName: '',  // ram  name\r\n          component_id: 'ram',\r\n          componentValues: [\r\n            {\r\n              propertyName: 'amount Of RAM memory',\r\n              propertyValue: ''\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n    };\r\n  id: number;\r\n  image: File;\r\n  message: string;\r\n  imgURL: any;\r\n\r\n  constructor(private productService: ProductService) {\r\n  }\r\n\r\n  onSelectFile(event) {\r\n    if (event.target.files.length > 0) {\r\n      let fileType = event.target.files[0].type;\r\n      if (fileType.match(\"image\") == null) {\r\n        this.imgURL = null;\r\n        this.message = \"only images are supported\";\r\n        return\r\n      } else {\r\n        this.message=\"\";\r\n        const file = event.target.files[0];\r\n        this.image = file;\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = (event) => {\r\n          this.imgURL = reader.result\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  save():void{\r\n    const formData: FormData = new FormData();\r\n    formData.append(\"file\",this.image);\r\n    formData.append(\"product\",JSON.stringify(this.computer));\r\n    this.productService.save(formData).subscribe()\r\n  }\r\n\r\n\r\n  print(): void {\r\n    console.log(this.computer)\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<form #computerForm=\"ngForm\"  >\r\n  <p>Product name</p>\r\n  <input type=\"text\" name=\"computerName\" [(ngModel)]=\"computer.name\">\r\n  <p>Product description</p>\r\n  <textarea type=\"text\" name=\"computerDescription\" [(ngModel)]=\"computer.description\"></textarea>\r\n  <p>Product price</p>\r\n  <input type=\"number\" name=\"computerPrice\" [(ngModel)]=\"computer.price\">\r\n  <p>Product status</p>\r\n  <select name=\"computerStatus\" [(ngModel)]=\"computer.status\">\r\n    <option>In stock</option>\r\n    <option>is over</option>\r\n  </select>\r\n  <p>processor name</p>\r\n  <input type=\"text\" name=\"cpuName\" [(ngModel)]=\"computer.components[0].componentName\">\r\n  <p>Processor clock speed</p>\r\n  <input type=\"number\" name=\"cpuClockSpeed\" [(ngModel)]=\"computer.components[0].componentValues[0].propertyValue\">\r\n  <p>Processor number of cores</p>\r\n  <input type=\"number\" name=\"cpuNumberOfCores\" [(ngModel)]=\"computer.components[0].componentValues[1].propertyValue\">\r\n  <p>Graphics card name </p>\r\n  <input type=\" text\" name=\"graphicsCardName\" [(ngModel)]=\"computer.components[1].componentName\">\r\n  <p>Graphics card amount of video memory</p>\r\n  <input type=\"number\" name=\"graphicsCardAmountOfVideoMemory\" [(ngModel)]=\"computer.components[1].componentValues[0].propertyValue\">\r\n  <p>RAM name</p>\r\n  <input type=\"text\" name=\"ramName\" [(ngModel)]=\"computer.components[2].componentName\">\r\n  <p>Amount of RAM memory</p>\r\n  <input type=\"number\" name=\"amountOfRamMemory\" [(ngModel)]=\"computer.components[2].componentValues[0].propertyValue\">\r\n  <p>Image</p>\r\n  <input type=\"file\" name=\"productImage\"  (change)=\"onSelectFile($event)\">\r\n  <p>{{message}}</p>\r\n</form>\r\n<button (click)=\"print()\">print</button>\r\n<button (click)=\"save()\">save</button>\r\n<div>\r\n  <img [src]=\"imgURL\" height=\"200\"  *ngIf=\"imgURL\">\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport {IProduct} from \"../../../../product-module/models/productModel\";\nimport {ProductService} from \"../../../../product-module/services/product.service\";\n\n@Component({\n  selector: 'app-add-smart-watch',\n  templateUrl: './add-smart-watch.component.html',\n  styleUrls: ['./add-smart-watch.component.css']\n})\nexport class AddSmartWatchComponent implements OnInit {\n  smartWatch: IProduct =\n    {\n      name: '',\n      description: '',\n      price: 0,\n      status: '',\n      category: 'smartWatch',\n      components: [\n        {\n          componentName: '',\n          component_id: 'cpu',\n          componentValues: [\n            {\n              propertyName: 'cpu clock speed',\n              propertyValue: '',\n            },\n            {\n              propertyName: 'cpu number Of cores',\n              propertyValue: '',\n            }\n          ]\n        },\n        {\n          componentName: 'memory',  // ram  name\n          component_id: 'memory',\n          componentValues: [\n            {\n              propertyName: 'amount memory',\n              propertyValue: ''\n            },\n            {\n              propertyName: 'amount Of RAM memory',\n              propertyValue: ''\n            }\n          ]\n        },\n        {\n          componentName: '',  // monitor  type\n          component_id: 'display',\n          componentValues: [\n            {\n              propertyName: 'screen diagonal',\n              propertyValue: ''\n            },\n            {\n              propertyName: 'screen extension',\n              propertyValue: ''\n            }\n            ,\n            {\n              propertyName: 'frame rate',\n              propertyValue: ''\n            }\n          ]\n        },\n        {\n          componentName: '',  // battery type\n          component_id: 'battery',\n          componentValues: [\n            {\n              propertyName: 'battery capacity',\n              propertyValue: ''\n            },\n\n          ]\n        },\n        {\n          componentName: '',  //  operating system name type\n          component_id: ' operatingSystem',\n          componentValues: [\n            {\n              propertyName: 'operating system version',\n              propertyValue: ''\n            },\n\n          ]\n        }\n      ],\n    };\n  id: number;\n  image: File;\n  message: string;\n  imgURL: any;\n\n  constructor(private productService: ProductService) {\n  }\n\n  onSelectFile(event) {\n    if (event.target.files.length > 0) {\n      let fileType = event.target.files[0].type;\n      if (fileType.match(\"image\") == null) {\n        this.imgURL = null;\n        this.message = \"only images are supported\";\n        return\n      } else {\n        this.message=\"\";\n        const file = event.target.files[0];\n        this.image = file;\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (event) => {\n          this.imgURL = reader.result\n        }\n      }\n    }\n  }\n\n  save():void{\n    const formData: FormData = new FormData();\n    formData.append(\"file\",this.image);\n    formData.append(\"product\",JSON.stringify(this.smartWatch));\n    this.productService.save(formData).subscribe()\n  }\n\n\n  print(): void {\n    console.log(this.smartWatch)\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<form #smartWatchForm=\"ngForm\">\n  <p>Product name</p>\n  <input type=\"text\" name=\"smartWatchName\" [(ngModel)]=\"smartWatch.name\">\n  <p>Product description</p>\n  <textarea type=\"text\" name=\"smartWatchDescription\" [(ngModel)]=\"smartWatch.description\"></textarea>\n  <p>Product price</p>\n  <input type=\"number\" name=\"smartWatchPrice\" [(ngModel)]=\"smartWatch.price\">\n  <p>Product status</p>\n  <select name=\"smartWatchStatus\" [(ngModel)]=\"smartWatch.status\">\n    <option>In stock</option>\n    <option>is over</option>\n  </select>\n  <p>processor name</p>\n  <input type=\"text\" name=\"cpuName\" [(ngModel)]=\"smartWatch.components[0].componentName\">\n  <p>Processor clock speed</p>\n  <input type=\"number\" name=\"cpuClockSpeed\" [(ngModel)]=\"smartWatch.components[0].componentValues[0].propertyValue\">\n  <p>Processor number of cores</p>\n  <input type=\"number\" name=\"cpuNumberOfCores\" [(ngModel)]=\"smartWatch.components[0].componentValues[1].propertyValue\">\n\n  <p>Amount of memory</p>\n  <input type=\"number\" name=\"amountOfMemory\" [(ngModel)]=\"smartWatch.components[1].componentValues[0].propertyValue\">\n  <p>Amount of RAM memory</p>\n  <input type=\"number\" name=\"amountOfRamMemory\" [(ngModel)]=\"smartWatch.components[1].componentValues[1].propertyValue\">\n\n\n  <p>Display type</p>\n  <input type=\"text\" name=\"monitorType\" [(ngModel)]=\"smartWatch.components[2].componentName\">\n  <p>screen diagonal</p>\n  <input type=\"number\" name=\"screenDiagonal\" [(ngModel)]=\"smartWatch.components[2].componentValues[0].propertyValue\">\n  <p>screen extension</p>\n  <input type=\"text\" name=\"screenExtension\" [(ngModel)]=\"smartWatch.components[2].componentValues[1].propertyValue\">\n  <p>frame rate</p>\n  <input type=\"number\" name=\"frameRate\" [(ngModel)]=\"smartWatch.components[2].componentValues[2].propertyValue\">\n\n  <p>Battery type</p>\n  <input type=\"text\" name=\"batteryType\" [(ngModel)]=\"smartWatch.components[3].componentName\">\n  <p>Battery capacity</p>\n  <input type=\"number\" name=\"batteryCapacity\" [(ngModel)]=\"smartWatch.components[3].componentValues[0].propertyValue\">\n  <p>Operating system type</p>\n  <input type=\"text\" name=\"operatingSystemType\" [(ngModel)]=\"smartWatch.components[4].componentName\">\n  <p>Operating system version</p>\n  <input type=\"number\" name=\"operatingSystemVersion\" [(ngModel)]=\"smartWatch.components[4].componentValues[0].propertyValue\">\n\n  <p>Image</p>\n  <input type=\"file\" name=\"productImage\" (change)=\"onSelectFile($event)\">\n  <p>{{message}}</p>\n</form>\n<button (click)=\"print()\">print</button>\n<button (click)=\"save()\">save</button>\n<div>\n  <img [src]=\"imgURL\" height=\"200\" *ngIf=\"imgURL\">\n</div>\n\n"],"sourceRoot":"webpack:///"}