{"version":3,"sources":["./src/app/admin-module/components/update-products/update-console/update-console.component.ts","./src/app/admin-module/components/update-products/update-console/update-console.component.html","./src/app/admin-module/components/add-products/add-tv/add-tv.component.ts","./src/app/admin-module/components/add-products/add-tv/add-tv.component.html","./src/app/admin-module/components/product-details/product-details.component.ts","./src/app/admin-module/components/product-details/product-details.component.html","./src/app/admin-module/components/add-products/add-console/add-console.component.ts","./src/app/admin-module/components/add-products/add-console/add-console.component.html","./src/app/admin-module/components/add-products/add-smartphone/add-smartphone.component.ts","./src/app/admin-module/components/add-products/add-smartphone/add-smartphone.component.html","./src/app/admin-module/components/update-products/update-laptop/update-laptop.component.ts","./src/app/admin-module/components/update-products/update-laptop/update-laptop.component.html","./src/app/admin-module/components/update-products/update-computer/update-computer.component.ts","./src/app/admin-module/components/update-products/update-computer/update-computer.component.html","./src/app/admin-module/admin.module.ts","./src/app/admin-module/components/product-with-settings/product-with-settings.component.ts","./src/app/admin-module/components/product-with-settings/product-with-settings.component.html","./src/app/admin-module/components/update-products/update-tv/update-tv.component.ts","./src/app/admin-module/components/update-products/update-tv/update-tv.component.html","./src/app/admin-module/components/admin-page/admin-page.component.ts","./src/app/admin-module/components/admin-page/admin-page.component.html","./src/app/admin-module/components/update-products/update-smart-watch/update-smart-watch.component.ts","./src/app/admin-module/components/update-products/update-smart-watch/update-smart-watch.component.html","./src/app/admin-module/components/update-products/update-smartphone/update-smartphone.component.ts","./src/app/admin-module/components/update-products/update-smartphone/update-smartphone.component.html","./src/app/admin-module/components/add-products/add-monitor/add-monitor.component.ts","./src/app/admin-module/components/add-products/add-monitor/add-monitor.component.html","./src/app/admin-module/components/add-products/add-laptop/add-laptop.component.ts","./src/app/admin-module/components/add-products/add-laptop/add-laptop.component.html","./src/app/admin-module/components/update-products/update-monitor/update-monitor.component.ts","./src/app/admin-module/components/update-products/update-monitor/update-monitor.component.html","./src/app/admin-module/components/add-product-page/add-product-page.component.ts","./src/app/admin-module/components/add-product-page/add-product-page.component.html","./src/app/admin-module/components/add-products/add-computer/add-computer.component.ts","./src/app/admin-module/components/add-products/add-computer/add-computer.component.html","./src/app/admin-module/components/add-products/add-smart-watch/add-smart-watch.component.ts","./src/app/admin-module/components/add-products/add-smart-watch/add-smart-watch.component.html"],"names":[],"mappings":"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","file":"admin-module-admin-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {IProduct} from \"../../../../product-module/models/productModel\";\nimport {ProductService} from \"../../../../product-module/services/product.service\";\n\n@Component({\n  selector: 'app-update-console',\n  templateUrl: './update-console.component.html',\n  styleUrls: ['./update-console.component.css']\n})\nexport class UpdateConsoleComponent implements OnInit {\n  productForUpdate: IProduct;\n  image: File = null;\n  imgURL: any = null;\n  loading: string = null;\n  message: string;\n  public host: string = \"http://localhost:8080\";\n\n  constructor(private productService: ProductService,) {\n    this.productForUpdate = history.state.product;\n  }\n\n  onSelectFile(event) {\n    if (event.target.files.length > 0) {\n      let fileType = event.target.files[0].type;\n      if (fileType.match(\"image\") == null) {\n        this.imgURL = null;\n        this.message = \"only images are supported\";\n        return\n      } else {\n        this.message = \"\";\n        const file = event.target.files[0];\n        this.image = file;\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (event) => {\n          this.imgURL = reader.result\n        }\n      }\n    }\n  }\n\n  public updateProduct() {\n    this.loading = \"LOADING...\";\n    const formData: FormData = new FormData();\n    formData.append(\"file\", this.image);\n    formData.append(\"product\", JSON.stringify(this.productForUpdate));\n    this.productService.update(formData, this.productForUpdate.id).subscribe(value => {\n      this.productForUpdate = value;\n      this.loading = null;\n      this.image = null;\n      this.imgURL = null;\n      alert('Success')\n    }, error => {\n      this.image = null;\n      this.imgURL = null;\n      this.loading = null;\n      alert(error.error.message)\n    });\n  }\n  ngOnInit(): void {\n  }\n\n}\n","\n<div *ngIf=\"productForUpdate\" [ngClass]=\"{main:true}\">\n    <div><h2 [ngClass]=\"{updateConsole:true}\">Update Console</h2></div>\n  <div>\n    <img src=\"{{host+'/product/image/'+productForUpdate.id}}\" alt=\"\" [ngClass]=\"{picture:true}\">\n  </div>\n  <div [ngClass]=\"{formBlock:true}\">\n    <form [ngClass]=\"{form:true}\" #updateConsoleForm=\"ngForm\">\n      <p [ngClass]=\"{p:true}\">Product name</p>\n      <input [ngClass]=\"{input:true}\" maxlength=\"128\" type=\"text\" name=\"productForUpdateName\"\n             [(ngModel)]=\"productForUpdate.productName\"\n             #productName=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">Product description</p>\n      <textarea [ngClass]=\"{textArea:true}\" maxlength=\"1000\" type=\"text\" name=\"productForUpdateDescription\"\n                [(ngModel)]=\"productForUpdate.description\"\n                #description=\"ngModel\"\n                required></textarea>\n      <p [ngClass]=\"{p:true}\">Product price</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"productForUpdatePrice\"\n             [(ngModel)]=\"productForUpdate.price\" #price=\"ngModel\">\n      <p [ngClass]=\"{p:true}\">Product status</p>\n      <select [ngClass]=\"{select:true}\" name=\"productForUpdateStatus\" [(ngModel)]=\"productForUpdate.status\"\n              #status=\"ngModel\" required>\n        <option>In stock</option>\n        <option>is over</option>\n      </select>\n\n\n      <p [ngClass]=\"{p:true}\">Processor name</p>\n      <input [ngClass]=\"{input:true}\" maxlength=\"128\" type=\"text\" name=\"cpuName\"\n             [(ngModel)]=\"productForUpdate.components[0].componentName\"\n             #cpuName=\"ngModel\" required>\n      <p>Processor clock speed</p>\n\n      <input [ngClass]=\"{input:true}\" [maxLength]=\"100\" type=\"number\" name=\"cpuClockSpeed\"\n             [(ngModel)]=\"productForUpdate.components[0].componentValues[0].propertyValue\"\n             #cpuClockSpeed=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Processor number of cores</p>\n      <input [ngClass]=\"{input:true}\" maxlength=\"100\" type=\"number\" name=\"cpuNumberOfCores\"\n             [(ngModel)]=\"productForUpdate.components[0].componentValues[1].propertyValue\"\n             #cpuNumberOfCores=\"ngModel\" required>\n\n\n      <p [ngClass]=\"{p:true}\">Graphics card name </p>\n      <input [ngClass]=\"{input:true}\" maxlength=\"128\" type=\"text\" name=\"graphicsCardName\"\n             [(ngModel)]=\"productForUpdate.components[1].componentName\"\n             #graphicsCardName=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Graphics card amount of video memory</p>\n      <input [ngClass]=\"{input:true}\" maxlength=\"100\" type=\"number\" name=\"graphicsCardAmountOfVideoMemory\"\n             [(ngModel)]=\"productForUpdate.components[1].componentValues[0].propertyValue\"\n             #graphicsCardAmountOfVideoMemory=\"ngModel\" required>\n\n\n      <p [ngClass]=\"{p:true}\">RAM name</p>\n      <input [ngClass]=\"{input:true}\" maxlength=\"128\" type=\"text\" name=\"ramName\"\n             [(ngModel)]=\"productForUpdate.components[2].componentName\"\n             #ramName=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Amount of RAM memory</p>\n      <input [ngClass]=\"{input:true}\" maxlength=\"100\" type=\"number\" name=\"amountOfRamMemory\"\n             [(ngModel)]=\"productForUpdate.components[2].componentValues[0].propertyValue\"\n             #amountOfRamMemory=\"ngModel\" required>\n\n\n      <p [ngClass]=\"{p:true}\">Image</p>\n      <input type=\"file\" name=\"productImage\" (change)=\"onSelectFile($event)\">\n      <p [ngClass]=\"{p:true}\">{{message}}</p>\n    </form>\n\n    <button [ngClass]=\"{button:true}\" (click)=\"updateProduct()\" [disabled]=\"!updateConsoleForm.valid||loading\">update</button>\n    <p [ngClass]=\"{p:true}\">{{loading}}</p>\n    <img [src]=\"imgURL\" height=\"200\" *ngIf=\"imgURL\">\n  </div>\n</div>\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport {IProduct} from \"../../../../product-module/models/productModel\";\nimport {ProductService} from \"../../../../product-module/services/product.service\";\n\n@Component({\n  selector: 'app-add-tv',\n  templateUrl: './add-tv.component.html',\n  styleUrls: ['./add-tv.component.css']\n})\nexport class AddTVComponent implements OnInit {\n  TV: IProduct =\n    {\n      productName: '',\n      description: '',\n      price: null,\n      status: '',\n      category: 'TV',\n      components: [\n        {\n          componentName: '',\n          component_id: 'monitor',\n          componentValues: [\n            {\n              propertyName: 'screen diagonal',\n              propertyValue: ''\n            },\n            {\n              propertyName: 'screen extension',\n              propertyValue: ''\n            }\n            ,\n          ]\n        },\n        {\n          componentName: '',\n          component_id: ' operatingSystem',\n          componentValues: [\n            {\n              propertyName: 'operating system version',\n              propertyValue: ''\n            },\n\n          ]\n        }\n      ],\n    };\n  id: number;\n  message: string;\n  image: File = null;\n  imgURL: any = null;\n  loading: string = null;\n\n  constructor(private productService: ProductService) {\n  }\n\n  onSelectFile(event) {\n    if (event.target.files.length > 0) {\n      let fileType = event.target.files[0].type;\n      if (fileType.match(\"image\") == null) {\n        this.imgURL = null;\n        this.message = \"only images are supported\";\n        return\n      } else {\n        this.message=\"\";\n        const file = event.target.files[0];\n        this.image = file;\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (event) => {\n          this.imgURL = reader.result\n        }\n      }\n    }\n  }\n\n  save(): void {\n    this.loading = 'LOADING...';\n    const formData: FormData = new FormData();\n    formData.append(\"file\", this.image);\n    formData.append(\"product\", JSON.stringify(this.TV));\n    this.productService.save(formData).subscribe(value => {\n        this.loading = null;\n        this.image = null;\n        this.imgURL = null;\n        alert('Success')\n      },\n      error => {\n        this.loading = null;\n        this.image = null;\n        this.imgURL = null;\n        alert(error.error.message);\n      })\n  }\n  isImageTrue() {\n    return(this.image == null)\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<div [ngClass]=\"{main:true}\">\n  <div [ngClass]=\"{formBlock:true}\">\n    <div><h2 [ngClass]=\"{addTV:true}\">Add TV</h2></div>\n    <form [ngClass]=\"{form:true}\" #TVForm=\"ngForm\">\n      <p [ngClass]=\"{p:true}\">Product name</p>\n      <input [ngClass]=\"{input:true}\" maxlength=\"128\" type=\"text\" name=\"TVName\" [(ngModel)]=\"TV.productName\"\n             #productName=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">Product description</p>\n      <textarea [ngClass]=\"{textArea:true}\" maxlength=\"1000\" type=\"text\" name=\"TVDescription\"\n                [(ngModel)]=\"TV.description\"\n                #description=\"ngModel\"\n                required></textarea>\n      <p [ngClass]=\"{p:true}\">Product price</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"TVPrice\"\n             [(ngModel)]=\"TV.price\" #price=\"ngModel\">\n      <p [ngClass]=\"{p:true}\">Product status</p>\n      <select [ngClass]=\"{select:true}\" name=\"TVStatus\" [(ngModel)]=\"TV.status\" #status=\"ngModel\" required>\n        <option>In stock</option>\n        <option>is over</option>\n      </select>\n\n      <p [ngClass]=\"{p:true}\">Monitor type</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"monitorType\" [(ngModel)]=\"TV.components[0].componentName\"\n             #monitorType=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">screen diagonal</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"screenDiagonal\"\n             [(ngModel)]=\"TV.components[0].componentValues[0].propertyValue\" #screenDiagonal=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">screen extension</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"screenExtension\"\n             [(ngModel)]=\"TV.components[0].componentValues[1].propertyValue\" #screenExtension=\"ngModel\" required>\n\n\n      <p [ngClass]=\"{p:true}\">Operating system type</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"operatingSystemType\"\n             [(ngModel)]=\"TV.components[1].componentName\" #operatingSystemType=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Operating system version</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"operatingSystemVersion\"\n             [(ngModel)]=\"TV.components[1].componentValues[0].propertyValue\" #operatingSystemVersion=\"ngModel\" required>\n\n      <p [ngClass]=\"{p:true}\">Image</p>\n      <input type=\"file\" name=\"productImage\" (change)=\"onSelectFile($event)\">\n      <p [ngClass]=\"{p:true}\">{{message}}</p>\n    </form>\n\n    <button [ngClass]=\"{button:true}\" (click)=\"save()\" [disabled]=\"!TVForm.valid ||!image||loading\">save</button>\n    <p [ngClass]=\"{p:true}\">{{loading}}</p>\n    <img [src]=\"imgURL\" height=\"200\" *ngIf=\"imgURL\">\n  </div>\n</div>\n\n\n\n","import {Component, OnInit} from '@angular/core';\r\n\r\nimport {Router} from \"@angular/router\";\r\nimport {IProduct} from \"../../../product-module/models/productModel\";\r\nimport {ProductService} from \"../../../product-module/services/product.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-product-details',\r\n  templateUrl: './product-details.component.html',\r\n  styleUrls: ['./product-details.component.css']\r\n})\r\nexport class ProductDetailsComponent implements OnInit {\r\n  products: IProduct[];\r\n  totalElements: number;\r\n  productName: string;\r\n  searchType: string;\r\n  category: string;\r\n  page: number;\r\n\r\n  constructor(private productService: ProductService, private  router: Router) {\r\n    this.productService.getAllProducts(0).subscribe(value => {\r\n      this.products = value.productList;\r\n      this.totalElements = value.totalElements;\r\n    });\r\n    this.searchType = \"all\";\r\n    this.page = 1;\r\n  }\r\n\r\n  deleteComponent(id: number) {\r\n    this.productService.deleteProduct(id);\r\n    const findId = (element) => element.id === id;\r\n    let deleteIndex = this.products.findIndex(findId);\r\n    this.products.splice(deleteIndex, 1);\r\n  }\r\n  toProductDetails(product: IProduct) {\r\n    this.router.navigate(['admin/update', product.category, product.id], {state: {product}});\r\n  }\r\n\r\n  public setPageNumber(): void { // при зміні типу пошуку відкриває першу сторінку\r\n    this.page = 1;\r\n  }\r\n\r\n  public getAllProducts() {\r\n    this.productService.getAllProducts(0).subscribe(value => {\r\n      this.products = value.productList;\r\n      this.totalElements = value.totalElements;\r\n      this.searchType = \"all\";\r\n      this.setPageNumber()\r\n    })\r\n  }\r\n\r\n  public getProductByCategory(pageNumber: number, category: string) {\r\n    this.productService.getAllProductsByCategory(pageNumber, category).subscribe(value => {\r\n      this.products = value.productList;\r\n      this.totalElements = value.totalElements;\r\n      this.searchType = \"byCategory\";\r\n      this.category = category;\r\n      this.setPageNumber()\r\n    })\r\n  }\r\n\r\n  public getProductByProductName() {\r\n    this.productService.getAllProductsByName(0, this.productName).subscribe(value => {\r\n      console.log(this.productName);\r\n      this.products = value.productList;\r\n      this.totalElements = value.totalElements;\r\n      this.searchType = \"byName\";\r\n      this.setPageNumber()\r\n    })\r\n  }\r\n\r\n  onPageChange(pageNumber: number) {//перевіряє тип пошуку щоб підтягнути правильну сторінку\r\n    if (this.searchType == \"all\") {\r\n      this.productService.getAllProducts(pageNumber - 1).subscribe(value => {\r\n          this.products = value.productList;\r\n          this.totalElements = value.totalElements;\r\n        }\r\n      );\r\n    }\r\n    if (this.searchType == \"byCategory\") {\r\n      this.productService.getAllProductsByCategory(pageNumber - 1, this.category).subscribe(value => {\r\n        this.products = value.productList;\r\n        this.totalElements = value.totalElements;\r\n      })\r\n    }\r\n    if (this.searchType == \"byName\") {\r\n      this.productService.getAllProductsByName(pageNumber - 1, this.productName).subscribe(value => {\r\n        console.log(this.productName);\r\n        this.products = value.productList;\r\n        this.totalElements = value.totalElements;\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","<div [ngClass]=\"{page:true}\">\r\n  <div [ngClass]=\"{categories:true}\">\r\n    <h3 [ngClass]=\"{categoriesLogo:true}\">Categories</h3>\r\n    <button [ngClass]=\"{button:true}\" (click)=\"(getAllProducts())\">all</button>\r\n    <button [ngClass]=\"{button:true}\" (click)=\"getProductByCategory(0,'computer')\">computers</button>\r\n    <button [ngClass]=\"{button:true}\" (click)=\"getProductByCategory(0,'smartphone')\">smartphones</button>\r\n    <button [ngClass]=\"{button:true}\" (click)=\"getProductByCategory(0,'laptop')\">laptops</button>\r\n    <button [ngClass]=\"{button:true}\" (click)=\"getProductByCategory(0,'tv')\">TV</button>\r\n    <button [ngClass]=\"{button:true}\" (click)=\"getProductByCategory(0,'monitor')\">monitors</button>\r\n    <button [ngClass]=\"{button:true}\" (click)=\"getProductByCategory(0,'smartWatch')\">smart watch</button>\r\n    <button [ngClass]=\"{button:true}\" (click)=\"getProductByCategory(0,'console')\">consoles</button>\r\n  </div>\r\n  <div [ngClass]=\"{productWithSettings:true}\">\r\n    <div>\r\n      <form #findProductForm=\"ngForm\" [ngClass]=\"{form:true}\">\r\n        <input [ngClass]=\"{input:true}\" type=\"text\" name=\"productName\" [(ngModel)]=\"productName\" required>\r\n        <button [ngClass]=\"{findButton:true}\" [disabled]=\"!findProductForm.valid\" (click)=\"getProductByProductName()\">\r\n          find\r\n        </button>\r\n      </form>\r\n    </div>\r\n    <app-product-with-settings\r\n      *ngFor=\"let product of products\" [product]=\"product\"\r\n      (productSelected)=\"toProductDetails(product)\"\r\n      (productDeleted)=\"deleteComponent(product.id)\"\r\n    ></app-product-with-settings>\r\n    <ngb-pagination class=\"d-flex justify-content-center\" [collectionSize]=\"totalElements\"\r\n                    pageSize=\"20\"\r\n                    maxSize=\"10\"\r\n                    [(page)]=\"page\"\r\n                    (pageChange)=\"onPageChange($event)\" [boundaryLinks]=\"true\"></ngb-pagination>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport {IProduct} from \"../../../../product-module/models/productModel\";\nimport {ProductService} from \"../../../../product-module/services/product.service\";\n\n@Component({\n  selector: 'app-add-console',\n  templateUrl: './add-console.component.html',\n  styleUrls: ['./add-console.component.css']\n})\nexport class AddConsoleComponent implements OnInit {\n  console: IProduct =\n    {\n      productName: '',\n      description: '',\n      price: null,\n      status: '',\n      category: 'console',\n      components: [\n        {\n          componentName: '',\n          component_id: 'cpu',\n          componentValues: [\n            {\n              propertyName: 'cpu clock speed',\n              propertyValue: '',\n            },\n            {\n              propertyName: 'cpu number Of cores',\n              propertyValue: '',\n            }\n          ]\n        },\n        {\n          componentName: '',\n          component_id: 'graphics card',\n          componentValues: [\n            {\n              propertyName: 'graphics card amount Of video memory',\n              propertyValue: ''\n            }\n          ]\n        },\n        {\n          componentName: '',\n          component_id: 'ram',\n          componentValues: [\n            {\n              propertyName: 'amount Of RAM memory',\n              propertyValue: ''\n            }\n          ]\n        }\n      ],\n    };\n  id: number;\n  message: string;\n  image: File = null;\n  imgURL: any = null;\n  loading: string = null;\n\n  constructor(private productService: ProductService) {\n  }\n\n  onSelectFile(event) {\n    if (event.target.files.length > 0) {\n      let fileType = event.target.files[0].type;\n      if (fileType.match(\"image\") == null) {\n        this.imgURL = null;\n        this.message = \"only images are supported\";\n        return\n      } else {\n        this.message=\"\";\n        const file = event.target.files[0];\n        this.image = file;\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (event) => {\n          this.imgURL = reader.result\n        }\n      }\n    }\n  }\n\n  save(): void {\n    this.loading = 'LOADING...';\n    const formData: FormData = new FormData();\n    formData.append(\"file\", this.image);\n    formData.append(\"product\", JSON.stringify(this.console));\n    this.productService.save(formData).subscribe(value => {\n        this.loading = null;\n        this.image = null;\n        this.imgURL = null;\n        alert('Success')\n      },\n      error => {\n        this.loading = null;\n        this.image = null;\n        this.imgURL = null;\n        alert(error.error.message);\n      })\n  }\n  isImageTrue() {\n    return(this.image == null)\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<div [ngClass]=\"{main:true}\">\n  <div [ngClass]=\"{formBlock:true}\">\n    <div><h2 [ngClass]=\"{addConsole:true}\">Add console</h2></div>\n    <form [ngClass]=\"{form:true}\" #consoleForm=\"ngForm\">\n      <p [ngClass]=\"{p:true}\">Product name</p>\n      <input [ngClass]=\"{input:true}\" maxlength=\"128\" type=\"text\" name=\"consoleName\" [(ngModel)]=\"console.productName\"\n             #productName=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">Product description</p>\n      <textarea [ngClass]=\"{textArea:true}\" maxlength=\"1000\" type=\"text\" name=\"consoleDescription\"\n                [(ngModel)]=\"console.description\"\n                #description=\"ngModel\"\n                required></textarea>\n      <p [ngClass]=\"{p:true}\">Product price</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"consolePrice\"\n             [(ngModel)]=\"console.price\" #price=\"ngModel\">\n      <p [ngClass]=\"{p:true}\">Product status</p>\n      <select [ngClass]=\"{select:true}\" name=\"consoleStatus\" [(ngModel)]=\"console.status\" #status=\"ngModel\" required>\n        <option>In stock</option>\n        <option>is over</option>\n      </select>\n\n\n      <p [ngClass]=\"{p:true}\">Processor name</p>\n      <input [ngClass]=\"{input:true}\" maxlength=\"128\" type=\"text\" name=\"cpuName\"\n             [(ngModel)]=\"console.components[0].componentName\"\n             #cpuName=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Processor clock speed</p>\n\n      <input [ngClass]=\"{input:true}\" [maxLength]=\"100\" type=\"number\" name=\"cpuClockSpeed\"\n             [(ngModel)]=\"console.components[0].componentValues[0].propertyValue\"\n             #cpuClockSpeed=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Processor number of cores</p>\n      <input [ngClass]=\"{input:true}\" maxlength=\"100\" type=\"number\" name=\"cpuNumberOfCores\"\n             [(ngModel)]=\"console.components[0].componentValues[1].propertyValue\"\n             #cpuNumberOfCores=\"ngModel\" required>\n\n\n      <p [ngClass]=\"{p:true}\">Graphics card name </p>\n      <input [ngClass]=\"{input:true}\" maxlength=\"128\" type=\"text\" name=\"graphicsCardName\"\n             [(ngModel)]=\"console.components[1].componentName\"\n             #graphicsCardName=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Graphics card amount of video memory</p>\n      <input [ngClass]=\"{input:true}\" maxlength=\"100\" type=\"number\" name=\"graphicsCardAmountOfVideoMemory\"\n             [(ngModel)]=\"console.components[1].componentValues[0].propertyValue\"\n             #graphicsCardAmountOfVideoMemory=\"ngModel\" required>\n\n\n      <p [ngClass]=\"{p:true}\">RAM name</p>\n      <input [ngClass]=\"{input:true}\" maxlength=\"128\" type=\"text\" name=\"ramName\"\n             [(ngModel)]=\"console.components[2].componentName\"\n             #ramName=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Amount of RAM memory</p>\n      <input [ngClass]=\"{input:true}\" maxlength=\"100\" type=\"number\" name=\"amountOfRamMemory\"\n             [(ngModel)]=\"console.components[2].componentValues[0].propertyValue\"\n             #amountOfRamMemory=\"ngModel\" required>\n\n\n      <p [ngClass]=\"{p:true}\">Image</p>\n      <input type=\"file\" name=\"productImage\" (change)=\"onSelectFile($event)\">\n      <p [ngClass]=\"{p:true}\">{{message}}</p>\n    </form>\n\n    <button [ngClass]=\"{button:true}\" (click)=\"save()\" [disabled]=\"!consoleForm.valid ||!image||loading\">save</button>\n    <p [ngClass]=\"{p:true}\">{{loading}}</p>\n    <img [src]=\"imgURL\" height=\"200\" *ngIf=\"imgURL\">\n  </div>\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport {IProduct} from \"../../../../product-module/models/productModel\";\nimport {ProductService} from \"../../../../product-module/services/product.service\";\n\n@Component({\n  selector: 'app-add-smartphone',\n  templateUrl: './add-smartphone.component.html',\n  styleUrls: ['./add-smartphone.component.css']\n})\nexport class AddSmartphoneComponent implements OnInit {\n  smartphone: IProduct =\n    {\n      productName: '',\n      description: '',\n      price: null,\n      status: '',\n      category: 'smartphone',\n      components: [\n        {\n          componentName: '',\n          component_id: 'cpu',\n          componentValues: [\n            {\n              propertyName: 'cpu clock speed',\n              propertyValue: ''\n            },\n            {\n              propertyName: 'cpu number Of cores',\n              propertyValue: ''\n            }\n          ]\n        },\n        {\n          componentName: '',\n          component_id: 'camera',\n          componentValues: [\n            {\n              propertyName: 'number of cameras',\n              propertyValue: ''\n            },\n            {\n              propertyName: 'number of megapixels of the front camera',\n              propertyValue: ''\n            }\n          ]\n        },\n        {\n          componentName: 'memory',\n          component_id: 'memory',\n          componentValues: [\n            {\n              propertyName: 'amount memory',\n              propertyValue: ''\n\n            },\n            {\n              propertyName: 'amount Of RAM memory',\n              propertyValue: ''\n            }\n          ]\n        },\n        {\n          componentName: '',\n          component_id: 'display',\n          componentValues: [\n            {\n              propertyName: 'screen diagonal',\n              propertyValue: ''\n            },\n            {\n              propertyName: 'screen extension',\n              propertyValue: ''\n            }\n            ,\n            {\n              propertyName: 'frame rate',\n              propertyValue: ''\n            }\n          ]\n        },\n        {\n          componentName: '',\n          component_id: 'battery',\n          componentValues: [\n            {\n              propertyName: 'battery capacity',\n              propertyValue: ''\n            },\n\n          ]\n        },\n        {\n          componentName: '',\n          component_id: ' operatingSystem',\n          componentValues: [\n            {\n              propertyName: 'operating system version',\n              propertyValue: ''\n            },\n\n          ]\n        }\n      ],\n    };\n  id: number;\n  message: string;\n  image: File = null;\n  imgURL: any = null;\n  loading: string = null;\n\n  constructor(private productService: ProductService) {\n  }\n\n  onSelectFile(event) {\n    if (event.target.files.length > 0) {\n      let fileType = event.target.files[0].type;\n      if (fileType.match(\"image\") == null) {\n        this.imgURL = null;\n        this.message = \"only images are supported\";\n        return\n      } else {\n        this.message=\"\";\n        const file = event.target.files[0];\n        this.image = file;\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (event) => {\n          this.imgURL = reader.result\n        }\n      }\n    }\n  }\n\n  save(): void {\n    this.loading = 'LOADING...';\n    const formData: FormData = new FormData();\n    formData.append(\"file\", this.image);\n    formData.append(\"product\", JSON.stringify(this.smartphone));\n    this.productService.save(formData).subscribe(value => {\n        this.loading = null;\n        this.image = null;\n        this.imgURL = null;\n        alert('Success')\n      },\n      error => {\n        this.loading = null;\n        this.image = null;\n        this.imgURL = null;\n        alert(error.error.message);\n      })\n  }\n  isImageTrue() {\n    return(this.image == null)\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<div [ngClass]=\"{main:true}\">\n  <div [ngClass]=\"{formBlock:true}\">\n    <div><h2 [ngClass]=\"{addSmartphone:true}\">Add smartphone</h2></div>\n    <form [ngClass]=\"{form:true}\" #smartphoneForm=\"ngForm\">\n      <p [ngClass]=\"{p:true}\">Product name</p>\n      <input [ngClass]=\"{input:true}\" maxlength=\"128\" type=\"text\" name=\"smartphoneName\"\n             [(ngModel)]=\"smartphone.productName\"\n             #productName=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">Product description</p>\n      <textarea [ngClass]=\"{textArea:true}\" maxlength=\"1000\" type=\"text\" name=\"smartphoneDescription\"\n                [(ngModel)]=\"smartphone.description\"\n                #description=\"ngModel\"\n                required></textarea>\n      <p [ngClass]=\"{p:true}\">Product price</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"smartphonePrice\"\n             [(ngModel)]=\"smartphone.price\" #price=\"ngModel\">\n      <p [ngClass]=\"{p:true}\">Product status</p>\n      <select [ngClass]=\"{select:true}\" name=\"smartphoneStatus\" [(ngModel)]=\"smartphone.status\" #status=\"ngModel\"\n              required>\n        <option>In stock</option>\n        <option>is over</option>\n      </select>\n\n\n      <p [ngClass]=\"{p:true}\">Processor name</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"cpuName\" [(ngModel)]=\"smartphone.components[0].componentName\" #cpuName=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">Processor clock speed</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"cpuClockSpeed\" [(ngModel)]=\"smartphone.components[0].componentValues[0].propertyValue\"\n             #cpuClockSpeed=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Processor number of cores</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"cpuNumberOfCores\"\n             [(ngModel)]=\"smartphone.components[0].componentValues[1].propertyValue\" #cpuNumberOfCores=\"ngModel\"\n             required>\n\n\n      <p [ngClass]=\"{p:true}\">Camera name </p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"cameraName\" [(ngModel)]=\"smartphone.components[1].componentName\" #cameraName=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">Number of cameras</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"numberOfCameras\"\n             [(ngModel)]=\"smartphone.components[1].componentValues[0].propertyValue\" #numberOfCameras=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">Number of megapixels of the front camera</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"numberOFMegapixelsFrontCamera\"\n             [(ngModel)]=\"smartphone.components[1].componentValues[1].propertyValue\"\n             #numberOFMegapixelsFrontCamera=\"ngModel\" required>\n\n\n      <p [ngClass]=\"{p:true}\">Amount of memory</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"amountOfMemory\" [(ngModel)]=\"smartphone.components[2].componentValues[0].propertyValue\"\n             #amountOfMemory=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Amount of RAM memory</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"amountOfRamMemory\"\n             [(ngModel)]=\"smartphone.components[2].componentValues[1].propertyValue\" #amountOfRamMemory=\"ngModel\"\n             required>\n\n\n      <p [ngClass]=\"{p:true}\">Display type</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"monitorType\" [(ngModel)]=\"smartphone.components[3].componentName\" #monitorType=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">screen diagonal</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"screenDiagonal\" [(ngModel)]=\"smartphone.components[3].componentValues[0].propertyValue\"\n             #screenDiagonal=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">screen extension</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"screenExtension\" [(ngModel)]=\"smartphone.components[3].componentValues[1].propertyValue\"\n             #screenExtension=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">frame rate</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"frameRate\" [(ngModel)]=\"smartphone.components[3].componentValues[2].propertyValue\"\n             #frameRate=\"ngModel\" required>\n\n\n      <p [ngClass]=\"{p:true}\">Battery type</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"batteryType\" [(ngModel)]=\"smartphone.components[4].componentName\" #batteryType=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">Battery capacity</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"batteryCapacity\"\n             [(ngModel)]=\"smartphone.components[4].componentValues[0].propertyValue\" #batteryCapacity=\"ngModel\"\n             required>\n\n      <p [ngClass]=\"{p:true}\">Operating system type</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"operatingSystemType\" [(ngModel)]=\"smartphone.components[5].componentName\"\n             #operatingSystemType=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Operating system version</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"operatingSystemVersion\"\n             [(ngModel)]=\"smartphone.components[5].componentValues[0].propertyValue\" #operatingSystemVersion=\"ngModel\"\n             required>\n\n\n      <p [ngClass]=\"{p:true}\">Image</p>\n      <input type=\"file\" name=\"productImage\" (change)=\"onSelectFile($event)\">\n      <p [ngClass]=\"{p:true}\">{{message}}</p>\n    </form>\n\n    <button [ngClass]=\"{button:true}\" (click)=\"save()\" [disabled]=\"!smartphoneForm.valid ||!image||loading\">save</button>\n    <p [ngClass]=\"{p:true}\">{{loading}}</p>\n    <img [src]=\"imgURL\" height=\"200\" *ngIf=\"imgURL\">\n  </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport {IProduct} from \"../../../../product-module/models/productModel\";\nimport {ProductService} from \"../../../../product-module/services/product.service\";\n\n@Component({\n  selector: 'app-update-laptop',\n  templateUrl: './update-laptop.component.html',\n  styleUrls: ['./update-laptop.component.css']\n})\nexport class UpdateLaptopComponent implements OnInit {\n  productForUpdate: IProduct;\n  image: File = null;\n  imgURL: any = null;\n  loading: string = null;\n  message: string;\n  public host: string = \"http://localhost:8080\";\n\n  constructor(private productService: ProductService,) {\n    this.productForUpdate = history.state.product;\n  }\n\n  onSelectFile(event) {\n    if (event.target.files.length > 0) {\n      let fileType = event.target.files[0].type;\n      if (fileType.match(\"image\") == null) {\n        this.imgURL = null;\n        this.message = \"only images are supported\";\n        return\n      } else {\n        this.message = \"\";\n        const file = event.target.files[0];\n        this.image = file;\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (event) => {\n          this.imgURL = reader.result\n        }\n      }\n    }\n  }\n\n  public updateProduct() {\n    this.loading = \"LOADING...\";\n    const formData: FormData = new FormData();\n    formData.append(\"file\", this.image);\n    formData.append(\"product\", JSON.stringify(this.productForUpdate));\n    this.productService.update(formData, this.productForUpdate.id).subscribe(value => {\n      this.productForUpdate = value;\n      this.loading = null;\n      this.image = null;\n      this.imgURL = null;\n      alert('Success')\n    }, error => {\n      this.image = null;\n      this.imgURL = null;\n      this.loading = null;\n      alert(error.error.message)\n    });\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"productForUpdate\" [ngClass]=\"{main:true}\">\n    <div><h2 [ngClass]=\"{updateLaptop:true}\">Update laptop</h2></div>\n  <div>\n    <img src=\"{{host+'/product/image/'+productForUpdate.id}}\" alt=\"\" [ngClass]=\"{picture:true}\">\n  </div>\n  <div [ngClass]=\"{formBlock:true}\">\n    <form [ngClass]=\"{form:true}\" #updateLaptopForm=\"ngForm\">\n      <p [ngClass]=\"{p:true}\">Product name</p>\n      <input [ngClass]=\"{input:true}\" maxlength=\"128\" type=\"text\" name=\"productForUpdateName\"\n             [(ngModel)]=\"productForUpdate.productName\"\n             #productName=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">Product description</p>\n      <textarea [ngClass]=\"{textArea:true}\" maxlength=\"1000\" type=\"text\" name=\"productForUpdateDescription\"\n                [(ngModel)]=\"productForUpdate.description\"\n                #description=\"ngModel\"\n                required></textarea>\n      <p [ngClass]=\"{p:true}\">Product price</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"productForUpdatePrice\"\n             [(ngModel)]=\"productForUpdate.price\" #price=\"ngModel\">\n      <p [ngClass]=\"{p:true}\">Product status</p>\n      <select [ngClass]=\"{select:true}\" name=\"productForUpdateStatus\" [(ngModel)]=\"productForUpdate.status\"\n              #status=\"ngModel\" required>\n        <option>In stock</option>\n        <option>is over</option>\n      </select>\n\n      <p [ngClass]=\"{p:true}\">Processor name</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"cpuName\"\n             [(ngModel)]=\"productForUpdate.components[0].componentName\" #cpuName=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Processor clock speed</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"cpuClockSpeed\"\n             [(ngModel)]=\"productForUpdate.components[0].componentValues[0].propertyValue\"\n             #cpuClockSpeed=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Processor number of cores</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"cpuNumberOfCores\"\n             [(ngModel)]=\"productForUpdate.components[0].componentValues[1].propertyValue\"\n             #cpuNumberOfCores=\"ngModel\" required>\n\n\n      <p [ngClass]=\"{p:true}\">Graphics card name </p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"graphicsCardName\"\n             [(ngModel)]=\"productForUpdate.components[1].componentName\" #graphicsCardName=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">Graphics card amount of video memory</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"graphicsCardAmountOfVideoMemory\"\n             [(ngModel)]=\"productForUpdate.components[1].componentValues[0].propertyValue\"\n             #graphicsCardAmountOfVideoMemory=\"ngModel\" required>\n\n\n      <p [ngClass]=\"{p:true}\">RAM name</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"ramName\"\n             [(ngModel)]=\"productForUpdate.components[2].componentName\" #ramName=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Amount of RAM memory</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"amountOfRamMemory\"\n             [(ngModel)]=\"productForUpdate.components[2].componentValues[0].propertyValue\" #amountOfRamMemory=\"ngModel\"\n             required>\n\n\n      <p [ngClass]=\"{p:true}\">Monitor type</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"monitorType\"\n             [(ngModel)]=\"productForUpdate.components[3].componentName\" #monitorType=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">screen diagonal</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"screenDiagonal\"\n             [(ngModel)]=\"productForUpdate.components[3].componentValues[0].propertyValue\" #screenDiagonal=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">screen extension</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"screenExtension\"\n             [(ngModel)]=\"productForUpdate.components[3].componentValues[1].propertyValue\" #screenExtension=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">frame rate</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"frameRate\"\n             [(ngModel)]=\"productForUpdate.components[3].componentValues[2].propertyValue\" #frameRate=\"ngModel\"\n             required>\n\n\n      <p [ngClass]=\"{p:true}\">Battery type</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"batteryType\"\n             [(ngModel)]=\"productForUpdate.components[4].componentName\" #batteryType=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Battery capacity</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"batteryCapacity\"\n             [(ngModel)]=\"productForUpdate.components[4].componentValues[0].propertyValue\" #batteryCapacity=\"ngModel\"\n             required>\n\n\n      <p [ngClass]=\"{p:true}\">Image</p>\n      <input type=\"file\" name=\"productImage\" (change)=\"onSelectFile($event)\">\n      <p [ngClass]=\"{p:true}\">{{message}}</p>\n    </form>\n\n    <button [ngClass]=\"{button:true}\" (click)=\"updateProduct()\" [disabled]=\"!updateLaptopForm.valid||loading\">update</button>\n    <p [ngClass]=\"{p:true}\">{{loading}}</p>\n    <img [src]=\"imgURL\" height=\"200\" *ngIf=\"imgURL\">\n  </div>\n</div>\n\n\n\n\n","import {Component, OnInit} from '@angular/core';\r\nimport {IProduct} from \"../../../../product-module/models/productModel\";\r\nimport {ProductService} from \"../../../../product-module/services/product.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-update-computer',\r\n  templateUrl: './update-computer.component.html',\r\n  styleUrls: ['./update-computer.component.css']\r\n})\r\nexport class UpdateComputerComponent implements OnInit {\r\n  productForUpdate: IProduct;\r\n  image: File = null;\r\n  imgURL: any = null;\r\n  loading: string = null;\r\n  message: string;\r\n  public host: string = \"http://localhost:8080\";\r\n\r\n  constructor(private productService: ProductService,) {\r\n    this.productForUpdate = history.state.product;\r\n  }\r\n\r\n  onSelectFile(event) {\r\n    if (event.target.files.length > 0) {\r\n      let fileType = event.target.files[0].type;\r\n      if (fileType.match(\"image\") == null) {\r\n        this.imgURL = null;\r\n        this.message = \"only images are supported\";\r\n        return\r\n      } else {\r\n        this.message = \"\";\r\n        const file = event.target.files[0];\r\n        this.image = file;\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = (event) => {\r\n          this.imgURL = reader.result\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  public updateProduct() {\r\n    this.loading = \"LOADING...\";\r\n    const formData: FormData = new FormData();\r\n    formData.append(\"file\", this.image);\r\n    formData.append(\"product\", JSON.stringify(this.productForUpdate));\r\n    this.productService.update(formData, this.productForUpdate.id).subscribe(value => {\r\n      this.productForUpdate = value;\r\n      this.loading = null;\r\n      this.image = null;\r\n      this.imgURL = null;\r\n      alert('Success')\r\n    }, error => {\r\n      this.image = null;\r\n      this.imgURL = null;\r\n      this.loading = null;\r\n      alert(error.error.message)\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<div *ngIf=\"productForUpdate\" [ngClass]=\"{main:true}\">\r\n    <div><h2 [ngClass]=\"{updateComputer:true}\">Update Computer</h2></div>\r\n  <div>\r\n    <img src=\"{{host+'/product/image/'+productForUpdate.id}}\" alt=\"\" [ngClass]=\"{picture:true}\">\r\n  </div>\r\n  <div [ngClass]=\"{formBlock:true}\">\r\n    <form [ngClass]=\"{form:true}\" #updateComputerForm=\"ngForm\">\r\n      <p [ngClass]=\"{p:true}\">Product name</p>\r\n      <input [ngClass]=\"{input:true}\" maxlength=\"128\" type=\"text\" name=\"productForUpdateName\"\r\n             [(ngModel)]=\"productForUpdate.productName\"\r\n             #productName=\"ngModel\"\r\n             required>\r\n      <p [ngClass]=\"{p:true}\">Product description</p>\r\n      <textarea [ngClass]=\"{textArea:true}\" maxlength=\"1000\" type=\"text\" name=\"productForUpdateDescription\"\r\n                [(ngModel)]=\"productForUpdate.description\"\r\n                #description=\"ngModel\"\r\n                required></textarea>\r\n      <p [ngClass]=\"{p:true}\">Product price</p>\r\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"productForUpdatePrice\"\r\n             [(ngModel)]=\"productForUpdate.price\" #price=\"ngModel\">\r\n      <p [ngClass]=\"{p:true}\">Product status</p>\r\n      <select [ngClass]=\"{select:true}\" name=\"productForUpdateStatus\" [(ngModel)]=\"productForUpdate.status\"\r\n              #status=\"ngModel\" required>\r\n        <option>In stock</option>\r\n        <option>is over</option>\r\n      </select>\r\n\r\n\r\n      <p [ngClass]=\"{p:true}\">Processor name</p>\r\n      <input [ngClass]=\"{input:true}\" maxlength=\"128\" type=\"text\" name=\"cpuName\"\r\n             [(ngModel)]=\"productForUpdate.components[0].componentName\"\r\n             #cpuName=\"ngModel\" required>\r\n      <p>Processor clock speed</p>\r\n\r\n      <input [ngClass]=\"{input:true}\" [maxLength]=\"100\" type=\"number\" name=\"cpuClockSpeed\"\r\n             [(ngModel)]=\"productForUpdate.components[0].componentValues[0].propertyValue\"\r\n             #cpuClockSpeed=\"ngModel\" required>\r\n      <p [ngClass]=\"{p:true}\">Processor number of cores</p>\r\n      <input [ngClass]=\"{input:true}\" maxlength=\"100\" type=\"number\" name=\"cpuNumberOfCores\"\r\n             [(ngModel)]=\"productForUpdate.components[0].componentValues[1].propertyValue\"\r\n             #cpuNumberOfCores=\"ngModel\" required>\r\n\r\n\r\n      <p [ngClass]=\"{p:true}\">Graphics card name </p>\r\n      <input [ngClass]=\"{input:true}\" maxlength=\"128\" type=\"text\" name=\"graphicsCardName\"\r\n             [(ngModel)]=\"productForUpdate.components[1].componentName\"\r\n             #graphicsCardName=\"ngModel\" required>\r\n      <p [ngClass]=\"{p:true}\">Graphics card amount of video memory</p>\r\n      <input [ngClass]=\"{input:true}\" maxlength=\"100\" type=\"number\" name=\"graphicsCardAmountOfVideoMemory\"\r\n             [(ngModel)]=\"productForUpdate.components[1].componentValues[0].propertyValue\"\r\n             #graphicsCardAmountOfVideoMemory=\"ngModel\" required>\r\n\r\n\r\n      <p [ngClass]=\"{p:true}\">RAM name</p>\r\n      <input [ngClass]=\"{input:true}\" maxlength=\"128\" type=\"text\" name=\"ramName\"\r\n             [(ngModel)]=\"productForUpdate.components[2].componentName\"\r\n             #ramName=\"ngModel\" required>\r\n      <p [ngClass]=\"{p:true}\">Amount of RAM memory</p>\r\n      <input [ngClass]=\"{input:true}\" maxlength=\"100\" type=\"number\" name=\"amountOfRamMemory\"\r\n             [(ngModel)]=\"productForUpdate.components[2].componentValues[0].propertyValue\"\r\n             #amountOfRamMemory=\"ngModel\" required>\r\n\r\n\r\n      <p [ngClass]=\"{p:true}\">Image</p>\r\n      <input type=\"file\" name=\"productImage\" (change)=\"onSelectFile($event)\">\r\n      <p [ngClass]=\"{p:true}\">{{message}}</p>\r\n    </form>\r\n\r\n    <button [ngClass]=\"{button:true}\" (click)=\"updateProduct()\" [disabled]=\"!updateComputerForm.valid||loading\">update</button>\r\n    <p [ngClass]=\"{p:true}\">{{loading}}</p>\r\n    <img [src]=\"imgURL\" height=\"200\" *ngIf=\"imgURL\">\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AddComputerComponent} from \"./components/add-products/add-computer/add-computer.component\";\nimport {AddProductPageComponent} from \"./components/add-product-page/add-product-page.component\";\nimport {AdminPageComponent} from \"./components/admin-page/admin-page.component\";\nimport {ProductDetailsComponent} from \"./components/product-details/product-details.component\";\nimport {ProductWithSettingsComponent} from \"./components/product-with-settings/product-with-settings.component\";\nimport {UpdateComputerComponent} from \"./components/update-products/update-computer/update-computer.component\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {FormsModule} from \"@angular/forms\";\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {AddLaptopComponent} from './components/add-products/add-laptop/add-laptop.component';\nimport {AddSmartphoneComponent} from './components/add-products/add-smartphone/add-smartphone.component';\nimport {AddTVComponent} from './components/add-products/add-tv/add-tv.component';\nimport {AddMonitorComponent} from './components/add-products/add-monitor/add-monitor.component';\nimport {AddConsoleComponent} from './components/add-products/add-console/add-console.component';\nimport {AddSmartWatchComponent} from './components/add-products/add-smart-watch/add-smart-watch.component';\nimport {UpdateConsoleComponent} from './components/update-products/update-console/update-console.component';\nimport {UpdateLaptopComponent} from './components/update-products/update-laptop/update-laptop.component';\nimport {UpdateSmartphoneComponent} from './components/update-products/update-smartphone/update-smartphone.component';\nimport {UpdateMonitorComponent} from './components/update-products/update-monitor/update-monitor.component';\nimport {UpdateTvComponent} from './components/update-products/update-tv/update-tv.component';\nimport {UpdateSmartWatchComponent} from './components/update-products/update-smart-watch/update-smart-watch.component';\nimport {AllUsersComponent} from \"../user-module/components/all-users/all-users.component\";\nimport {AllOrdersComponent} from \"../order-module/components/all-orders/all-orders.component\";\n\nconst routes: Routes = [\n\n  {\n    path: '', component: AdminPageComponent, children: [\n      {path: 'productDetails', component: ProductDetailsComponent},\n      {path: 'order/allOrders', component: AllOrdersComponent},\n      {path: 'allUsers', component: AllUsersComponent},\n      {path: 'update/computer/:id', component: UpdateComputerComponent},\n      {path: 'update/laptop/:id', component: UpdateLaptopComponent},\n      {path: 'update/console/:id', component: UpdateConsoleComponent},\n      {path: 'update/smartphone/:id', component: UpdateSmartphoneComponent},\n      {path: 'update/TV/:id', component: UpdateTvComponent},\n      {path: 'update/monitor/:id', component: UpdateMonitorComponent},\n      {path: 'update/smartWatch/:id', component: UpdateSmartWatchComponent},\n      {\n        path: 'addProduct', component: AddProductPageComponent, children: [\n          {path: 'addComputer', component: AddComputerComponent},\n          {path: 'addLaptop', component: AddLaptopComponent},\n          {path: 'addConsole', component: AddConsoleComponent},\n          {path: 'addSmartphone', component: AddSmartphoneComponent},\n          {path: 'addSmartWatch', component: AddSmartWatchComponent},\n          {path: 'addTV', component: AddTVComponent},\n          {path: 'addMonitor', component: AddMonitorComponent},\n        ]\n      }\n    ]\n  },\n];\n\n@NgModule({\n  declarations: [\n    AddComputerComponent,\n    AddProductPageComponent,\n    AdminPageComponent,\n    ProductDetailsComponent,\n    ProductWithSettingsComponent,\n    UpdateComputerComponent,\n    AddLaptopComponent,\n    AddSmartphoneComponent,\n    AddTVComponent,\n    AddMonitorComponent,\n    AddConsoleComponent,\n    AddSmartWatchComponent,\n    UpdateConsoleComponent,\n    UpdateLaptopComponent,\n    UpdateSmartphoneComponent,\n    UpdateMonitorComponent,\n    UpdateTvComponent,\n    UpdateSmartWatchComponent,\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    RouterModule.forChild(routes),\n    FormsModule,\n    NgbModule\n  ]\n})\nexport class AdminModule {\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {IProduct} from \"../../../product-module/models/productModel\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-product-with-settings',\r\n  templateUrl: './product-with-settings.component.html',\r\n  styleUrls: ['./product-with-settings.component.css']\r\n})\r\nexport class ProductWithSettingsComponent implements OnInit {\r\n  @Input() product: IProduct;\r\n  @Output() productSelected: EventEmitter<IProduct> = new EventEmitter;\r\n  @Output() productDeleted: EventEmitter<IProduct> = new EventEmitter;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  public deleteProduct(id: number): void {\r\n    this.productDeleted.emit()\r\n  }\r\n\r\n  public openUpdatePage() {\r\n    this.productSelected.emit()\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<div [ngClass]=\"{main:true}\">\r\n  <p [ngClass]=\"{id:true}\">{{product.id}}</p>\r\n  <p [ngClass]=\"{name:true}\">{{product.productName}}</p>\r\n  <p [ngClass]=\"{category:true}\">{{product.category}}</p>\r\n  <p [ngClass]=\"{price:true}\">{{product.price}}</p>\r\n  <p [ngClass]=\"{status:true}\">{{product.status}}</p>\r\n  <button [ngClass]=\"{button:true}\" (click)=\"openUpdatePage()\">Update</button>\r\n  <button [ngClass]=\"{button:true}\" (click)=\"deleteProduct(product.id)\">Delete</button>\r\n</div>\r\n\r\n\r\n","import {Component, OnInit} from '@angular/core';\nimport {IProduct} from \"../../../../product-module/models/productModel\";\nimport {ProductService} from \"../../../../product-module/services/product.service\";\n\n@Component({\n  selector: 'app-update-tv',\n  templateUrl: './update-tv.component.html',\n  styleUrls: ['./update-tv.component.css']\n})\nexport class UpdateTvComponent implements OnInit {\n  productForUpdate: IProduct;\n  image: File = null;\n  imgURL: any = null;\n  loading: string = null;\n  message: string;\n  public host: string = \"http://localhost:8080\";\n\n  constructor(private productService: ProductService,) {\n    this.productForUpdate = history.state.product;\n  }\n\n  onSelectFile(event) {\n    if (event.target.files.length > 0) {\n      let fileType = event.target.files[0].type;\n      if (fileType.match(\"image\") == null) {\n        this.imgURL = null;\n        this.message = \"only images are supported\";\n        return\n      } else {\n        this.message = \"\";\n        const file = event.target.files[0];\n        this.image = file;\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (event) => {\n          this.imgURL = reader.result\n        }\n      }\n    }\n  }\n\n  public updateProduct() {\n    this.loading = \"LOADING...\";\n    const formData: FormData = new FormData();\n    formData.append(\"file\", this.image);\n    formData.append(\"product\", JSON.stringify(this.productForUpdate));\n    this.productService.update(formData, this.productForUpdate.id).subscribe(value => {\n      this.productForUpdate = value;\n      this.loading = null;\n      this.image = null;\n      this.imgURL = null;\n      alert('Success')\n    }, error => {\n      this.image = null;\n      this.imgURL = null;\n      this.loading = null;\n      alert(error.error.message)\n    });\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"productForUpdate\" [ngClass]=\"{main:true}\">\n    <div><h2 [ngClass]=\"{updateTV:true}\">Update TV</h2></div>\n  <div>\n    <img src=\"{{host+'/product/image/'+productForUpdate.id}}\" alt=\"\" [ngClass]=\"{picture:true}\">\n  </div>\n  <div [ngClass]=\"{formBlock:true}\">\n    <form [ngClass]=\"{form:true}\" #updateTVForm=\"ngForm\">\n      <p [ngClass]=\"{p:true}\">Product name</p>\n      <input [ngClass]=\"{input:true}\" maxlength=\"128\" type=\"text\" name=\"productForUpdateName\"\n             [(ngModel)]=\"productForUpdate.productName\"\n             #productName=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">Product description</p>\n      <textarea [ngClass]=\"{textArea:true}\" maxlength=\"1000\" type=\"text\" name=\"productForUpdateDescription\"\n                [(ngModel)]=\"productForUpdate.description\"\n                #description=\"ngModel\"\n                required></textarea>\n      <p [ngClass]=\"{p:true}\">Product price</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"productForUpdatePrice\"\n             [(ngModel)]=\"productForUpdate.price\" #price=\"ngModel\">\n      <p [ngClass]=\"{p:true}\">Product status</p>\n      <select [ngClass]=\"{select:true}\" name=\"productForUpdateStatus\" [(ngModel)]=\"productForUpdate.status\"\n              #status=\"ngModel\" required>\n        <option>In stock</option>\n        <option>is over</option>\n      </select>\n\n      <p [ngClass]=\"{p:true}\">Monitor type</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"monitorType\"\n             [(ngModel)]=\"productForUpdate.components[0].componentName\"\n             #monitorType=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">screen diagonal</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"screenDiagonal\"\n             [(ngModel)]=\"productForUpdate.components[0].componentValues[0].propertyValue\" #screenDiagonal=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">screen extension</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"screenExtension\"\n             [(ngModel)]=\"productForUpdate.components[0].componentValues[1].propertyValue\" #screenExtension=\"ngModel\"\n             required>\n\n\n      <p [ngClass]=\"{p:true}\">Operating system type</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"operatingSystemType\"\n             [(ngModel)]=\"productForUpdate.components[1].componentName\" #operatingSystemType=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Operating system version</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"operatingSystemVersion\"\n             [(ngModel)]=\"productForUpdate.components[1].componentValues[0].propertyValue\"\n             #operatingSystemVersion=\"ngModel\" required>\n\n      <p [ngClass]=\"{p:true}\">Image</p>\n      <input type=\"file\" name=\"productImage\" (change)=\"onSelectFile($event)\">\n      <p [ngClass]=\"{p:true}\">{{message}}</p>\n    </form>\n\n    <button [ngClass]=\"{button:true}\" (click)=\"updateProduct()\" [disabled]=\"!updateTVForm.valid||loading\">update</button>\n    <p [ngClass]=\"{p:true}\">{{loading}}</p>\n    <img [src]=\"imgURL\" height=\"200\" *ngIf=\"imgURL\">\n  </div>\n</div>\n\n\n\n\n\n","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-admin-page',\r\n  templateUrl: './admin-page.component.html',\r\n  styleUrls: ['./admin-page.component.css']\r\n})\r\nexport class AdminPageComponent implements OnInit {\r\n\r\n  constructor(private router: Router) {\r\n    this.toAddProductPage()\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  toAllOrdersPage(): void {\r\n    this.router.navigate(['/admin/order/allOrders']);\r\n  }\r\n\r\n  toAddProductPage(): void {\r\n    this.router.navigate(['/admin/addProduct']);\r\n  }\r\n\r\n  toProductDetailsPage(): void {\r\n    this.router.navigate(['/admin/productDetails']);\r\n  }\r\n\r\n  toAllUsersPage(): void {\r\n    this.router.navigate(['/admin/allUsers']);\r\n  }\r\n\r\n}\r\n","<div [ngClass]=\"{navigation:true}\">\r\n  <button [ngClass]=\"{button:true}\" (click)=\"toAddProductPage()\">Add product</button>\r\n  <button [ngClass]=\"{button:true}\" (click)=\"toProductDetailsPage()\">Product details</button>\r\n  <button [ngClass]=\"{button:true}\" (click)=\"toAllOrdersPage()\">All orders</button>\r\n  <button [ngClass]=\"{button:true}\" (click)=\"toAllUsersPage()\">All users</button>\r\n</div>\r\n\r\n<router-outlet></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\nimport {IProduct} from \"../../../../product-module/models/productModel\";\nimport {ProductService} from \"../../../../product-module/services/product.service\";\n\n@Component({\n  selector: 'app-update-smart-watch',\n  templateUrl: './update-smart-watch.component.html',\n  styleUrls: ['./update-smart-watch.component.css']\n})\nexport class UpdateSmartWatchComponent implements OnInit {\n  productForUpdate: IProduct;\n  image: File = null;\n  imgURL: any = null;\n  loading: string = null;\n  message: string;\n  public host: string = \"http://localhost:8080\";\n\n  constructor(private productService: ProductService,) {\n    this.productForUpdate = history.state.product;\n  }\n\n  onSelectFile(event) {\n    if (event.target.files.length > 0) {\n      let fileType = event.target.files[0].type;\n      if (fileType.match(\"image\") == null) {\n        this.imgURL = null;\n        this.message = \"only images are supported\";\n        return\n      } else {\n        this.message = \"\";\n        const file = event.target.files[0];\n        this.image = file;\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (event) => {\n          this.imgURL = reader.result\n        }\n      }\n    }\n  }\n\n  public updateProduct() {\n    this.loading = \"LOADING...\";\n    const formData: FormData = new FormData();\n    formData.append(\"file\", this.image);\n    formData.append(\"product\", JSON.stringify(this.productForUpdate));\n    this.productService.update(formData, this.productForUpdate.id).subscribe(value => {\n      this.productForUpdate = value;\n      this.loading = null;\n      this.image = null;\n      this.imgURL = null;\n      alert('Success')\n    }, error => {\n      this.image = null;\n      this.imgURL = null;\n      this.loading = null;\n      alert(error.error.message)\n    });\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"productForUpdate\" [ngClass]=\"{main:true}\">\n    <div><h2 [ngClass]=\"{updateSmartWatch:true}\">Update smart-watch</h2></div>\n  <div>\n    <img src=\"{{host+'/product/image/'+productForUpdate.id}}\" alt=\"\" [ngClass]=\"{picture:true}\">\n  </div>\n  <div [ngClass]=\"{formBlock:true}\">\n    <form [ngClass]=\"{form:true}\" #updateSmartWatchForm=\"ngForm\">\n      <p [ngClass]=\"{p:true}\">Product name</p>\n      <input [ngClass]=\"{input:true}\" maxlength=\"128\" type=\"text\" name=\"productForUpdateName\"\n             [(ngModel)]=\"productForUpdate.productName\"\n             #productName=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">Product description</p>\n      <textarea [ngClass]=\"{textArea:true}\" maxlength=\"1000\" type=\"text\" name=\"productForUpdateDescription\"\n                [(ngModel)]=\"productForUpdate.description\"\n                #description=\"ngModel\"\n                required></textarea>\n      <p [ngClass]=\"{p:true}\">Product price</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"productForUpdatePrice\"\n             [(ngModel)]=\"productForUpdate.price\" #price=\"ngModel\">\n      <p [ngClass]=\"{p:true}\">Product status</p>\n      <select [ngClass]=\"{select:true}\" name=\"productForUpdateStatus\" [(ngModel)]=\"productForUpdate.status\"\n              #status=\"ngModel\"\n              required>\n        <option>In stock</option>\n        <option>is over</option>\n      </select>\n\n\n      <p [ngClass]=\"{p:true}\">Processor name</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"cpuName\"\n             [(ngModel)]=\"productForUpdate.components[0].componentName\"\n             #cpuName=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Processor clock speed</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"cpuClockSpeed\"\n             [(ngModel)]=\"productForUpdate.components[0].componentValues[0].propertyValue\" #cpuClockSpeed=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">Processor number of cores</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"cpuNumberOfCores\"\n             [(ngModel)]=\"productForUpdate.components[0].componentValues[1].propertyValue\" #cpuNumberOfCores=\"ngModel\"\n             required>\n\n\n      <p [ngClass]=\"{p:true}\">Amount of memory</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"amountOfMemory\"\n             [(ngModel)]=\"productForUpdate.components[1].componentValues[0].propertyValue\" #amountOfMemory=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">Amount of RAM memory</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"amountOfRamMemory\"\n             [(ngModel)]=\"productForUpdate.components[1].componentValues[1].propertyValue\" #amountOfRamMemory=\"ngModel\"\n             required>\n\n\n      <p [ngClass]=\"{p:true}\">Display type</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"monitorType\"\n             [(ngModel)]=\"productForUpdate.components[2].componentName\" #monitorType=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">screen diagonal</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"screenDiagonal\"\n             [(ngModel)]=\"productForUpdate.components[2].componentValues[0].propertyValue\" #screenDiagonal=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">screen extension</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"screenExtension\"\n             [(ngModel)]=\"productForUpdate.components[2].componentValues[1].propertyValue\" #screenExtension=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">frame rate</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"frameRate\"\n             [(ngModel)]=\"productForUpdate.components[2].componentValues[2].propertyValue\" #frameRate=\"ngModel\"\n             required>\n\n\n      <p [ngClass]=\"{p:true}\">Battery type</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"batteryType\"\n             [(ngModel)]=\"productForUpdate.components[3].componentName\" #batteryType=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Battery capacity</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"batteryCapacity\"\n             [(ngModel)]=\"productForUpdate.components[3].componentValues[0].propertyValue\" #batteryCapacity=\"ngModel\"\n             required>\n\n\n      <p [ngClass]=\"{p:true}\">Operating system type</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"operatingSystemType\"\n             [(ngModel)]=\"productForUpdate.components[4].componentName\" #operatingSystemType=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Operating system version</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"operatingSystemVersion\"\n             [(ngModel)]=\"productForUpdate.components[4].componentValues[0].propertyValue\"\n             #operatingSystemVersion=\"ngModel\"\n             required>\n\n\n      <p [ngClass]=\"{p:true}\">Image</p>\n      <input type=\"file\" name=\"productImage\" (change)=\"onSelectFile($event)\">\n      <p [ngClass]=\"{p:true}\">{{message}}</p>\n    </form>\n\n    <button [ngClass]=\"{button:true}\" (click)=\"updateProduct()\" [disabled]=\"!updateSmartWatchForm.valid||loading\">update</button>\n\n    <p [ngClass]=\"{p:true}\">{{loading}}</p>\n    <img [src]=\"imgURL\" height=\"200\" *ngIf=\"imgURL\">\n  </div>\n</div>\n\n\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport {IProduct} from \"../../../../product-module/models/productModel\";\nimport {ProductService} from \"../../../../product-module/services/product.service\";\n\n@Component({\n  selector: 'app-update-smartphone',\n  templateUrl: './update-smartphone.component.html',\n  styleUrls: ['./update-smartphone.component.css']\n})\nexport class UpdateSmartphoneComponent implements OnInit {\n  productForUpdate: IProduct;\n  image: File = null;\n  imgURL: any = null;\n  loading: string = null;\n  message: string;\n  public host: string = \"http://localhost:8080\";\n\n  constructor(private productService: ProductService,) {\n    this.productForUpdate = history.state.product;\n  }\n\n  onSelectFile(event) {\n    if (event.target.files.length > 0) {\n      let fileType = event.target.files[0].type;\n      if (fileType.match(\"image\") == null) {\n        this.imgURL = null;\n        this.message = \"only images are supported\";\n        return\n      } else {\n        this.message = \"\";\n        const file = event.target.files[0];\n        this.image = file;\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (event) => {\n          this.imgURL = reader.result\n        }\n      }\n    }\n  }\n  public updateProduct() {\n    this.loading = \"LOADING...\";\n    const formData: FormData = new FormData();\n    formData.append(\"file\", this.image);\n    formData.append(\"product\", JSON.stringify(this.productForUpdate));\n    this.productService.update(formData, this.productForUpdate.id).subscribe(value => {\n      this.productForUpdate = value;\n      this.loading = null;\n      this.image = null;\n      this.imgURL = null;\n      alert('Success')\n    }, error => {\n      this.image = null;\n      this.imgURL = null;\n      this.loading = null;\n      alert(error.error.message)\n    });\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"productForUpdate\" [ngClass]=\"{main:true}\">\n    <div><h2 [ngClass]=\"{updateSmartphone:true}\">Update Smartphone</h2></div>\n  <div>\n    <img src=\"{{host+'/product/image/'+productForUpdate.id}}\" alt=\"\" [ngClass]=\"{picture:true}\">\n  </div>\n  <div [ngClass]=\"{formBlock:true}\">\n    <form [ngClass]=\"{form:true}\" #updateSmartphoneForm=\"ngForm\">\n      <p [ngClass]=\"{p:true}\">Product name</p>\n      <input [ngClass]=\"{input:true}\" maxlength=\"128\" type=\"text\" name=\"productForUpdateName\"\n             [(ngModel)]=\"productForUpdate.productName\"\n             #productName=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">Product description</p>\n      <textarea [ngClass]=\"{textArea:true}\" maxlength=\"1000\" type=\"text\" name=\"productForUpdateDescription\"\n                [(ngModel)]=\"productForUpdate.description\"\n                #description=\"ngModel\"\n                required></textarea>\n      <p [ngClass]=\"{p:true}\">Product price</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"productForUpdatePrice\"\n             [(ngModel)]=\"productForUpdate.price\" #price=\"ngModel\">\n      <p [ngClass]=\"{p:true}\">Product status</p>\n      <select [ngClass]=\"{select:true}\" name=\"productForUpdateStatus\" [(ngModel)]=\"productForUpdate.status\"\n              #status=\"ngModel\"\n              required>\n        <option>In stock</option>\n        <option>is over</option>\n      </select>\n\n\n      <p [ngClass]=\"{p:true}\">Processor name</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"cpuName\"\n             [(ngModel)]=\"productForUpdate.components[0].componentName\"\n             #cpuName=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">Processor clock speed</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"cpuClockSpeed\"\n             [(ngModel)]=\"productForUpdate.components[0].componentValues[0].propertyValue\"\n             #cpuClockSpeed=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Processor number of cores</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"cpuNumberOfCores\"\n             [(ngModel)]=\"productForUpdate.components[0].componentValues[1].propertyValue\" #cpuNumberOfCores=\"ngModel\"\n             required>\n\n\n      <p [ngClass]=\"{p:true}\">Camera name </p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"cameraName\"\n             [(ngModel)]=\"productForUpdate.components[1].componentName\"\n             #cameraName=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">Number of cameras</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"numberOfCameras\"\n             [(ngModel)]=\"productForUpdate.components[1].componentValues[0].propertyValue\" #numberOfCameras=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">Number of megapixels of the front camera</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"numberOFMegapixelsFrontCamera\"\n             [(ngModel)]=\"productForUpdate.components[1].componentValues[1].propertyValue\"\n             #numberOFMegapixelsFrontCamera=\"ngModel\" required>\n\n\n      <p [ngClass]=\"{p:true}\">Amount of memory</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"amountOfMemory\"\n             [(ngModel)]=\"productForUpdate.components[2].componentValues[0].propertyValue\"\n             #amountOfMemory=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Amount of RAM memory</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"amountOfRamMemory\"\n             [(ngModel)]=\"productForUpdate.components[2].componentValues[1].propertyValue\" #amountOfRamMemory=\"ngModel\"\n             required>\n\n\n      <p [ngClass]=\"{p:true}\">Display type</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"monitorType\"\n             [(ngModel)]=\"productForUpdate.components[3].componentName\" #monitorType=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">screen diagonal</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"screenDiagonal\"\n             [(ngModel)]=\"productForUpdate.components[3].componentValues[0].propertyValue\"\n             #screenDiagonal=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">screen extension</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"screenExtension\"\n             [(ngModel)]=\"productForUpdate.components[3].componentValues[1].propertyValue\"\n             #screenExtension=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">frame rate</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"frameRate\"\n             [(ngModel)]=\"productForUpdate.components[3].componentValues[2].propertyValue\"\n             #frameRate=\"ngModel\" required>\n\n\n      <p [ngClass]=\"{p:true}\">Battery type</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"batteryType\"\n             [(ngModel)]=\"productForUpdate.components[4].componentName\" #batteryType=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">Battery capacity</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"batteryCapacity\"\n             [(ngModel)]=\"productForUpdate.components[4].componentValues[0].propertyValue\" #batteryCapacity=\"ngModel\"\n             required>\n\n      <p [ngClass]=\"{p:true}\">Operating system type</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"operatingSystemType\"\n             [(ngModel)]=\"productForUpdate.components[5].componentName\"\n             #operatingSystemType=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Operating system version</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"operatingSystemVersion\"\n             [(ngModel)]=\"productForUpdate.components[5].componentValues[0].propertyValue\"\n             #operatingSystemVersion=\"ngModel\"\n             required>\n\n\n      <p [ngClass]=\"{p:true}\">Image</p>\n      <input type=\"file\" name=\"productImage\" (change)=\"onSelectFile($event)\">\n      <p [ngClass]=\"{p:true}\">{{message}}</p>\n    </form>\n\n    <button [ngClass]=\"{button:true}\" (click)=\"updateProduct()\" [disabled]=\"!updateSmartphoneForm.valid||loading\">update</button>\n    <p [ngClass]=\"{p:true}\">{{loading}}</p>\n    <img [src]=\"imgURL\" height=\"200\" *ngIf=\"imgURL\">\n  </div>\n</div>\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport {IProduct} from \"../../../../product-module/models/productModel\";\nimport {ProductService} from \"../../../../product-module/services/product.service\";\n\n@Component({\n  selector: 'app-add-monitor',\n  templateUrl: './add-monitor.component.html',\n  styleUrls: ['./add-monitor.component.css']\n})\nexport class AddMonitorComponent implements OnInit {\n\n  monitor: IProduct =\n    {\n      productName: '',\n      description: '',\n      price: null,\n      status: '',\n      category: 'monitor',\n      components: [\n        {\n          componentName: '',\n          component_id: 'monitor',\n          componentValues: [\n            {\n              propertyName: 'screen diagonal',\n              propertyValue: ''\n            },\n            {\n              propertyName: 'screen extension',\n              propertyValue: ''\n            },\n            {\n              propertyName: 'frame rate',\n              propertyValue: ''\n            },\n            {\n              propertyName:'display brightness',\n              propertyValue: ''\n            },\n            {\n              propertyName: 'display contrast',\n              propertyValue: ''\n            },\n            {\n              propertyName:  'Matrix reaction time',\n              propertyValue: ''\n            },\n          ]\n        }\n      ],\n    };\n  id: number;\n  message: string;\n  image: File = null;\n  imgURL: any = null;\n  loading: string = null;\n\n  constructor(private productService: ProductService) {\n  }\n\n  onSelectFile(event) {\n    if (event.target.files.length > 0) {\n      let fileType = event.target.files[0].type;\n      if (fileType.match(\"image\") == null) {\n        this.imgURL = null;\n        this.message = \"only images are supported\";\n        return\n      } else {\n        this.message=\"\";\n        const file = event.target.files[0];\n        this.image = file;\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (event) => {\n          this.imgURL = reader.result\n        }\n      }\n    }\n  }\n\n  save(): void {\n    this.loading = 'LOADING...';\n    const formData: FormData = new FormData();\n    formData.append(\"file\", this.image);\n    formData.append(\"product\", JSON.stringify(this.monitor));\n    this.productService.save(formData).subscribe(value => {\n        this.loading = null;\n        this.image = null;\n        this.imgURL = null;\n        alert('Success')\n      },\n      error => {\n        this.loading = null;\n        this.image = null;\n        this.imgURL = null;\n        alert(error.error.message);\n      })\n  }\n  isImageTrue() {\n    return(this.image == null)\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div [ngClass]=\"{main:true}\">\n  <div [ngClass]=\"{formBlock:true}\">\n    <div><h2 [ngClass]=\"{addMonitor:true}\">Add monitor</h2></div>\n    <form [ngClass]=\"{form:true}\" #monitorForm=\"ngForm\">\n      <p [ngClass]=\"{p:true}\">Product name</p>\n      <input [ngClass]=\"{input:true}\" maxlength=\"128\" type=\"text\" name=\"monitorName\" [(ngModel)]=\"monitor.productName\"\n             #productName=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">Product description</p>\n      <textarea [ngClass]=\"{textArea:true}\" maxlength=\"1000\" type=\"text\" name=\"monitorDescription\"\n                [(ngModel)]=\"monitor.description\"\n                #description=\"ngModel\"\n                required></textarea>\n      <p [ngClass]=\"{p:true}\">Product price</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"monitorPrice\"\n             [(ngModel)]=\"monitor.price\" #price=\"ngModel\">\n      <p [ngClass]=\"{p:true}\">Product status</p>\n      <select [ngClass]=\"{select:true}\" name=\"monitorStatus\" [(ngModel)]=\"monitor.status\" #status=\"ngModel\" required>\n        <option>In stock</option>\n        <option>is over</option>\n      </select>\n\n      <p [ngClass]=\"{p:true}\">Monitor type</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"monitorType\" [(ngModel)]=\"monitor.components[0].componentName\"\n             #monitorType=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Screen diagonal</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"screenDiagonal\"\n             [(ngModel)]=\"monitor.components[0].componentValues[0].propertyValue\" #screenDiagonal=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Screen extension</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"screenExtension\"\n             [(ngModel)]=\"monitor.components[0].componentValues[1].propertyValue\" #screenExtension=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Frame rate</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"frameRate\"\n             [(ngModel)]=\"monitor.components[0].componentValues[2].propertyValue\" #frameRate=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Display brightness</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"displayBrightness\"\n             [(ngModel)]=\"monitor.components[0].componentValues[3].propertyValue\" #displayBrightness=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Display contrast</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"displayContrast\"\n             [(ngModel)]=\"monitor.components[0].componentValues[4].propertyValue\" #displayContrast=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Matrix reaction time</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"matrixReactionTime\"\n             [(ngModel)]=\"monitor.components[0].componentValues[5].propertyValue\" #matrixReactionTime=\"ngModel\"\n             required>\n\n\n      <p [ngClass]=\"{p:true}\">Image</p>\n      <input type=\"file\" name=\"productImage\" (change)=\"onSelectFile($event)\">\n      <p [ngClass]=\"{p:true}\">{{message}}</p>\n    </form>\n\n    <button [ngClass]=\"{button:true}\" (click)=\"save()\" [disabled]=\"!monitorForm.valid ||!image||loading\">save</button>\n    <p [ngClass]=\"{p:true}\">{{loading}}</p>\n    <img [src]=\"imgURL\" height=\"200\" *ngIf=\"imgURL\">\n  </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport {IProduct} from \"../../../../product-module/models/productModel\";\nimport {ProductService} from \"../../../../product-module/services/product.service\";\n\n@Component({\n  selector: 'app-add-laptop',\n  templateUrl: './add-laptop.component.html',\n  styleUrls: ['./add-laptop.component.css']\n})\nexport class AddLaptopComponent implements OnInit {\n  laptop: IProduct =\n    {\n      productName: '',\n      description: '',\n      price: null,\n      status: '',\n      category: 'laptop',\n      components: [\n        {\n          componentName: '',\n          component_id: 'cpu',\n          componentValues: [\n            {\n              propertyName: 'cpu clock speed',\n              propertyValue: '',\n            },\n            {\n              propertyName: 'cpu number Of cores',\n              propertyValue: '',\n            }\n          ]\n        },\n        {\n          componentName: '',\n          component_id: 'graphics card',\n          componentValues: [\n            {\n              propertyName: 'graphics card amount Of video memory',\n              propertyValue: ''\n            }\n          ]\n        },\n        {\n          componentName: '',\n          component_id: 'ram',\n          componentValues: [\n            {\n              propertyName: 'amount Of RAM memory',\n              propertyValue: ''\n            }\n          ]\n        },\n        {\n          componentName: '',\n          component_id: 'monitor',\n          componentValues: [\n            {\n              propertyName: 'screen diagonal',\n              propertyValue: ''\n            },\n            {\n              propertyName: 'screen extension',\n              propertyValue: ''\n            }\n            ,\n            {\n              propertyName: 'frame rate',\n              propertyValue: ''\n            }\n          ]\n        },\n        {\n          componentName: '',\n          component_id: 'battery',\n          componentValues: [\n            {\n              propertyName: 'battery capacity',\n              propertyValue: ''\n            },\n\n          ]\n        }\n      ],\n    };\n  id: number;\n  message: string;\n  image: File = null;\n  imgURL: any = null;\n  loading: string = null;\n\n  constructor(private productService: ProductService) {\n  }\n\n  onSelectFile(event) {\n    if (event.target.files.length > 0) {\n      let fileType = event.target.files[0].type;\n      if (fileType.match(\"image\") == null) {\n        this.imgURL = null;\n        this.message = \"only images are supported\";\n        return\n      } else {\n        this.message=\"\";\n        const file = event.target.files[0];\n        this.image = file;\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (event) => {\n          this.imgURL = reader.result\n        }\n      }\n    }\n  }\n\n  save(): void {\n    this.loading = 'LOADING...';\n    const formData: FormData = new FormData();\n    formData.append(\"file\", this.image);\n    formData.append(\"product\", JSON.stringify(this.laptop));\n    this.productService.save(formData).subscribe(value => {\n        this.loading = null;\n        this.image = null;\n        this.imgURL = null;\n        alert('Success')\n      },\n      error => {\n        this.loading = null;\n        this.image = null;\n        this.imgURL = null;\n        alert(error.error.message);\n      })\n  }\n\n  isImageTrue() {\n    return(this.image == null)\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<div [ngClass]=\"{main:true}\">\n  <div [ngClass]=\"{formBlock:true}\">\n    <div><h2 [ngClass]=\"{addLaptop:true}\">Add laptop</h2></div>\n    <form [ngClass]=\"{form:true}\" #laptopForm=\"ngForm\">\n      <p [ngClass]=\"{p:true}\">Product name</p>\n      <input [ngClass]=\"{input:true}\" maxlength=\"128\" type=\"text\" name=\"laptopName\" [(ngModel)]=\"laptop.productName\"\n             #productName=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">Product description</p>\n      <textarea [ngClass]=\"{textArea:true}\" maxlength=\"1000\" type=\"text\" name=\"laptopDescription\"\n                [(ngModel)]=\"laptop.description\"\n                #description=\"ngModel\"\n                required></textarea>\n      <p [ngClass]=\"{p:true}\">Product price</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"laptopPrice\"\n             [(ngModel)]=\"laptop.price\" #price=\"ngModel\">\n      <p [ngClass]=\"{p:true}\">Product status</p>\n      <select [ngClass]=\"{select:true}\" name=\"laptopStatus\" [(ngModel)]=\"laptop.status\" #status=\"ngModel\" required>\n        <option>In stock</option>\n        <option>is over</option>\n      </select>\n\n      <p [ngClass]=\"{p:true}\">Processor name</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"cpuName\" [(ngModel)]=\"laptop.components[0].componentName\" #cpuName=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Processor clock speed</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"cpuClockSpeed\" [(ngModel)]=\"laptop.components[0].componentValues[0].propertyValue\"\n             #cpuClockSpeed=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Processor number of cores</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"cpuNumberOfCores\" [(ngModel)]=\"laptop.components[0].componentValues[1].propertyValue\"\n             #cpuNumberOfCores=\"ngModel\" required>\n\n\n      <p [ngClass]=\"{p:true}\">Graphics card name </p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"graphicsCardName\" [(ngModel)]=\"laptop.components[1].componentName\" #graphicsCardName=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">Graphics card amount of video memory</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"graphicsCardAmountOfVideoMemory\"\n             [(ngModel)]=\"laptop.components[1].componentValues[0].propertyValue\" #graphicsCardAmountOfVideoMemory = \"ngModel\" required>\n\n\n      <p [ngClass]=\"{p:true}\">RAM name</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"ramName\" [(ngModel)]=\"laptop.components[2].componentName\" #ramName = \"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Amount of RAM memory</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"amountOfRamMemory\" [(ngModel)]=\"laptop.components[2].componentValues[0].propertyValue\" #amountOfRamMemory = \"ngModel\" required>\n\n\n      <p [ngClass]=\"{p:true}\">Monitor type</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"monitorType\" [(ngModel)]=\"laptop.components[3].componentName\" #monitorType = \"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">screen diagonal</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"screenDiagonal\" [(ngModel)]=\"laptop.components[3].componentValues[0].propertyValue\" #screenDiagonal = \"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">screen extension</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"screenExtension\" [(ngModel)]=\"laptop.components[3].componentValues[1].propertyValue\" #screenExtension = \"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">frame rate</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"frameRate\" [(ngModel)]=\"laptop.components[3].componentValues[2].propertyValue\" #frameRate = \"ngModel\" required>\n\n\n      <p [ngClass]=\"{p:true}\">Battery type</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"batteryType\" [(ngModel)]=\"laptop.components[4].componentName\" #batteryType = \"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Battery capacity</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"batteryCapacity\" [(ngModel)]=\"laptop.components[4].componentValues[0].propertyValue\" #batteryCapacity = \"ngModel\" required>\n\n\n\n\n\n      <p [ngClass]=\"{p:true}\">Image</p>\n      <input type=\"file\" name=\"productImage\" (change)=\"onSelectFile($event)\">\n      <p [ngClass]=\"{p:true}\">{{message}}</p>\n    </form>\n\n    <button [ngClass]=\"{button:true}\" (click)=\"save()\" [disabled]=\"!laptopForm.valid || isImageTrue()\">save</button>\n    <p [ngClass]=\"{p:true}\">{{loading}}</p>\n    <img [src]=\"imgURL\" height=\"200\" *ngIf=\"imgURL\">\n  </div>\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport {IProduct} from \"../../../../product-module/models/productModel\";\nimport {ProductService} from \"../../../../product-module/services/product.service\";\n\n@Component({\n  selector: 'app-update-monitor',\n  templateUrl: './update-monitor.component.html',\n  styleUrls: ['./update-monitor.component.css']\n})\nexport class UpdateMonitorComponent implements OnInit {\n  productForUpdate: IProduct;\n  image: File = null;\n  imgURL: any = null;\n  loading: string = null;\n  message: string;\n  public host: string = \"http://localhost:8080\";\n\n  constructor(private productService: ProductService,) {\n    this.productForUpdate = history.state.product;\n  }\n\n  onSelectFile(event) {\n    if (event.target.files.length > 0) {\n      let fileType = event.target.files[0].type;\n      if (fileType.match(\"image\") == null) {\n        this.imgURL = null;\n        this.message = \"only images are supported\";\n        return\n      } else {\n        this.message = \"\";\n        const file = event.target.files[0];\n        this.image = file;\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (event) => {\n          this.imgURL = reader.result\n        }\n      }\n    }\n  }\n  public updateProduct() {\n    this.loading = \"LOADING...\";\n    const formData: FormData = new FormData();\n    formData.append(\"file\", this.image);\n    formData.append(\"product\", JSON.stringify(this.productForUpdate));\n    this.productService.update(formData, this.productForUpdate.id).subscribe(value => {\n      this.productForUpdate = value;\n      this.loading = null;\n      this.image = null;\n      this.imgURL = null;\n      alert('Success')\n    }, error => {\n      this.image = null;\n      this.imgURL = null;\n      this.loading = null;\n      alert(error.error.message)\n    });\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"productForUpdate\" [ngClass]=\"{main:true}\">\n    <div><h2 [ngClass]=\"{updateMonitor:true}\">Update monitor</h2></div>\n  <div>\n    <img src=\"{{host+'/product/image/'+productForUpdate.id}}\" alt=\"\" [ngClass]=\"{picture:true}\">\n  </div>\n  <div [ngClass]=\"{formBlock:true}\">\n    <form [ngClass]=\"{form:true}\" #updateMonitorForm=\"ngForm\">\n      <p [ngClass]=\"{p:true}\">Product name</p>\n      <input [ngClass]=\"{input:true}\" maxlength=\"128\" type=\"text\" name=\"productForUpdateName\"\n             [(ngModel)]=\"productForUpdate.productName\"\n             #productName=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">Product description</p>\n      <textarea [ngClass]=\"{textArea:true}\" maxlength=\"1000\" type=\"text\" name=\"productForUpdateDescription\"\n                [(ngModel)]=\"productForUpdate.description\"\n                #description=\"ngModel\"\n                required></textarea>\n      <p [ngClass]=\"{p:true}\">Product price</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"productForUpdatePrice\"\n             [(ngModel)]=\"productForUpdate.price\" #price=\"ngModel\">\n      <p [ngClass]=\"{p:true}\">Product status</p>\n      <select [ngClass]=\"{select:true}\" name=\"productForUpdateStatus\" [(ngModel)]=\"productForUpdate.status\"\n              #status=\"ngModel\" required>\n        <option>In stock</option>\n        <option>is over</option>\n      </select>\n\n      <p [ngClass]=\"{p:true}\">Monitor type</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"productForUpdateType\"\n             [(ngModel)]=\"productForUpdate.components[0].componentName\"\n             #productForUpdateType=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Screen diagonal</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"screenDiagonal\"\n             [(ngModel)]=\"productForUpdate.components[0].componentValues[0].propertyValue\" #screenDiagonal=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">Screen extension</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"screenExtension\"\n             [(ngModel)]=\"productForUpdate.components[0].componentValues[1].propertyValue\" #screenExtension=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">Frame rate</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"frameRate\"\n             [(ngModel)]=\"productForUpdate.components[0].componentValues[2].propertyValue\" #frameRate=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">Display brightness</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"displayBrightness\"\n             [(ngModel)]=\"productForUpdate.components[0].componentValues[3].propertyValue\" #displayBrightness=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">Display contrast</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"displayContrast\"\n             [(ngModel)]=\"productForUpdate.components[0].componentValues[4].propertyValue\" #displayContrast=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">Matrix reaction time</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"matrixReactionTime\"\n             [(ngModel)]=\"productForUpdate.components[0].componentValues[5].propertyValue\" #matrixReactionTime=\"ngModel\"\n             required>\n\n\n      <p [ngClass]=\"{p:true}\">Image</p>\n      <input type=\"file\" name=\"productImage\" (change)=\"onSelectFile($event)\">\n      <p [ngClass]=\"{p:true}\">{{message}}</p>\n    </form>\n\n    <button [ngClass]=\"{button:true}\" (click)=\"updateProduct()\" [disabled]=\"!updateMonitorForm.valid||loading\">update</button>\n    <p [ngClass]=\"{p:true}\">{{loading}}</p>\n    <img [src]=\"imgURL\" height=\"200\" *ngIf=\"imgURL\">\n  </div>\n</div>\n\n\n\n","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-add-product-page',\r\n  templateUrl: './add-product-page.component.html',\r\n  styleUrls: ['./add-product-page.component.css']\r\n})\r\nexport class AddProductPageComponent implements OnInit {\r\n\r\n  constructor(private router: Router) {\r\n    this.toAddComputerPage()\r\n  }\r\n  toAddComputerPage(){\r\n    this.router.navigate(['/admin/addProduct/addComputer'])\r\n  }\r\n  toAddConsolePage(){\r\n    this.router.navigate(['/admin/addProduct/addConsole'])\r\n  }\r\n  toAAddSmartphone(){\r\n    this.router.navigate(['/admin/addProduct/addSmartphone'])\r\n  }\r\n  toAddAddLaptop(){\r\n    this.router.navigate(['/admin/addProduct/addLaptop'])\r\n  }\r\n  toAddAddTVPage(){\r\n    this.router.navigate(['/admin/addProduct/addTV'])\r\n  }\r\n  toAddSmartWatchPage(){\r\n    this.router.navigate(['/admin/addProduct/addSmartWatch'])\r\n  }\r\n  toAddMonitorPage(){\r\n    this.router.navigate(['/admin/addProduct/addMonitor'])\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div [ngClass]=\"{main:true}\">\r\n  <div [ngClass]=\"{navigation:true}\">\r\n    <h3 [ngClass]=\"{categoriesLogo:true}\">Categories</h3>\r\n    <button [ngClass]=\"{button:true}\" (click)=\"toAddComputerPage()\">Add Computer</button>\r\n    <button [ngClass]=\"{button:true}\" (click)=\"toAddConsolePage()\">Add Console</button>\r\n    <button [ngClass]=\"{button:true}\" (click)=\"toAAddSmartphone()\">Add Smartphone</button>\r\n    <button [ngClass]=\"{button:true}\" (click)=\"toAddAddLaptop()\">Add Laptop</button>\r\n    <button [ngClass]=\"{button:true}\" (click)=\"toAddAddTVPage()\">Add TV</button>\r\n    <button [ngClass]=\"{button:true}\" (click)=\"toAddSmartWatchPage()\">Add Smart-watch</button>\r\n    <button [ngClass]=\"{button:true}\" (click)=\"toAddMonitorPage()\">Add Monitor</button>\r\n  </div>\r\n  <div [ngClass]=\"{routerOutlet:true}\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {IProduct} from \"../../../../product-module/models/productModel\";\r\nimport {ProductService} from \"../../../../product-module/services/product.service\";\r\n\r\n@Component({\r\n  selector: 'app-add-computer',\r\n  templateUrl: './add-computer.component.html',\r\n  styleUrls: ['./add-computer.component.css']\r\n})\r\nexport class AddComputerComponent implements OnInit {\r\n  computer: IProduct =\r\n    {\r\n      productName: '',\r\n      description: '',\r\n      price: null,\r\n      status: '',\r\n      category: 'computer',\r\n      components: [\r\n        {\r\n          componentName: '',\r\n          component_id: 'cpu',\r\n          componentValues: [\r\n            {\r\n              propertyName: 'cpu clock speed',\r\n              propertyValue: '',\r\n            },\r\n            {\r\n              propertyName: 'cpu number Of cores',\r\n              propertyValue: '',\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          componentName: '',\r\n          component_id: 'graphics card',\r\n          componentValues: [\r\n            {\r\n              propertyName: 'graphics card amount Of video memory',\r\n              propertyValue: ''\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          componentName: '',\r\n          component_id: 'ram',\r\n          componentValues: [\r\n            {\r\n              propertyName: 'amount Of RAM memory',\r\n              propertyValue: ''\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n    };\r\n  id: number;\r\n  message: string;\r\n  image: File = null;\r\n  imgURL: any = null;\r\n  loading: string = null;\r\n\r\n  constructor(private productService: ProductService) {\r\n  }\r\n\r\n  onSelectFile(event) {\r\n    if (event.target.files.length > 0) {\r\n      let fileType = event.target.files[0].type;\r\n      if (fileType.match(\"image\") == null) {\r\n        this.imgURL = null;\r\n        this.message = \"only images are supported\";\r\n        return\r\n      } else {\r\n        this.message = \"\";\r\n        const file = event.target.files[0];\r\n        this.image = file;\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = (event) => {\r\n          this.imgURL = reader.result\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  save(): void {\r\n    this.loading = 'LOADING...';\r\n    const formData: FormData = new FormData();\r\n    formData.append(\"file\", this.image);\r\n    formData.append(\"product\", JSON.stringify(this.computer));\r\n    this.productService.save(formData).subscribe(value => {\r\n        this.loading = null;\r\n        this.image = null;\r\n        this.imgURL = null;\r\n        alert('Success')\r\n      },\r\n      error => {\r\n        this.loading = null;\r\n        this.image = null;\r\n        this.imgURL = null;\r\n        alert(error.error.message);\r\n      })\r\n  }\r\n  ngOnInit()\r\n    :\r\n    void {\r\n  }\r\n}\r\n","<div [ngClass]=\"{main:true}\">\r\n  <div [ngClass]=\"{formBlock:true}\">\r\n    <div><h2 [ngClass]=\"{addComputer:true}\">Add computer</h2></div>\r\n    <form [ngClass]=\"{form:true}\" #computerForm=\"ngForm\">\r\n      <p [ngClass]=\"{p:true}\">Product name</p>\r\n      <input [ngClass]=\"{input:true}\" maxlength=\"128\" type=\"text\" name=\"computerName\" [(ngModel)]=\"computer.productName\"\r\n             #productName=\"ngModel\"\r\n             required>\r\n      <p [ngClass]=\"{p:true}\">Product description</p>\r\n      <textarea [ngClass]=\"{textArea:true}\" maxlength=\"1000\" type=\"text\" name=\"computerDescription\"\r\n                [(ngModel)]=\"computer.description\"\r\n                #description=\"ngModel\"\r\n                required></textarea>\r\n      <p [ngClass]=\"{p:true}\">Product price</p>\r\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"computerPrice\"\r\n             [(ngModel)]=\"computer.price\" #price=\"ngModel\">\r\n      <p [ngClass]=\"{p:true}\">Product status</p>\r\n      <select [ngClass]=\"{select:true}\" name=\"computerStatus\" [(ngModel)]=\"computer.status\" #status=\"ngModel\" required>\r\n        <option>In stock</option>\r\n        <option>is over</option>\r\n      </select>\r\n\r\n\r\n      <p [ngClass]=\"{p:true}\">Processor name</p>\r\n      <input [ngClass]=\"{input:true}\" maxlength=\"128\" type=\"text\" name=\"cpuName\"\r\n             [(ngModel)]=\"computer.components[0].componentName\"\r\n             #cpuName=\"ngModel\" required>\r\n      <p>Processor clock speed</p>\r\n\r\n      <input [ngClass]=\"{input:true}\" [maxLength]=\"100\" type=\"number\" name=\"cpuClockSpeed\"\r\n             [(ngModel)]=\"computer.components[0].componentValues[0].propertyValue\"\r\n             #cpuClockSpeed=\"ngModel\" required>\r\n      <p [ngClass]=\"{p:true}\">Processor number of cores</p>\r\n      <input [ngClass]=\"{input:true}\" maxlength=\"100\" type=\"number\" name=\"cpuNumberOfCores\"\r\n             [(ngModel)]=\"computer.components[0].componentValues[1].propertyValue\"\r\n             #cpuNumberOfCores=\"ngModel\" required>\r\n\r\n\r\n      <p [ngClass]=\"{p:true}\">Graphics card name </p>\r\n      <input [ngClass]=\"{input:true}\" maxlength=\"128\" type=\"text\" name=\"graphicsCardName\"\r\n             [(ngModel)]=\"computer.components[1].componentName\"\r\n             #graphicsCardName=\"ngModel\" required>\r\n      <p [ngClass]=\"{p:true}\">Graphics card amount of video memory</p>\r\n      <input [ngClass]=\"{input:true}\" maxlength=\"100\" type=\"number\" name=\"graphicsCardAmountOfVideoMemory\"\r\n             [(ngModel)]=\"computer.components[1].componentValues[0].propertyValue\"\r\n             #graphicsCardAmountOfVideoMemory=\"ngModel\" required>\r\n\r\n\r\n      <p [ngClass]=\"{p:true}\">RAM name</p>\r\n      <input [ngClass]=\"{input:true}\" maxlength=\"128\" type=\"text\" name=\"ramName\"\r\n             [(ngModel)]=\"computer.components[2].componentName\"\r\n             #ramName=\"ngModel\" required>\r\n      <p [ngClass]=\"{p:true}\">Amount of RAM memory</p>\r\n      <input [ngClass]=\"{input:true}\" maxlength=\"100\" type=\"number\" name=\"amountOfRamMemory\"\r\n             [(ngModel)]=\"computer.components[2].componentValues[0].propertyValue\"\r\n             #amountOfRamMemory=\"ngModel\" required>\r\n\r\n\r\n      <p [ngClass]=\"{p:true}\">Image</p>\r\n      <input type=\"file\" name=\"productImage\" (change)=\"onSelectFile($event)\">\r\n      <p [ngClass]=\"{p:true}\">{{message}}</p>\r\n    </form>\r\n\r\n    <button [ngClass]=\"{button:true}\" (click)=\"save()\" [disabled]=\"!computerForm.valid ||!image||loading\">save</button>\r\n    <p [ngClass]=\"{p:true}\">{{loading}}</p>\r\n    <img [src]=\"imgURL\" height=\"200\" *ngIf=\"imgURL\">\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport {IProduct} from \"../../../../product-module/models/productModel\";\nimport {ProductService} from \"../../../../product-module/services/product.service\";\n\n@Component({\n  selector: 'app-add-smart-watch',\n  templateUrl: './add-smart-watch.component.html',\n  styleUrls: ['./add-smart-watch.component.css']\n})\nexport class AddSmartWatchComponent implements OnInit {\n  smartWatch: IProduct =\n    {\n      productName: '',\n      description: '',\n      price: null,\n      status: '',\n      category: 'smartWatch',\n      components: [\n        {\n          componentName: '',\n          component_id: 'cpu',\n          componentValues: [\n            {\n              propertyName: 'cpu clock speed',\n              propertyValue: '',\n            },\n            {\n              propertyName: 'cpu number Of cores',\n              propertyValue: '',\n            }\n          ]\n        },\n        {\n          componentName: 'memory',\n          component_id: 'memory',\n          componentValues: [\n            {\n              propertyName: 'amount memory',\n              propertyValue: ''\n            },\n            {\n              propertyName: 'amount Of RAM memory',\n              propertyValue: ''\n            }\n          ]\n        },\n        {\n          componentName: '',\n          component_id: 'display',\n          componentValues: [\n            {\n              propertyName: 'screen diagonal',\n              propertyValue: ''\n            },\n            {\n              propertyName: 'screen extension',\n              propertyValue: ''\n            }\n            ,\n            {\n              propertyName: 'frame rate',\n              propertyValue: ''\n            }\n          ]\n        },\n        {\n          componentName: '',\n          component_id: 'battery',\n          componentValues: [\n            {\n              propertyName: 'battery capacity',\n              propertyValue: ''\n            },\n\n          ]\n        },\n        {\n          componentName: '',\n          component_id: ' operatingSystem',\n          componentValues: [\n            {\n              propertyName: 'operating system version',\n              propertyValue: ''\n            },\n\n          ]\n        }\n      ],\n    };\n  id: number;\n  message: string;\n  image: File = null;\n  imgURL: any = null;\n  loading: string = null;\n\n  constructor(private productService: ProductService) {\n  }\n\n  onSelectFile(event) {\n    if (event.target.files.length > 0) {\n      let fileType = event.target.files[0].type;\n      if (fileType.match(\"image\") == null) {\n        this.imgURL = null;\n        this.message = \"only images are supported\";\n        return\n      } else {\n        this.message=\"\";\n        const file = event.target.files[0];\n        this.image = file;\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (event) => {\n          this.imgURL = reader.result\n        }\n      }\n    }\n  }\n\n  save(): void {\n    this.loading = 'LOADING...';\n    const formData: FormData = new FormData();\n    formData.append(\"file\", this.image);\n    formData.append(\"product\", JSON.stringify(this.smartWatch));\n    this.productService.save(formData).subscribe(value => {\n        this.loading = null;\n        this.image = null;\n        this.imgURL = null;\n        alert('Success')\n      },\n      error => {\n        this.loading = null;\n        this.image = null;\n        this.imgURL = null;\n        alert(error.error.message);\n      })\n  }\n  isImageTrue() {\n    return(this.image == null)\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<div [ngClass]=\"{main:true}\">\n  <div [ngClass]=\"{formBlock:true}\">\n    <div><h2 [ngClass]=\"{addSmartWatch:true}\">Add smartWatch</h2></div>\n    <form [ngClass]=\"{form:true}\" #smartWatchForm=\"ngForm\">\n      <p [ngClass]=\"{p:true}\">Product name</p>\n      <input [ngClass]=\"{input:true}\" maxlength=\"128\" type=\"text\" name=\"smartWatchName\"\n             [(ngModel)]=\"smartWatch.productName\"\n             #productName=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">Product description</p>\n      <textarea [ngClass]=\"{textArea:true}\" maxlength=\"1000\" type=\"text\" name=\"smartWatchDescription\"\n                [(ngModel)]=\"smartWatch.description\"\n                #description=\"ngModel\"\n                required></textarea>\n      <p [ngClass]=\"{p:true}\">Product price</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"smartWatchPrice\"\n             [(ngModel)]=\"smartWatch.price\" #price=\"ngModel\">\n      <p [ngClass]=\"{p:true}\">Product status</p>\n      <select [ngClass]=\"{select:true}\" name=\"smartWatchStatus\" [(ngModel)]=\"smartWatch.status\" #status=\"ngModel\"\n              required>\n        <option>In stock</option>\n        <option>is over</option>\n      </select>\n\n\n      <p [ngClass]=\"{p:true}\">Processor name</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"cpuName\" [(ngModel)]=\"smartWatch.components[0].componentName\"\n             #cpuName=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Processor clock speed</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"cpuClockSpeed\"\n             [(ngModel)]=\"smartWatch.components[0].componentValues[0].propertyValue\" #cpuClockSpeed=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Processor number of cores</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"cpuNumberOfCores\"\n             [(ngModel)]=\"smartWatch.components[0].componentValues[1].propertyValue\" #cpuNumberOfCores=\"ngModel\"\n             required>\n\n\n      <p [ngClass]=\"{p:true}\">Amount of memory</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"amountOfMemory\"\n             [(ngModel)]=\"smartWatch.components[1].componentValues[0].propertyValue\" #amountOfMemory=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Amount of RAM memory</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"amountOfRamMemory\"\n             [(ngModel)]=\"smartWatch.components[1].componentValues[1].propertyValue\" #amountOfRamMemory=\"ngModel\"\n             required>\n\n\n      <p [ngClass]=\"{p:true}\">Display type</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"monitorType\"\n             [(ngModel)]=\"smartWatch.components[2].componentName\" #monitorType=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">screen diagonal</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"screenDiagonal\"\n             [(ngModel)]=\"smartWatch.components[2].componentValues[0].propertyValue\" #screenDiagonal=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">screen extension</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"screenExtension\"\n             [(ngModel)]=\"smartWatch.components[2].componentValues[1].propertyValue\" #screenExtension=\"ngModel\"\n             required>\n      <p [ngClass]=\"{p:true}\">frame rate</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"frameRate\"\n             [(ngModel)]=\"smartWatch.components[2].componentValues[2].propertyValue\" #frameRate=\"ngModel\" required>\n\n\n      <p [ngClass]=\"{p:true}\">Battery type</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"batteryType\"\n             [(ngModel)]=\"smartWatch.components[3].componentName\" #batteryType=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Battery capacity</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"batteryCapacity\"\n             [(ngModel)]=\"smartWatch.components[3].componentValues[0].propertyValue\" #batteryCapacity=\"ngModel\"\n             required>\n\n\n      <p [ngClass]=\"{p:true}\">Operating system type</p>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"operatingSystemType\"\n             [(ngModel)]=\"smartWatch.components[4].componentName\" #operatingSystemType=\"ngModel\" required>\n      <p [ngClass]=\"{p:true}\">Operating system version</p>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"operatingSystemVersion\"\n             [(ngModel)]=\"smartWatch.components[4].componentValues[0].propertyValue\" #operatingSystemVersion=\"ngModel\"\n             required>\n\n\n      <p [ngClass]=\"{p:true}\">Image</p>\n      <input type=\"file\" name=\"productImage\" (change)=\"onSelectFile($event)\">\n      <p [ngClass]=\"{p:true}\">{{message}}</p>\n    </form>\n\n    <button [ngClass]=\"{button:true}\" (click)=\"save()\" [disabled]=\"!smartWatchForm.valid ||!image||loading\">save</button>\n    <p [ngClass]=\"{p:true}\">{{loading}}</p>\n    <img [src]=\"imgURL\" height=\"200\" *ngIf=\"imgURL\">\n  </div>\n</div>\n\n\n"],"sourceRoot":"webpack:///"}