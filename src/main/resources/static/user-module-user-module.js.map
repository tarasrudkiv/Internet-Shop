{"version":3,"sources":["./src/app/user-module/components/update-user/update-user.component.ts","./src/app/user-module/components/update-user/update-user.component.html","./src/app/user-module/components/user-page/user-page.component.ts","./src/app/user-module/components/user-page/user-page.component.html","./src/app/order-module/services/order.service.ts","./src/app/user-module/user.module.ts"],"names":[],"mappings":"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","file":"user-module-user-module.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {IUser} from \"../../model/userModel\";\nimport {UserService} from \"../../services/user.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-update-user',\n  templateUrl: './update-user.component.html',\n  styleUrls: ['./update-user.component.css']\n})\nexport class UpdateUserComponent implements OnInit {\n  loading = null;\n  message = null;\n  currentUsername;\n  userForUpdate: IUser;\n\n  constructor(private userService: UserService, private router: Router) {\n    this.userForUpdate = history.state.user;\n    this.currentUsername = this.userForUpdate.username\n  }\n\n  public checkUsername() {\n    if (this.userForUpdate.username !== this.currentUsername) {\n      this.message = \"If you change your username, you will have to log in again\"\n    } else {\n      this.message = null;\n    }\n  }\n\n  public updateUser() {\n    this.loading = \"LOADING...\";\n    this.userService.updateUser(this.userForUpdate).subscribe(value => {\n      this.userForUpdate = value;\n      if (this.userForUpdate.username !== localStorage.getItem(\"userName\")) {\n        alert(\"The username has been changed, you must log in again!\");\n        this.router.navigate([\"/authentication\"])\n      }\n      else {\n        localStorage.removeItem(\"userName\");\n        localStorage.setItem(\"userName\", value.username);\n        this.loading = null;\n        alert('Success');\n        this.router.navigate([\"userPage\"])\n      }\n    }, error => {\n      alert(error.error.message);\n      this.loading = null;\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div [ngClass]=\"{main:true}\">\n  <div [ngClass]=\"{formBlock:true}\">\n    <div><h2 [ngClass]=\"{update:true}\">Update</h2></div>\n    <form [ngClass]=\"{form:true}\" #updateUserForm=\"ngForm\">\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"firstName\" placeholder=\"First name\"\n             [(ngModel)]=\"userForUpdate.firstName\"\n             #firstName=\"ngModel\"\n             required>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"lastName\" placeholder=\"Last name\"\n             [(ngModel)]=\"userForUpdate.lastName\"\n             #lastName=\"ngModel\"\n             required>\n      <input [ngClass]=\"{input:true}\" type=\"text\" name=\"Username\" placeholder=\"Username\" (change)=\"checkUsername()\"\n             (keyup)=\"checkUsername()\"\n             [(ngModel)]=\"userForUpdate.username\"\n             #username=\"ngModel\"\n             required>\n      <p [ngClass]=\"{message:true}\">{{message}}</p>\n      <input [ngClass]=\"{input:true}\" type=\"email\" name=\"email\" placeholder=\"Email\" [(ngModel)]=\"userForUpdate.email\"\n             #email=\"ngModel\" required>\n      <input [ngClass]=\"{input:true}\" type=\"number\" name=\"number\" placeholder=\"Phone number\"\n             [(ngModel)]=\"userForUpdate.phoneNumber\" #phoneNumber=\"ngModel\"\n             required>\n    </form>\n    <button [ngClass]=\"{button:true}\" (click)=\"updateUser()\" [disabled]=\"!updateUserForm.valid||loading\">\n      Update\n    </button>\n    <p>{{loading}}</p>\n  </div>\n</div>\n\n\n\n\n\n","import {Component, OnInit} from '@angular/core';\nimport {IUser} from \"../../model/userModel\";\nimport {UserService} from \"../../services/user.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-user-page',\n  templateUrl: './user-page.component.html',\n  styleUrls: ['./user-page.component.css']\n})\nexport class UserPageComponent implements OnInit {\n\n  user: IUser;\n  role: string;\n\n  constructor(private userService: UserService, private router: Router) {\n    this.userService.getOneUser(localStorage.getItem('userName')).subscribe(value => {\n      this.user = value;\n      localStorage.setItem('role', this.user.role);\n      localStorage.setItem('id', JSON.stringify(this.user.id));\n      this.role = this.user.role.slice(5);\n      this.toBasket();\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  isAdminOrManager(): boolean {\n    return (localStorage.getItem('role') === 'ROLE_ADMIN' || localStorage.getItem('role') === 'ROLE_MANAGER');\n  }\n\n  toAdminPage(): void {\n    this.router.navigate(['/userPage/admin']);\n  }\n\n  toUpdatePage(user: IUser): void {\n    this.router.navigate(['/userPage/updateUser'], {state: {user}});\n  }\n\n  toOrdersPage(): void {\n    this.router.navigate(['/userPage/order/myOrders']);\n  }\n\n  toBasket(): void {\n    this.router.navigate(['/userPage/basket']);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div [ngClass]=\"{main:true}\" *ngIf=\"user\">\n  <div [ngClass]=\"{userInfoAndAdminButton:true}\">\n    <div [ngClass]=\"{adminButtonBlock:true}\">\n      <button [ngClass]=\"{adminButton:true}\" *ngIf=\"isAdminOrManager()\" (click)=\"toAdminPage()\">Admin Page</button>\n    </div>\n    <div [ngClass]=\"{userInfo:true}\">\n      <h2 [ngClass]=\"{name:true}\">{{user.firstName}} {{user.lastName}}</h2>\n      <h3> User name - {{user.username}}</h3>\n      <h3> Role - {{role}}</h3>\n      <h3> Phone number -  {{user.phoneNumber}}</h3>\n      <h3> Email - {{user.email}}</h3>\n      <button [ngClass]=\"{updateButton:true}\" (click)=\"toUpdatePage(user)\">Update</button>\n    </div>\n  </div>\n  <div [ngClass]=\"{buttonsAndLine:true}\">\n    <div [ngClass]=\"{buttons:true}\">\n      <button [ngClass]=\"{basketButton:true}\" (click)=\"toBasket()\">Basket</button>\n      <button [ngClass]=\"{ordersButton:true}\" (click)=\"toOrdersPage()\">My orders</button>\n    </div>\n    <div [ngClass]=\"{line:true}\"></div>\n  </div>\n  <router-outlet></router-outlet>\n</div>\n","import {Injectable} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {IOrderedProduct} from \"../models/orderedProductModel\";\nimport {IOrderPage} from \"../models/orderPageModel\";\nimport {IStatisticData} from \"../models/statisticDataModel\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n  url=\"http://localhost:8080\";\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  public orderProduct(orderedProduct: IOrderedProduct): Observable<IOrderedProduct> {\n    let token = localStorage.getItem(\"token\");\n    let tokenSTR = 'Bearer ' + token;\n    const headers = new HttpHeaders().set(\"Authorization\", tokenSTR);\n    return (this.httpClient.post<IOrderedProduct>( this.url + \"/order\", orderedProduct, {headers}))\n  }\n\n  public getAllOrders(page: number): Observable<IOrderPage> {\n    let token = localStorage.getItem(\"token\");\n    let tokenSTR = 'Bearer ' + token;\n    const headers = new HttpHeaders().set(\"Authorization\", tokenSTR);\n    return (this.httpClient.get<IOrderPage>(this.url + `/order/?page=${page}`, {headers}))\n  }\n\n  public getAllOrdersByUserId(userId: number, page: number): Observable<IOrderPage> {\n    let token = localStorage.getItem(\"token\");\n    let tokenSTR = 'Bearer ' + token;\n    const headers = new HttpHeaders().set(\"Authorization\", tokenSTR);\n    return (this.httpClient.get<IOrderPage>(this.url + `/order/${userId}/?page=${page}`, {headers}))\n  }\n\n  public getStatisticDataForAllTime(): Observable<IStatisticData> {\n    let token = localStorage.getItem(\"token\");\n    let tokenSTR = 'Bearer ' + token;\n    const headers = new HttpHeaders().set(\"Authorization\", tokenSTR);\n    return (this.httpClient.get<IStatisticData>(this.url + `/order/statistics`, {headers}))\n  }\n\n  public getStatisticDataForPeriodOfTime(periodOfTime:string): Observable<IStatisticData> {\n    let token = localStorage.getItem(\"token\");\n    let tokenSTR = 'Bearer ' + token;\n    const headers = new HttpHeaders().set(\"Authorization\", tokenSTR);\n    return (this.httpClient.get<IStatisticData>(this.url + `/order/statistics/${periodOfTime}`, {headers}))\n  }\n\n  public findOrderByStatus(status: string, page: number): Observable<IOrderPage> {\n    let token = localStorage.getItem(\"token\");\n    let tokenSTR = 'Bearer ' + token;\n    const headers = new HttpHeaders().set(\"Authorization\", tokenSTR);\n    return (this.httpClient.get<IOrderPage>(this.url + `/order/status/${status}/?page=${page}`, {headers}))\n  }\n\n  public findOrderByProductName(productName: string, page: number): Observable<IOrderPage> {\n    let token = localStorage.getItem(\"token\");\n    let tokenSTR = 'Bearer ' + token;\n    const headers = new HttpHeaders().set(\"Authorization\", tokenSTR);\n    return (this.httpClient.get<IOrderPage>(this.url + `/order/productName/${productName}/?page=${page}`, {headers}))\n  }\n\n  public setStatus(status: string, id: number): Observable<IOrderedProduct> {\n    let token = localStorage.getItem(\"token\");\n    let tokenSTR = 'Bearer ' + token;\n    const headers = new HttpHeaders().set(\"Authorization\", tokenSTR);\n    return (this.httpClient.put<IOrderedProduct>(this.url + `/order/status/${id}`, status, {headers}))\n  }\n\n  public deleteOrder(orderId: number) {\n    let token = localStorage.getItem(\"token\");\n    let tokenSTR = 'Bearer ' + token;\n    const headers = new HttpHeaders().set(\"Authorization\", tokenSTR);\n    return (this.httpClient.delete(this.url + `/order/delete/${orderId}`, {headers}).subscribe())\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AllUsersComponent} from './components/all-users/all-users.component';\nimport {UserCardComponent} from './components/user-card/user-card.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {HttpClientModule} from '@angular/common/http';\nimport {RouterModule, Routes} from '@angular/router';\nimport {UserPageComponent} from \"./components/user-page/user-page.component\";\nimport {FormsModule} from \"@angular/forms\";\nimport {MyOrdersComponent} from \"../order-module/components/my-orders/my-orders.component\";\nimport {BasketComponent} from \"../components/basket/basket.component\";\nimport {UpdateUserComponent} from './components/update-user/update-user.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: UserPageComponent, children: [\n      {path: 'order/myOrders', component: MyOrdersComponent},\n      {path: 'basket', component: BasketComponent}\n    ]\n  },\n  {path: 'admin', loadChildren: () => import('../admin-module/admin.module').then(m => m.AdminModule)},\n  {path: 'updateUser', component: UpdateUserComponent}\n];\n\n@NgModule({\n  declarations: [\n    AllUsersComponent,\n    UserCardComponent,\n    UserPageComponent,\n    UpdateUserComponent,\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    NgbModule,\n    RouterModule.forChild(routes),\n    FormsModule\n  ]\n})\nexport class UserModule {\n}\n"],"sourceRoot":"webpack:///"}